/*
Binance Portfolio Margin API

OpenAPI specification for Binance exchange - Pmargin API

API version: 0.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmargin

import (
	"encoding/json"
)

// checks if the GetUmApiTradingStatusV1RespIndicators type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUmApiTradingStatusV1RespIndicators{}

// GetUmApiTradingStatusV1RespIndicators struct for GetUmApiTradingStatusV1RespIndicators
type GetUmApiTradingStatusV1RespIndicators struct {
	BTCUSDT []GetUmApiTradingStatusV1RespIndicatorsBTCUSDTInner `json:"BTCUSDT,omitempty"`
}

// NewGetUmApiTradingStatusV1RespIndicators instantiates a new GetUmApiTradingStatusV1RespIndicators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUmApiTradingStatusV1RespIndicators() *GetUmApiTradingStatusV1RespIndicators {
	this := GetUmApiTradingStatusV1RespIndicators{}
	return &this
}

// NewGetUmApiTradingStatusV1RespIndicatorsWithDefaults instantiates a new GetUmApiTradingStatusV1RespIndicators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUmApiTradingStatusV1RespIndicatorsWithDefaults() *GetUmApiTradingStatusV1RespIndicators {
	this := GetUmApiTradingStatusV1RespIndicators{}
	return &this
}

// GetBTCUSDT returns the BTCUSDT field value if set, zero value otherwise.
func (o *GetUmApiTradingStatusV1RespIndicators) GetBTCUSDT() []GetUmApiTradingStatusV1RespIndicatorsBTCUSDTInner {
	if o == nil || IsNil(o.BTCUSDT) {
		var ret []GetUmApiTradingStatusV1RespIndicatorsBTCUSDTInner
		return ret
	}
	return o.BTCUSDT
}

// GetBTCUSDTOk returns a tuple with the BTCUSDT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUmApiTradingStatusV1RespIndicators) GetBTCUSDTOk() ([]GetUmApiTradingStatusV1RespIndicatorsBTCUSDTInner, bool) {
	if o == nil || IsNil(o.BTCUSDT) {
		return nil, false
	}
	return o.BTCUSDT, true
}

// HasBTCUSDT returns a boolean if a field has been set.
func (o *GetUmApiTradingStatusV1RespIndicators) HasBTCUSDT() bool {
	if o != nil && !IsNil(o.BTCUSDT) {
		return true
	}

	return false
}

// SetBTCUSDT gets a reference to the given []GetUmApiTradingStatusV1RespIndicatorsBTCUSDTInner and assigns it to the BTCUSDT field.
func (o *GetUmApiTradingStatusV1RespIndicators) SetBTCUSDT(v []GetUmApiTradingStatusV1RespIndicatorsBTCUSDTInner) {
	o.BTCUSDT = v
}

func (o GetUmApiTradingStatusV1RespIndicators) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUmApiTradingStatusV1RespIndicators) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BTCUSDT) {
		toSerialize["BTCUSDT"] = o.BTCUSDT
	}
	return toSerialize, nil
}

type NullableGetUmApiTradingStatusV1RespIndicators struct {
	value *GetUmApiTradingStatusV1RespIndicators
	isSet bool
}

func (v NullableGetUmApiTradingStatusV1RespIndicators) Get() *GetUmApiTradingStatusV1RespIndicators {
	return v.value
}

func (v *NullableGetUmApiTradingStatusV1RespIndicators) Set(val *GetUmApiTradingStatusV1RespIndicators) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUmApiTradingStatusV1RespIndicators) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUmApiTradingStatusV1RespIndicators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUmApiTradingStatusV1RespIndicators(val *GetUmApiTradingStatusV1RespIndicators) *NullableGetUmApiTradingStatusV1RespIndicators {
	return &NullableGetUmApiTradingStatusV1RespIndicators{value: val, isSet: true}
}

func (v NullableGetUmApiTradingStatusV1RespIndicators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUmApiTradingStatusV1RespIndicators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


