/*
Binance Copy Trading API

OpenAPI specification for Binance exchange - Copytrading API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package copytrading

import (
	"encoding/json"
)

// checks if the CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner{}

// CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner struct for CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner
type CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner struct {
	BaseAsset *string `json:"baseAsset,omitempty"`
	QuoteAsset *string `json:"quoteAsset,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
}

// NewCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner instantiates a new CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner() *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner {
	this := CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner{}
	return &this
}

// NewCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInnerWithDefaults instantiates a new CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInnerWithDefaults() *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner {
	this := CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner{}
	return &this
}

// GetBaseAsset returns the BaseAsset field value if set, zero value otherwise.
func (o *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) GetBaseAsset() string {
	if o == nil || IsNil(o.BaseAsset) {
		var ret string
		return ret
	}
	return *o.BaseAsset
}

// GetBaseAssetOk returns a tuple with the BaseAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) GetBaseAssetOk() (*string, bool) {
	if o == nil || IsNil(o.BaseAsset) {
		return nil, false
	}
	return o.BaseAsset, true
}

// HasBaseAsset returns a boolean if a field has been set.
func (o *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) HasBaseAsset() bool {
	if o != nil && !IsNil(o.BaseAsset) {
		return true
	}

	return false
}

// SetBaseAsset gets a reference to the given string and assigns it to the BaseAsset field.
func (o *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) SetBaseAsset(v string) {
	o.BaseAsset = &v
}

// GetQuoteAsset returns the QuoteAsset field value if set, zero value otherwise.
func (o *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) GetQuoteAsset() string {
	if o == nil || IsNil(o.QuoteAsset) {
		var ret string
		return ret
	}
	return *o.QuoteAsset
}

// GetQuoteAssetOk returns a tuple with the QuoteAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) GetQuoteAssetOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteAsset) {
		return nil, false
	}
	return o.QuoteAsset, true
}

// HasQuoteAsset returns a boolean if a field has been set.
func (o *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) HasQuoteAsset() bool {
	if o != nil && !IsNil(o.QuoteAsset) {
		return true
	}

	return false
}

// SetQuoteAsset gets a reference to the given string and assigns it to the QuoteAsset field.
func (o *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) SetQuoteAsset(v string) {
	o.QuoteAsset = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) SetSymbol(v string) {
	o.Symbol = &v
}

func (o CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseAsset) {
		toSerialize["baseAsset"] = o.BaseAsset
	}
	if !IsNil(o.QuoteAsset) {
		toSerialize["quoteAsset"] = o.QuoteAsset
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	return toSerialize, nil
}

type NullableCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner struct {
	value *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner
	isSet bool
}

func (v NullableCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) Get() *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner {
	return v.value
}

func (v *NullableCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) Set(val *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner(val *CopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) *NullableCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner {
	return &NullableCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner{value: val, isSet: true}
}

func (v NullableCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopytradingGetCopyTradingFuturesLeadSymbolV1RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


