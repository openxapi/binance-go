/*
Binance Spot API

OpenAPI specification for Binance cryptocurrency exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// SpotGetExchangeInfoV3RespExchangeFiltersInner - struct for SpotGetExchangeInfoV3RespExchangeFiltersInner
type SpotGetExchangeInfoV3RespExchangeFiltersInner struct {
	SpotExchangeFilterExchangeMaxNumAlgoOrders *SpotExchangeFilterExchangeMaxNumAlgoOrders
	SpotExchangeFilterExchangeMaxNumIcebergOrders *SpotExchangeFilterExchangeMaxNumIcebergOrders
	SpotExchangeFilterExchangeMaxNumOrder *SpotExchangeFilterExchangeMaxNumOrder
}

// SpotExchangeFilterExchangeMaxNumAlgoOrdersAsSpotGetExchangeInfoV3RespExchangeFiltersInner is a convenience function that returns SpotExchangeFilterExchangeMaxNumAlgoOrders wrapped in SpotGetExchangeInfoV3RespExchangeFiltersInner
func SpotExchangeFilterExchangeMaxNumAlgoOrdersAsSpotGetExchangeInfoV3RespExchangeFiltersInner(v *SpotExchangeFilterExchangeMaxNumAlgoOrders) SpotGetExchangeInfoV3RespExchangeFiltersInner {
	return SpotGetExchangeInfoV3RespExchangeFiltersInner{
		SpotExchangeFilterExchangeMaxNumAlgoOrders: v,
	}
}

// SpotExchangeFilterExchangeMaxNumIcebergOrdersAsSpotGetExchangeInfoV3RespExchangeFiltersInner is a convenience function that returns SpotExchangeFilterExchangeMaxNumIcebergOrders wrapped in SpotGetExchangeInfoV3RespExchangeFiltersInner
func SpotExchangeFilterExchangeMaxNumIcebergOrdersAsSpotGetExchangeInfoV3RespExchangeFiltersInner(v *SpotExchangeFilterExchangeMaxNumIcebergOrders) SpotGetExchangeInfoV3RespExchangeFiltersInner {
	return SpotGetExchangeInfoV3RespExchangeFiltersInner{
		SpotExchangeFilterExchangeMaxNumIcebergOrders: v,
	}
}

// SpotExchangeFilterExchangeMaxNumOrderAsSpotGetExchangeInfoV3RespExchangeFiltersInner is a convenience function that returns SpotExchangeFilterExchangeMaxNumOrder wrapped in SpotGetExchangeInfoV3RespExchangeFiltersInner
func SpotExchangeFilterExchangeMaxNumOrderAsSpotGetExchangeInfoV3RespExchangeFiltersInner(v *SpotExchangeFilterExchangeMaxNumOrder) SpotGetExchangeInfoV3RespExchangeFiltersInner {
	return SpotGetExchangeInfoV3RespExchangeFiltersInner{
		SpotExchangeFilterExchangeMaxNumOrder: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *SpotGetExchangeInfoV3RespExchangeFiltersInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into SpotExchangeFilterExchangeMaxNumAlgoOrders
	err = newStrictDecoder(data).Decode(&dst.SpotExchangeFilterExchangeMaxNumAlgoOrders)
	if err == nil {
		jsonSpotExchangeFilterExchangeMaxNumAlgoOrders, _ := json.Marshal(dst.SpotExchangeFilterExchangeMaxNumAlgoOrders)
		if string(jsonSpotExchangeFilterExchangeMaxNumAlgoOrders) == "{}" { // empty struct
			dst.SpotExchangeFilterExchangeMaxNumAlgoOrders = nil
		} else {
			if err = validator.Validate(dst.SpotExchangeFilterExchangeMaxNumAlgoOrders); err != nil {
				dst.SpotExchangeFilterExchangeMaxNumAlgoOrders = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotExchangeFilterExchangeMaxNumAlgoOrders = nil
	}

	// try to unmarshal data into SpotExchangeFilterExchangeMaxNumIcebergOrders
	err = newStrictDecoder(data).Decode(&dst.SpotExchangeFilterExchangeMaxNumIcebergOrders)
	if err == nil {
		jsonSpotExchangeFilterExchangeMaxNumIcebergOrders, _ := json.Marshal(dst.SpotExchangeFilterExchangeMaxNumIcebergOrders)
		if string(jsonSpotExchangeFilterExchangeMaxNumIcebergOrders) == "{}" { // empty struct
			dst.SpotExchangeFilterExchangeMaxNumIcebergOrders = nil
		} else {
			if err = validator.Validate(dst.SpotExchangeFilterExchangeMaxNumIcebergOrders); err != nil {
				dst.SpotExchangeFilterExchangeMaxNumIcebergOrders = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotExchangeFilterExchangeMaxNumIcebergOrders = nil
	}

	// try to unmarshal data into SpotExchangeFilterExchangeMaxNumOrder
	err = newStrictDecoder(data).Decode(&dst.SpotExchangeFilterExchangeMaxNumOrder)
	if err == nil {
		jsonSpotExchangeFilterExchangeMaxNumOrder, _ := json.Marshal(dst.SpotExchangeFilterExchangeMaxNumOrder)
		if string(jsonSpotExchangeFilterExchangeMaxNumOrder) == "{}" { // empty struct
			dst.SpotExchangeFilterExchangeMaxNumOrder = nil
		} else {
			if err = validator.Validate(dst.SpotExchangeFilterExchangeMaxNumOrder); err != nil {
				dst.SpotExchangeFilterExchangeMaxNumOrder = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotExchangeFilterExchangeMaxNumOrder = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.SpotExchangeFilterExchangeMaxNumAlgoOrders = nil
		dst.SpotExchangeFilterExchangeMaxNumIcebergOrders = nil
		dst.SpotExchangeFilterExchangeMaxNumOrder = nil

		return fmt.Errorf("data matches more than one schema in oneOf(SpotGetExchangeInfoV3RespExchangeFiltersInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(SpotGetExchangeInfoV3RespExchangeFiltersInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SpotGetExchangeInfoV3RespExchangeFiltersInner) MarshalJSON() ([]byte, error) {
	if src.SpotExchangeFilterExchangeMaxNumAlgoOrders != nil {
		return json.Marshal(&src.SpotExchangeFilterExchangeMaxNumAlgoOrders)
	}

	if src.SpotExchangeFilterExchangeMaxNumIcebergOrders != nil {
		return json.Marshal(&src.SpotExchangeFilterExchangeMaxNumIcebergOrders)
	}

	if src.SpotExchangeFilterExchangeMaxNumOrder != nil {
		return json.Marshal(&src.SpotExchangeFilterExchangeMaxNumOrder)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SpotGetExchangeInfoV3RespExchangeFiltersInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.SpotExchangeFilterExchangeMaxNumAlgoOrders != nil {
		return obj.SpotExchangeFilterExchangeMaxNumAlgoOrders
	}

	if obj.SpotExchangeFilterExchangeMaxNumIcebergOrders != nil {
		return obj.SpotExchangeFilterExchangeMaxNumIcebergOrders
	}

	if obj.SpotExchangeFilterExchangeMaxNumOrder != nil {
		return obj.SpotExchangeFilterExchangeMaxNumOrder
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj SpotGetExchangeInfoV3RespExchangeFiltersInner) GetActualInstanceValue() (interface{}) {
	if obj.SpotExchangeFilterExchangeMaxNumAlgoOrders != nil {
		return *obj.SpotExchangeFilterExchangeMaxNumAlgoOrders
	}

	if obj.SpotExchangeFilterExchangeMaxNumIcebergOrders != nil {
		return *obj.SpotExchangeFilterExchangeMaxNumIcebergOrders
	}

	if obj.SpotExchangeFilterExchangeMaxNumOrder != nil {
		return *obj.SpotExchangeFilterExchangeMaxNumOrder
	}

	// all schemas are nil
	return nil
}

type NullableSpotGetExchangeInfoV3RespExchangeFiltersInner struct {
	value *SpotGetExchangeInfoV3RespExchangeFiltersInner
	isSet bool
}

func (v NullableSpotGetExchangeInfoV3RespExchangeFiltersInner) Get() *SpotGetExchangeInfoV3RespExchangeFiltersInner {
	return v.value
}

func (v *NullableSpotGetExchangeInfoV3RespExchangeFiltersInner) Set(val *SpotGetExchangeInfoV3RespExchangeFiltersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotGetExchangeInfoV3RespExchangeFiltersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotGetExchangeInfoV3RespExchangeFiltersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotGetExchangeInfoV3RespExchangeFiltersInner(val *SpotGetExchangeInfoV3RespExchangeFiltersInner) *NullableSpotGetExchangeInfoV3RespExchangeFiltersInner {
	return &NullableSpotGetExchangeInfoV3RespExchangeFiltersInner{value: val, isSet: true}
}

func (v NullableSpotGetExchangeInfoV3RespExchangeFiltersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotGetExchangeInfoV3RespExchangeFiltersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


