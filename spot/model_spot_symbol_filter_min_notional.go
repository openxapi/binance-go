/*
Binance Spot API

OpenAPI specification for Binance cryptocurrency exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the SpotSymbolFilterMinNotional type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotSymbolFilterMinNotional{}

// SpotSymbolFilterMinNotional struct for SpotSymbolFilterMinNotional
type SpotSymbolFilterMinNotional struct {
	ApplyToMarket *bool `json:"applyToMarket,omitempty"`
	AvgPriceMins *int32 `json:"avgPriceMins,omitempty"`
	FilterType *string `json:"filterType,omitempty"`
	MinNotionalValue *string `json:"minNotionalValue,omitempty"`
}

// NewSpotSymbolFilterMinNotional instantiates a new SpotSymbolFilterMinNotional object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotSymbolFilterMinNotional() *SpotSymbolFilterMinNotional {
	this := SpotSymbolFilterMinNotional{}
	return &this
}

// NewSpotSymbolFilterMinNotionalWithDefaults instantiates a new SpotSymbolFilterMinNotional object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotSymbolFilterMinNotionalWithDefaults() *SpotSymbolFilterMinNotional {
	this := SpotSymbolFilterMinNotional{}
	return &this
}

// GetApplyToMarket returns the ApplyToMarket field value if set, zero value otherwise.
func (o *SpotSymbolFilterMinNotional) GetApplyToMarket() bool {
	if o == nil || IsNil(o.ApplyToMarket) {
		var ret bool
		return ret
	}
	return *o.ApplyToMarket
}

// GetApplyToMarketOk returns a tuple with the ApplyToMarket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterMinNotional) GetApplyToMarketOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplyToMarket) {
		return nil, false
	}
	return o.ApplyToMarket, true
}

// HasApplyToMarket returns a boolean if a field has been set.
func (o *SpotSymbolFilterMinNotional) HasApplyToMarket() bool {
	if o != nil && !IsNil(o.ApplyToMarket) {
		return true
	}

	return false
}

// SetApplyToMarket gets a reference to the given bool and assigns it to the ApplyToMarket field.
func (o *SpotSymbolFilterMinNotional) SetApplyToMarket(v bool) {
	o.ApplyToMarket = &v
}

// GetAvgPriceMins returns the AvgPriceMins field value if set, zero value otherwise.
func (o *SpotSymbolFilterMinNotional) GetAvgPriceMins() int32 {
	if o == nil || IsNil(o.AvgPriceMins) {
		var ret int32
		return ret
	}
	return *o.AvgPriceMins
}

// GetAvgPriceMinsOk returns a tuple with the AvgPriceMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterMinNotional) GetAvgPriceMinsOk() (*int32, bool) {
	if o == nil || IsNil(o.AvgPriceMins) {
		return nil, false
	}
	return o.AvgPriceMins, true
}

// HasAvgPriceMins returns a boolean if a field has been set.
func (o *SpotSymbolFilterMinNotional) HasAvgPriceMins() bool {
	if o != nil && !IsNil(o.AvgPriceMins) {
		return true
	}

	return false
}

// SetAvgPriceMins gets a reference to the given int32 and assigns it to the AvgPriceMins field.
func (o *SpotSymbolFilterMinNotional) SetAvgPriceMins(v int32) {
	o.AvgPriceMins = &v
}

// GetFilterType returns the FilterType field value if set, zero value otherwise.
func (o *SpotSymbolFilterMinNotional) GetFilterType() string {
	if o == nil || IsNil(o.FilterType) {
		var ret string
		return ret
	}
	return *o.FilterType
}

// GetFilterTypeOk returns a tuple with the FilterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterMinNotional) GetFilterTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FilterType) {
		return nil, false
	}
	return o.FilterType, true
}

// HasFilterType returns a boolean if a field has been set.
func (o *SpotSymbolFilterMinNotional) HasFilterType() bool {
	if o != nil && !IsNil(o.FilterType) {
		return true
	}

	return false
}

// SetFilterType gets a reference to the given string and assigns it to the FilterType field.
func (o *SpotSymbolFilterMinNotional) SetFilterType(v string) {
	o.FilterType = &v
}

// GetMinNotionalValue returns the MinNotionalValue field value if set, zero value otherwise.
func (o *SpotSymbolFilterMinNotional) GetMinNotionalValue() string {
	if o == nil || IsNil(o.MinNotionalValue) {
		var ret string
		return ret
	}
	return *o.MinNotionalValue
}

// GetMinNotionalValueOk returns a tuple with the MinNotionalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterMinNotional) GetMinNotionalValueOk() (*string, bool) {
	if o == nil || IsNil(o.MinNotionalValue) {
		return nil, false
	}
	return o.MinNotionalValue, true
}

// HasMinNotionalValue returns a boolean if a field has been set.
func (o *SpotSymbolFilterMinNotional) HasMinNotionalValue() bool {
	if o != nil && !IsNil(o.MinNotionalValue) {
		return true
	}

	return false
}

// SetMinNotionalValue gets a reference to the given string and assigns it to the MinNotionalValue field.
func (o *SpotSymbolFilterMinNotional) SetMinNotionalValue(v string) {
	o.MinNotionalValue = &v
}

func (o SpotSymbolFilterMinNotional) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotSymbolFilterMinNotional) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplyToMarket) {
		toSerialize["applyToMarket"] = o.ApplyToMarket
	}
	if !IsNil(o.AvgPriceMins) {
		toSerialize["avgPriceMins"] = o.AvgPriceMins
	}
	if !IsNil(o.FilterType) {
		toSerialize["filterType"] = o.FilterType
	}
	if !IsNil(o.MinNotionalValue) {
		toSerialize["minNotionalValue"] = o.MinNotionalValue
	}
	return toSerialize, nil
}

type NullableSpotSymbolFilterMinNotional struct {
	value *SpotSymbolFilterMinNotional
	isSet bool
}

func (v NullableSpotSymbolFilterMinNotional) Get() *SpotSymbolFilterMinNotional {
	return v.value
}

func (v *NullableSpotSymbolFilterMinNotional) Set(val *SpotSymbolFilterMinNotional) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotSymbolFilterMinNotional) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotSymbolFilterMinNotional) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotSymbolFilterMinNotional(val *SpotSymbolFilterMinNotional) *NullableSpotSymbolFilterMinNotional {
	return &NullableSpotSymbolFilterMinNotional{value: val, isSet: true}
}

func (v NullableSpotSymbolFilterMinNotional) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotSymbolFilterMinNotional) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


