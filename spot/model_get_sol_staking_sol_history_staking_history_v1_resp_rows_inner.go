/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetSolStakingSolHistoryStakingHistoryV1RespRowsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSolStakingSolHistoryStakingHistoryV1RespRowsInner{}

// GetSolStakingSolHistoryStakingHistoryV1RespRowsInner struct for GetSolStakingSolHistoryStakingHistoryV1RespRowsInner
type GetSolStakingSolHistoryStakingHistoryV1RespRowsInner struct {
	Amount *string `json:"amount,omitempty"`
	Asset *string `json:"asset,omitempty"`
	DistributeAmount *string `json:"distributeAmount,omitempty"`
	DistributeAsset *string `json:"distributeAsset,omitempty"`
	ExchangeRate *string `json:"exchangeRate,omitempty"`
	Status *string `json:"status,omitempty"`
	Time *int64 `json:"time,omitempty"`
}

// NewGetSolStakingSolHistoryStakingHistoryV1RespRowsInner instantiates a new GetSolStakingSolHistoryStakingHistoryV1RespRowsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSolStakingSolHistoryStakingHistoryV1RespRowsInner() *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner {
	this := GetSolStakingSolHistoryStakingHistoryV1RespRowsInner{}
	return &this
}

// NewGetSolStakingSolHistoryStakingHistoryV1RespRowsInnerWithDefaults instantiates a new GetSolStakingSolHistoryStakingHistoryV1RespRowsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSolStakingSolHistoryStakingHistoryV1RespRowsInnerWithDefaults() *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner {
	this := GetSolStakingSolHistoryStakingHistoryV1RespRowsInner{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) SetAmount(v string) {
	o.Amount = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) SetAsset(v string) {
	o.Asset = &v
}

// GetDistributeAmount returns the DistributeAmount field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetDistributeAmount() string {
	if o == nil || IsNil(o.DistributeAmount) {
		var ret string
		return ret
	}
	return *o.DistributeAmount
}

// GetDistributeAmountOk returns a tuple with the DistributeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetDistributeAmountOk() (*string, bool) {
	if o == nil || IsNil(o.DistributeAmount) {
		return nil, false
	}
	return o.DistributeAmount, true
}

// HasDistributeAmount returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) HasDistributeAmount() bool {
	if o != nil && !IsNil(o.DistributeAmount) {
		return true
	}

	return false
}

// SetDistributeAmount gets a reference to the given string and assigns it to the DistributeAmount field.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) SetDistributeAmount(v string) {
	o.DistributeAmount = &v
}

// GetDistributeAsset returns the DistributeAsset field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetDistributeAsset() string {
	if o == nil || IsNil(o.DistributeAsset) {
		var ret string
		return ret
	}
	return *o.DistributeAsset
}

// GetDistributeAssetOk returns a tuple with the DistributeAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetDistributeAssetOk() (*string, bool) {
	if o == nil || IsNil(o.DistributeAsset) {
		return nil, false
	}
	return o.DistributeAsset, true
}

// HasDistributeAsset returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) HasDistributeAsset() bool {
	if o != nil && !IsNil(o.DistributeAsset) {
		return true
	}

	return false
}

// SetDistributeAsset gets a reference to the given string and assigns it to the DistributeAsset field.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) SetDistributeAsset(v string) {
	o.DistributeAsset = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetExchangeRate() string {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret string
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetExchangeRateOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given string and assigns it to the ExchangeRate field.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) SetExchangeRate(v string) {
	o.ExchangeRate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) SetStatus(v string) {
	o.Status = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) SetTime(v int64) {
	o.Time = &v
}

func (o GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.DistributeAmount) {
		toSerialize["distributeAmount"] = o.DistributeAmount
	}
	if !IsNil(o.DistributeAsset) {
		toSerialize["distributeAsset"] = o.DistributeAsset
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableGetSolStakingSolHistoryStakingHistoryV1RespRowsInner struct {
	value *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner
	isSet bool
}

func (v NullableGetSolStakingSolHistoryStakingHistoryV1RespRowsInner) Get() *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner {
	return v.value
}

func (v *NullableGetSolStakingSolHistoryStakingHistoryV1RespRowsInner) Set(val *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSolStakingSolHistoryStakingHistoryV1RespRowsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSolStakingSolHistoryStakingHistoryV1RespRowsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSolStakingSolHistoryStakingHistoryV1RespRowsInner(val *GetSolStakingSolHistoryStakingHistoryV1RespRowsInner) *NullableGetSolStakingSolHistoryStakingHistoryV1RespRowsInner {
	return &NullableGetSolStakingSolHistoryStakingHistoryV1RespRowsInner{value: val, isSet: true}
}

func (v NullableGetSolStakingSolHistoryStakingHistoryV1RespRowsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSolStakingSolHistoryStakingHistoryV1RespRowsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


