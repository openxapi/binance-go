/*
Binance Spot API

OpenAPI specification for Binance cryptocurrency exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the SpotGetExchangeInfoV3Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotGetExchangeInfoV3Resp{}

// SpotGetExchangeInfoV3Resp struct for SpotGetExchangeInfoV3Resp
type SpotGetExchangeInfoV3Resp struct {
	ExchangeFilters []SpotGetExchangeInfoV3RespExchangeFiltersInner `json:"exchangeFilters,omitempty"`
	RateLimits []SpotRateLimit `json:"rateLimits,omitempty"`
	ServerTime *int64 `json:"serverTime,omitempty"`
	Sors []SpotGetExchangeInfoV3RespSorsInner `json:"sors,omitempty"`
	Symbols []SpotGetExchangeInfoV3RespSymbolsInner `json:"symbols,omitempty"`
	Timezone *string `json:"timezone,omitempty"`
}

// NewSpotGetExchangeInfoV3Resp instantiates a new SpotGetExchangeInfoV3Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotGetExchangeInfoV3Resp() *SpotGetExchangeInfoV3Resp {
	this := SpotGetExchangeInfoV3Resp{}
	return &this
}

// NewSpotGetExchangeInfoV3RespWithDefaults instantiates a new SpotGetExchangeInfoV3Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotGetExchangeInfoV3RespWithDefaults() *SpotGetExchangeInfoV3Resp {
	this := SpotGetExchangeInfoV3Resp{}
	return &this
}

// GetExchangeFilters returns the ExchangeFilters field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3Resp) GetExchangeFilters() []SpotGetExchangeInfoV3RespExchangeFiltersInner {
	if o == nil || IsNil(o.ExchangeFilters) {
		var ret []SpotGetExchangeInfoV3RespExchangeFiltersInner
		return ret
	}
	return o.ExchangeFilters
}

// GetExchangeFiltersOk returns a tuple with the ExchangeFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3Resp) GetExchangeFiltersOk() ([]SpotGetExchangeInfoV3RespExchangeFiltersInner, bool) {
	if o == nil || IsNil(o.ExchangeFilters) {
		return nil, false
	}
	return o.ExchangeFilters, true
}

// HasExchangeFilters returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3Resp) HasExchangeFilters() bool {
	if o != nil && !IsNil(o.ExchangeFilters) {
		return true
	}

	return false
}

// SetExchangeFilters gets a reference to the given []SpotGetExchangeInfoV3RespExchangeFiltersInner and assigns it to the ExchangeFilters field.
func (o *SpotGetExchangeInfoV3Resp) SetExchangeFilters(v []SpotGetExchangeInfoV3RespExchangeFiltersInner) {
	o.ExchangeFilters = v
}

// GetRateLimits returns the RateLimits field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3Resp) GetRateLimits() []SpotRateLimit {
	if o == nil || IsNil(o.RateLimits) {
		var ret []SpotRateLimit
		return ret
	}
	return o.RateLimits
}

// GetRateLimitsOk returns a tuple with the RateLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3Resp) GetRateLimitsOk() ([]SpotRateLimit, bool) {
	if o == nil || IsNil(o.RateLimits) {
		return nil, false
	}
	return o.RateLimits, true
}

// HasRateLimits returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3Resp) HasRateLimits() bool {
	if o != nil && !IsNil(o.RateLimits) {
		return true
	}

	return false
}

// SetRateLimits gets a reference to the given []SpotRateLimit and assigns it to the RateLimits field.
func (o *SpotGetExchangeInfoV3Resp) SetRateLimits(v []SpotRateLimit) {
	o.RateLimits = v
}

// GetServerTime returns the ServerTime field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3Resp) GetServerTime() int64 {
	if o == nil || IsNil(o.ServerTime) {
		var ret int64
		return ret
	}
	return *o.ServerTime
}

// GetServerTimeOk returns a tuple with the ServerTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3Resp) GetServerTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.ServerTime) {
		return nil, false
	}
	return o.ServerTime, true
}

// HasServerTime returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3Resp) HasServerTime() bool {
	if o != nil && !IsNil(o.ServerTime) {
		return true
	}

	return false
}

// SetServerTime gets a reference to the given int64 and assigns it to the ServerTime field.
func (o *SpotGetExchangeInfoV3Resp) SetServerTime(v int64) {
	o.ServerTime = &v
}

// GetSors returns the Sors field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3Resp) GetSors() []SpotGetExchangeInfoV3RespSorsInner {
	if o == nil || IsNil(o.Sors) {
		var ret []SpotGetExchangeInfoV3RespSorsInner
		return ret
	}
	return o.Sors
}

// GetSorsOk returns a tuple with the Sors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3Resp) GetSorsOk() ([]SpotGetExchangeInfoV3RespSorsInner, bool) {
	if o == nil || IsNil(o.Sors) {
		return nil, false
	}
	return o.Sors, true
}

// HasSors returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3Resp) HasSors() bool {
	if o != nil && !IsNil(o.Sors) {
		return true
	}

	return false
}

// SetSors gets a reference to the given []SpotGetExchangeInfoV3RespSorsInner and assigns it to the Sors field.
func (o *SpotGetExchangeInfoV3Resp) SetSors(v []SpotGetExchangeInfoV3RespSorsInner) {
	o.Sors = v
}

// GetSymbols returns the Symbols field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3Resp) GetSymbols() []SpotGetExchangeInfoV3RespSymbolsInner {
	if o == nil || IsNil(o.Symbols) {
		var ret []SpotGetExchangeInfoV3RespSymbolsInner
		return ret
	}
	return o.Symbols
}

// GetSymbolsOk returns a tuple with the Symbols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3Resp) GetSymbolsOk() ([]SpotGetExchangeInfoV3RespSymbolsInner, bool) {
	if o == nil || IsNil(o.Symbols) {
		return nil, false
	}
	return o.Symbols, true
}

// HasSymbols returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3Resp) HasSymbols() bool {
	if o != nil && !IsNil(o.Symbols) {
		return true
	}

	return false
}

// SetSymbols gets a reference to the given []SpotGetExchangeInfoV3RespSymbolsInner and assigns it to the Symbols field.
func (o *SpotGetExchangeInfoV3Resp) SetSymbols(v []SpotGetExchangeInfoV3RespSymbolsInner) {
	o.Symbols = v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3Resp) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3Resp) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3Resp) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *SpotGetExchangeInfoV3Resp) SetTimezone(v string) {
	o.Timezone = &v
}

func (o SpotGetExchangeInfoV3Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotGetExchangeInfoV3Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExchangeFilters) {
		toSerialize["exchangeFilters"] = o.ExchangeFilters
	}
	if !IsNil(o.RateLimits) {
		toSerialize["rateLimits"] = o.RateLimits
	}
	if !IsNil(o.ServerTime) {
		toSerialize["serverTime"] = o.ServerTime
	}
	if !IsNil(o.Sors) {
		toSerialize["sors"] = o.Sors
	}
	if !IsNil(o.Symbols) {
		toSerialize["symbols"] = o.Symbols
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	return toSerialize, nil
}

type NullableSpotGetExchangeInfoV3Resp struct {
	value *SpotGetExchangeInfoV3Resp
	isSet bool
}

func (v NullableSpotGetExchangeInfoV3Resp) Get() *SpotGetExchangeInfoV3Resp {
	return v.value
}

func (v *NullableSpotGetExchangeInfoV3Resp) Set(val *SpotGetExchangeInfoV3Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotGetExchangeInfoV3Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotGetExchangeInfoV3Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotGetExchangeInfoV3Resp(val *SpotGetExchangeInfoV3Resp) *NullableSpotGetExchangeInfoV3Resp {
	return &NullableSpotGetExchangeInfoV3Resp{value: val, isSet: true}
}

func (v NullableSpotGetExchangeInfoV3Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotGetExchangeInfoV3Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


