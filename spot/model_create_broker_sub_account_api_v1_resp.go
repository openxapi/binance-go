/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateBrokerSubAccountApiV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBrokerSubAccountApiV1Resp{}

// CreateBrokerSubAccountApiV1Resp struct for CreateBrokerSubAccountApiV1Resp
type CreateBrokerSubAccountApiV1Resp struct {
	ApiKey *string `json:"apiKey,omitempty"`
	CanTrade *bool `json:"canTrade,omitempty"`
	FuturesTrade *bool `json:"futuresTrade,omitempty"`
	MarginTrade *bool `json:"marginTrade,omitempty"`
	SecretKey *string `json:"secretKey,omitempty"`
	SubaccountId *string `json:"subaccountId,omitempty"`
}

// NewCreateBrokerSubAccountApiV1Resp instantiates a new CreateBrokerSubAccountApiV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBrokerSubAccountApiV1Resp() *CreateBrokerSubAccountApiV1Resp {
	this := CreateBrokerSubAccountApiV1Resp{}
	return &this
}

// NewCreateBrokerSubAccountApiV1RespWithDefaults instantiates a new CreateBrokerSubAccountApiV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBrokerSubAccountApiV1RespWithDefaults() *CreateBrokerSubAccountApiV1Resp {
	this := CreateBrokerSubAccountApiV1Resp{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiV1Resp) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiV1Resp) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiV1Resp) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *CreateBrokerSubAccountApiV1Resp) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetCanTrade returns the CanTrade field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiV1Resp) GetCanTrade() bool {
	if o == nil || IsNil(o.CanTrade) {
		var ret bool
		return ret
	}
	return *o.CanTrade
}

// GetCanTradeOk returns a tuple with the CanTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiV1Resp) GetCanTradeOk() (*bool, bool) {
	if o == nil || IsNil(o.CanTrade) {
		return nil, false
	}
	return o.CanTrade, true
}

// HasCanTrade returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiV1Resp) HasCanTrade() bool {
	if o != nil && !IsNil(o.CanTrade) {
		return true
	}

	return false
}

// SetCanTrade gets a reference to the given bool and assigns it to the CanTrade field.
func (o *CreateBrokerSubAccountApiV1Resp) SetCanTrade(v bool) {
	o.CanTrade = &v
}

// GetFuturesTrade returns the FuturesTrade field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiV1Resp) GetFuturesTrade() bool {
	if o == nil || IsNil(o.FuturesTrade) {
		var ret bool
		return ret
	}
	return *o.FuturesTrade
}

// GetFuturesTradeOk returns a tuple with the FuturesTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiV1Resp) GetFuturesTradeOk() (*bool, bool) {
	if o == nil || IsNil(o.FuturesTrade) {
		return nil, false
	}
	return o.FuturesTrade, true
}

// HasFuturesTrade returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiV1Resp) HasFuturesTrade() bool {
	if o != nil && !IsNil(o.FuturesTrade) {
		return true
	}

	return false
}

// SetFuturesTrade gets a reference to the given bool and assigns it to the FuturesTrade field.
func (o *CreateBrokerSubAccountApiV1Resp) SetFuturesTrade(v bool) {
	o.FuturesTrade = &v
}

// GetMarginTrade returns the MarginTrade field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiV1Resp) GetMarginTrade() bool {
	if o == nil || IsNil(o.MarginTrade) {
		var ret bool
		return ret
	}
	return *o.MarginTrade
}

// GetMarginTradeOk returns a tuple with the MarginTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiV1Resp) GetMarginTradeOk() (*bool, bool) {
	if o == nil || IsNil(o.MarginTrade) {
		return nil, false
	}
	return o.MarginTrade, true
}

// HasMarginTrade returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiV1Resp) HasMarginTrade() bool {
	if o != nil && !IsNil(o.MarginTrade) {
		return true
	}

	return false
}

// SetMarginTrade gets a reference to the given bool and assigns it to the MarginTrade field.
func (o *CreateBrokerSubAccountApiV1Resp) SetMarginTrade(v bool) {
	o.MarginTrade = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiV1Resp) GetSecretKey() string {
	if o == nil || IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiV1Resp) GetSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiV1Resp) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *CreateBrokerSubAccountApiV1Resp) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetSubaccountId returns the SubaccountId field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiV1Resp) GetSubaccountId() string {
	if o == nil || IsNil(o.SubaccountId) {
		var ret string
		return ret
	}
	return *o.SubaccountId
}

// GetSubaccountIdOk returns a tuple with the SubaccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiV1Resp) GetSubaccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubaccountId) {
		return nil, false
	}
	return o.SubaccountId, true
}

// HasSubaccountId returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiV1Resp) HasSubaccountId() bool {
	if o != nil && !IsNil(o.SubaccountId) {
		return true
	}

	return false
}

// SetSubaccountId gets a reference to the given string and assigns it to the SubaccountId field.
func (o *CreateBrokerSubAccountApiV1Resp) SetSubaccountId(v string) {
	o.SubaccountId = &v
}

func (o CreateBrokerSubAccountApiV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBrokerSubAccountApiV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKey) {
		toSerialize["apiKey"] = o.ApiKey
	}
	if !IsNil(o.CanTrade) {
		toSerialize["canTrade"] = o.CanTrade
	}
	if !IsNil(o.FuturesTrade) {
		toSerialize["futuresTrade"] = o.FuturesTrade
	}
	if !IsNil(o.MarginTrade) {
		toSerialize["marginTrade"] = o.MarginTrade
	}
	if !IsNil(o.SecretKey) {
		toSerialize["secretKey"] = o.SecretKey
	}
	if !IsNil(o.SubaccountId) {
		toSerialize["subaccountId"] = o.SubaccountId
	}
	return toSerialize, nil
}

type NullableCreateBrokerSubAccountApiV1Resp struct {
	value *CreateBrokerSubAccountApiV1Resp
	isSet bool
}

func (v NullableCreateBrokerSubAccountApiV1Resp) Get() *CreateBrokerSubAccountApiV1Resp {
	return v.value
}

func (v *NullableCreateBrokerSubAccountApiV1Resp) Set(val *CreateBrokerSubAccountApiV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBrokerSubAccountApiV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBrokerSubAccountApiV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBrokerSubAccountApiV1Resp(val *CreateBrokerSubAccountApiV1Resp) *NullableCreateBrokerSubAccountApiV1Resp {
	return &NullableCreateBrokerSubAccountApiV1Resp{value: val, isSet: true}
}

func (v NullableCreateBrokerSubAccountApiV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBrokerSubAccountApiV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


