/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the SpotCreateOrderTestV3RespDiscount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotCreateOrderTestV3RespDiscount{}

// SpotCreateOrderTestV3RespDiscount struct for SpotCreateOrderTestV3RespDiscount
type SpotCreateOrderTestV3RespDiscount struct {
	Discount *string `json:"discount,omitempty"`
	DiscountAsset *string `json:"discountAsset,omitempty"`
	EnabledForAccount *bool `json:"enabledForAccount,omitempty"`
	EnabledForSymbol *bool `json:"enabledForSymbol,omitempty"`
}

// NewSpotCreateOrderTestV3RespDiscount instantiates a new SpotCreateOrderTestV3RespDiscount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotCreateOrderTestV3RespDiscount() *SpotCreateOrderTestV3RespDiscount {
	this := SpotCreateOrderTestV3RespDiscount{}
	return &this
}

// NewSpotCreateOrderTestV3RespDiscountWithDefaults instantiates a new SpotCreateOrderTestV3RespDiscount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotCreateOrderTestV3RespDiscountWithDefaults() *SpotCreateOrderTestV3RespDiscount {
	this := SpotCreateOrderTestV3RespDiscount{}
	return &this
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *SpotCreateOrderTestV3RespDiscount) GetDiscount() string {
	if o == nil || IsNil(o.Discount) {
		var ret string
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotCreateOrderTestV3RespDiscount) GetDiscountOk() (*string, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *SpotCreateOrderTestV3RespDiscount) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given string and assigns it to the Discount field.
func (o *SpotCreateOrderTestV3RespDiscount) SetDiscount(v string) {
	o.Discount = &v
}

// GetDiscountAsset returns the DiscountAsset field value if set, zero value otherwise.
func (o *SpotCreateOrderTestV3RespDiscount) GetDiscountAsset() string {
	if o == nil || IsNil(o.DiscountAsset) {
		var ret string
		return ret
	}
	return *o.DiscountAsset
}

// GetDiscountAssetOk returns a tuple with the DiscountAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotCreateOrderTestV3RespDiscount) GetDiscountAssetOk() (*string, bool) {
	if o == nil || IsNil(o.DiscountAsset) {
		return nil, false
	}
	return o.DiscountAsset, true
}

// HasDiscountAsset returns a boolean if a field has been set.
func (o *SpotCreateOrderTestV3RespDiscount) HasDiscountAsset() bool {
	if o != nil && !IsNil(o.DiscountAsset) {
		return true
	}

	return false
}

// SetDiscountAsset gets a reference to the given string and assigns it to the DiscountAsset field.
func (o *SpotCreateOrderTestV3RespDiscount) SetDiscountAsset(v string) {
	o.DiscountAsset = &v
}

// GetEnabledForAccount returns the EnabledForAccount field value if set, zero value otherwise.
func (o *SpotCreateOrderTestV3RespDiscount) GetEnabledForAccount() bool {
	if o == nil || IsNil(o.EnabledForAccount) {
		var ret bool
		return ret
	}
	return *o.EnabledForAccount
}

// GetEnabledForAccountOk returns a tuple with the EnabledForAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotCreateOrderTestV3RespDiscount) GetEnabledForAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.EnabledForAccount) {
		return nil, false
	}
	return o.EnabledForAccount, true
}

// HasEnabledForAccount returns a boolean if a field has been set.
func (o *SpotCreateOrderTestV3RespDiscount) HasEnabledForAccount() bool {
	if o != nil && !IsNil(o.EnabledForAccount) {
		return true
	}

	return false
}

// SetEnabledForAccount gets a reference to the given bool and assigns it to the EnabledForAccount field.
func (o *SpotCreateOrderTestV3RespDiscount) SetEnabledForAccount(v bool) {
	o.EnabledForAccount = &v
}

// GetEnabledForSymbol returns the EnabledForSymbol field value if set, zero value otherwise.
func (o *SpotCreateOrderTestV3RespDiscount) GetEnabledForSymbol() bool {
	if o == nil || IsNil(o.EnabledForSymbol) {
		var ret bool
		return ret
	}
	return *o.EnabledForSymbol
}

// GetEnabledForSymbolOk returns a tuple with the EnabledForSymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotCreateOrderTestV3RespDiscount) GetEnabledForSymbolOk() (*bool, bool) {
	if o == nil || IsNil(o.EnabledForSymbol) {
		return nil, false
	}
	return o.EnabledForSymbol, true
}

// HasEnabledForSymbol returns a boolean if a field has been set.
func (o *SpotCreateOrderTestV3RespDiscount) HasEnabledForSymbol() bool {
	if o != nil && !IsNil(o.EnabledForSymbol) {
		return true
	}

	return false
}

// SetEnabledForSymbol gets a reference to the given bool and assigns it to the EnabledForSymbol field.
func (o *SpotCreateOrderTestV3RespDiscount) SetEnabledForSymbol(v bool) {
	o.EnabledForSymbol = &v
}

func (o SpotCreateOrderTestV3RespDiscount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotCreateOrderTestV3RespDiscount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.DiscountAsset) {
		toSerialize["discountAsset"] = o.DiscountAsset
	}
	if !IsNil(o.EnabledForAccount) {
		toSerialize["enabledForAccount"] = o.EnabledForAccount
	}
	if !IsNil(o.EnabledForSymbol) {
		toSerialize["enabledForSymbol"] = o.EnabledForSymbol
	}
	return toSerialize, nil
}

type NullableSpotCreateOrderTestV3RespDiscount struct {
	value *SpotCreateOrderTestV3RespDiscount
	isSet bool
}

func (v NullableSpotCreateOrderTestV3RespDiscount) Get() *SpotCreateOrderTestV3RespDiscount {
	return v.value
}

func (v *NullableSpotCreateOrderTestV3RespDiscount) Set(val *SpotCreateOrderTestV3RespDiscount) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotCreateOrderTestV3RespDiscount) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotCreateOrderTestV3RespDiscount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotCreateOrderTestV3RespDiscount(val *SpotCreateOrderTestV3RespDiscount) *NullableSpotCreateOrderTestV3RespDiscount {
	return &NullableSpotCreateOrderTestV3RespDiscount{value: val, isSet: true}
}

func (v NullableSpotCreateOrderTestV3RespDiscount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotCreateOrderTestV3RespDiscount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


