/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateConvertLimitCancelOrderV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConvertLimitCancelOrderV1Resp{}

// CreateConvertLimitCancelOrderV1Resp struct for CreateConvertLimitCancelOrderV1Resp
type CreateConvertLimitCancelOrderV1Resp struct {
	OrderId *int64 `json:"orderId,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewCreateConvertLimitCancelOrderV1Resp instantiates a new CreateConvertLimitCancelOrderV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConvertLimitCancelOrderV1Resp() *CreateConvertLimitCancelOrderV1Resp {
	this := CreateConvertLimitCancelOrderV1Resp{}
	return &this
}

// NewCreateConvertLimitCancelOrderV1RespWithDefaults instantiates a new CreateConvertLimitCancelOrderV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConvertLimitCancelOrderV1RespWithDefaults() *CreateConvertLimitCancelOrderV1Resp {
	this := CreateConvertLimitCancelOrderV1Resp{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *CreateConvertLimitCancelOrderV1Resp) GetOrderId() int64 {
	if o == nil || IsNil(o.OrderId) {
		var ret int64
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConvertLimitCancelOrderV1Resp) GetOrderIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *CreateConvertLimitCancelOrderV1Resp) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int64 and assigns it to the OrderId field.
func (o *CreateConvertLimitCancelOrderV1Resp) SetOrderId(v int64) {
	o.OrderId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateConvertLimitCancelOrderV1Resp) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConvertLimitCancelOrderV1Resp) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateConvertLimitCancelOrderV1Resp) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CreateConvertLimitCancelOrderV1Resp) SetStatus(v string) {
	o.Status = &v
}

func (o CreateConvertLimitCancelOrderV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConvertLimitCancelOrderV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableCreateConvertLimitCancelOrderV1Resp struct {
	value *CreateConvertLimitCancelOrderV1Resp
	isSet bool
}

func (v NullableCreateConvertLimitCancelOrderV1Resp) Get() *CreateConvertLimitCancelOrderV1Resp {
	return v.value
}

func (v *NullableCreateConvertLimitCancelOrderV1Resp) Set(val *CreateConvertLimitCancelOrderV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConvertLimitCancelOrderV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConvertLimitCancelOrderV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConvertLimitCancelOrderV1Resp(val *CreateConvertLimitCancelOrderV1Resp) *NullableCreateConvertLimitCancelOrderV1Resp {
	return &NullableCreateConvertLimitCancelOrderV1Resp{value: val, isSet: true}
}

func (v NullableCreateConvertLimitCancelOrderV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConvertLimitCancelOrderV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


