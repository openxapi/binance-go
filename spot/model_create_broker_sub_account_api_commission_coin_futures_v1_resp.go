/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp{}

// CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp struct for CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp
type CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp struct {
	MakerAdjustment *int32 `json:"makerAdjustment,omitempty"`
	MakerCommission *int32 `json:"makerCommission,omitempty"`
	Pair *string `json:"pair,omitempty"`
	SubAccountId *int64 `json:"subAccountId,omitempty"`
	TakerAdjustment *int32 `json:"takerAdjustment,omitempty"`
	TakerCommission *int32 `json:"takerCommission,omitempty"`
}

// NewCreateBrokerSubAccountApiCommissionCoinFuturesV1Resp instantiates a new CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBrokerSubAccountApiCommissionCoinFuturesV1Resp() *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp {
	this := CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp{}
	return &this
}

// NewCreateBrokerSubAccountApiCommissionCoinFuturesV1RespWithDefaults instantiates a new CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBrokerSubAccountApiCommissionCoinFuturesV1RespWithDefaults() *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp {
	this := CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp{}
	return &this
}

// GetMakerAdjustment returns the MakerAdjustment field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) GetMakerAdjustment() int32 {
	if o == nil || IsNil(o.MakerAdjustment) {
		var ret int32
		return ret
	}
	return *o.MakerAdjustment
}

// GetMakerAdjustmentOk returns a tuple with the MakerAdjustment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) GetMakerAdjustmentOk() (*int32, bool) {
	if o == nil || IsNil(o.MakerAdjustment) {
		return nil, false
	}
	return o.MakerAdjustment, true
}

// HasMakerAdjustment returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) HasMakerAdjustment() bool {
	if o != nil && !IsNil(o.MakerAdjustment) {
		return true
	}

	return false
}

// SetMakerAdjustment gets a reference to the given int32 and assigns it to the MakerAdjustment field.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) SetMakerAdjustment(v int32) {
	o.MakerAdjustment = &v
}

// GetMakerCommission returns the MakerCommission field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) GetMakerCommission() int32 {
	if o == nil || IsNil(o.MakerCommission) {
		var ret int32
		return ret
	}
	return *o.MakerCommission
}

// GetMakerCommissionOk returns a tuple with the MakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) GetMakerCommissionOk() (*int32, bool) {
	if o == nil || IsNil(o.MakerCommission) {
		return nil, false
	}
	return o.MakerCommission, true
}

// HasMakerCommission returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) HasMakerCommission() bool {
	if o != nil && !IsNil(o.MakerCommission) {
		return true
	}

	return false
}

// SetMakerCommission gets a reference to the given int32 and assigns it to the MakerCommission field.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) SetMakerCommission(v int32) {
	o.MakerCommission = &v
}

// GetPair returns the Pair field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) GetPair() string {
	if o == nil || IsNil(o.Pair) {
		var ret string
		return ret
	}
	return *o.Pair
}

// GetPairOk returns a tuple with the Pair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) GetPairOk() (*string, bool) {
	if o == nil || IsNil(o.Pair) {
		return nil, false
	}
	return o.Pair, true
}

// HasPair returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) HasPair() bool {
	if o != nil && !IsNil(o.Pair) {
		return true
	}

	return false
}

// SetPair gets a reference to the given string and assigns it to the Pair field.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) SetPair(v string) {
	o.Pair = &v
}

// GetSubAccountId returns the SubAccountId field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) GetSubAccountId() int64 {
	if o == nil || IsNil(o.SubAccountId) {
		var ret int64
		return ret
	}
	return *o.SubAccountId
}

// GetSubAccountIdOk returns a tuple with the SubAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) GetSubAccountIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SubAccountId) {
		return nil, false
	}
	return o.SubAccountId, true
}

// HasSubAccountId returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) HasSubAccountId() bool {
	if o != nil && !IsNil(o.SubAccountId) {
		return true
	}

	return false
}

// SetSubAccountId gets a reference to the given int64 and assigns it to the SubAccountId field.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) SetSubAccountId(v int64) {
	o.SubAccountId = &v
}

// GetTakerAdjustment returns the TakerAdjustment field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) GetTakerAdjustment() int32 {
	if o == nil || IsNil(o.TakerAdjustment) {
		var ret int32
		return ret
	}
	return *o.TakerAdjustment
}

// GetTakerAdjustmentOk returns a tuple with the TakerAdjustment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) GetTakerAdjustmentOk() (*int32, bool) {
	if o == nil || IsNil(o.TakerAdjustment) {
		return nil, false
	}
	return o.TakerAdjustment, true
}

// HasTakerAdjustment returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) HasTakerAdjustment() bool {
	if o != nil && !IsNil(o.TakerAdjustment) {
		return true
	}

	return false
}

// SetTakerAdjustment gets a reference to the given int32 and assigns it to the TakerAdjustment field.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) SetTakerAdjustment(v int32) {
	o.TakerAdjustment = &v
}

// GetTakerCommission returns the TakerCommission field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) GetTakerCommission() int32 {
	if o == nil || IsNil(o.TakerCommission) {
		var ret int32
		return ret
	}
	return *o.TakerCommission
}

// GetTakerCommissionOk returns a tuple with the TakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) GetTakerCommissionOk() (*int32, bool) {
	if o == nil || IsNil(o.TakerCommission) {
		return nil, false
	}
	return o.TakerCommission, true
}

// HasTakerCommission returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) HasTakerCommission() bool {
	if o != nil && !IsNil(o.TakerCommission) {
		return true
	}

	return false
}

// SetTakerCommission gets a reference to the given int32 and assigns it to the TakerCommission field.
func (o *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) SetTakerCommission(v int32) {
	o.TakerCommission = &v
}

func (o CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MakerAdjustment) {
		toSerialize["makerAdjustment"] = o.MakerAdjustment
	}
	if !IsNil(o.MakerCommission) {
		toSerialize["makerCommission"] = o.MakerCommission
	}
	if !IsNil(o.Pair) {
		toSerialize["pair"] = o.Pair
	}
	if !IsNil(o.SubAccountId) {
		toSerialize["subAccountId"] = o.SubAccountId
	}
	if !IsNil(o.TakerAdjustment) {
		toSerialize["takerAdjustment"] = o.TakerAdjustment
	}
	if !IsNil(o.TakerCommission) {
		toSerialize["takerCommission"] = o.TakerCommission
	}
	return toSerialize, nil
}

type NullableCreateBrokerSubAccountApiCommissionCoinFuturesV1Resp struct {
	value *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp
	isSet bool
}

func (v NullableCreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) Get() *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp {
	return v.value
}

func (v *NullableCreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) Set(val *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBrokerSubAccountApiCommissionCoinFuturesV1Resp(val *CreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) *NullableCreateBrokerSubAccountApiCommissionCoinFuturesV1Resp {
	return &NullableCreateBrokerSubAccountApiCommissionCoinFuturesV1Resp{value: val, isSet: true}
}

func (v NullableCreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBrokerSubAccountApiCommissionCoinFuturesV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


