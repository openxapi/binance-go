/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem{}

// GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem struct for GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem
type GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem struct {
	MakerCommission *int32 `json:"makerCommission,omitempty"`
	Pair *string `json:"pair,omitempty"`
	SubAccountId *int64 `json:"subAccountId,omitempty"`
	TakerCommission *int32 `json:"takerCommission,omitempty"`
}

// NewGetBrokerSubAccountApiCommissionCoinFuturesV1RespItem instantiates a new GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBrokerSubAccountApiCommissionCoinFuturesV1RespItem() *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem {
	this := GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem{}
	return &this
}

// NewGetBrokerSubAccountApiCommissionCoinFuturesV1RespItemWithDefaults instantiates a new GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBrokerSubAccountApiCommissionCoinFuturesV1RespItemWithDefaults() *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem {
	this := GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem{}
	return &this
}

// GetMakerCommission returns the MakerCommission field value if set, zero value otherwise.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) GetMakerCommission() int32 {
	if o == nil || IsNil(o.MakerCommission) {
		var ret int32
		return ret
	}
	return *o.MakerCommission
}

// GetMakerCommissionOk returns a tuple with the MakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) GetMakerCommissionOk() (*int32, bool) {
	if o == nil || IsNil(o.MakerCommission) {
		return nil, false
	}
	return o.MakerCommission, true
}

// HasMakerCommission returns a boolean if a field has been set.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) HasMakerCommission() bool {
	if o != nil && !IsNil(o.MakerCommission) {
		return true
	}

	return false
}

// SetMakerCommission gets a reference to the given int32 and assigns it to the MakerCommission field.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) SetMakerCommission(v int32) {
	o.MakerCommission = &v
}

// GetPair returns the Pair field value if set, zero value otherwise.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) GetPair() string {
	if o == nil || IsNil(o.Pair) {
		var ret string
		return ret
	}
	return *o.Pair
}

// GetPairOk returns a tuple with the Pair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) GetPairOk() (*string, bool) {
	if o == nil || IsNil(o.Pair) {
		return nil, false
	}
	return o.Pair, true
}

// HasPair returns a boolean if a field has been set.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) HasPair() bool {
	if o != nil && !IsNil(o.Pair) {
		return true
	}

	return false
}

// SetPair gets a reference to the given string and assigns it to the Pair field.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) SetPair(v string) {
	o.Pair = &v
}

// GetSubAccountId returns the SubAccountId field value if set, zero value otherwise.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) GetSubAccountId() int64 {
	if o == nil || IsNil(o.SubAccountId) {
		var ret int64
		return ret
	}
	return *o.SubAccountId
}

// GetSubAccountIdOk returns a tuple with the SubAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) GetSubAccountIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SubAccountId) {
		return nil, false
	}
	return o.SubAccountId, true
}

// HasSubAccountId returns a boolean if a field has been set.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) HasSubAccountId() bool {
	if o != nil && !IsNil(o.SubAccountId) {
		return true
	}

	return false
}

// SetSubAccountId gets a reference to the given int64 and assigns it to the SubAccountId field.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) SetSubAccountId(v int64) {
	o.SubAccountId = &v
}

// GetTakerCommission returns the TakerCommission field value if set, zero value otherwise.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) GetTakerCommission() int32 {
	if o == nil || IsNil(o.TakerCommission) {
		var ret int32
		return ret
	}
	return *o.TakerCommission
}

// GetTakerCommissionOk returns a tuple with the TakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) GetTakerCommissionOk() (*int32, bool) {
	if o == nil || IsNil(o.TakerCommission) {
		return nil, false
	}
	return o.TakerCommission, true
}

// HasTakerCommission returns a boolean if a field has been set.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) HasTakerCommission() bool {
	if o != nil && !IsNil(o.TakerCommission) {
		return true
	}

	return false
}

// SetTakerCommission gets a reference to the given int32 and assigns it to the TakerCommission field.
func (o *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) SetTakerCommission(v int32) {
	o.TakerCommission = &v
}

func (o GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MakerCommission) {
		toSerialize["makerCommission"] = o.MakerCommission
	}
	if !IsNil(o.Pair) {
		toSerialize["pair"] = o.Pair
	}
	if !IsNil(o.SubAccountId) {
		toSerialize["subAccountId"] = o.SubAccountId
	}
	if !IsNil(o.TakerCommission) {
		toSerialize["takerCommission"] = o.TakerCommission
	}
	return toSerialize, nil
}

type NullableGetBrokerSubAccountApiCommissionCoinFuturesV1RespItem struct {
	value *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem
	isSet bool
}

func (v NullableGetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) Get() *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem {
	return v.value
}

func (v *NullableGetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) Set(val *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBrokerSubAccountApiCommissionCoinFuturesV1RespItem(val *GetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) *NullableGetBrokerSubAccountApiCommissionCoinFuturesV1RespItem {
	return &NullableGetBrokerSubAccountApiCommissionCoinFuturesV1RespItem{value: val, isSet: true}
}

func (v NullableGetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBrokerSubAccountApiCommissionCoinFuturesV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


