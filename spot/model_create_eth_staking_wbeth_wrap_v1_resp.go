/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateEthStakingWbethWrapV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateEthStakingWbethWrapV1Resp{}

// CreateEthStakingWbethWrapV1Resp struct for CreateEthStakingWbethWrapV1Resp
type CreateEthStakingWbethWrapV1Resp struct {
	ExchangeRate *string `json:"exchangeRate,omitempty"`
	Success *bool `json:"success,omitempty"`
	WbethAmount *string `json:"wbethAmount,omitempty"`
}

// NewCreateEthStakingWbethWrapV1Resp instantiates a new CreateEthStakingWbethWrapV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateEthStakingWbethWrapV1Resp() *CreateEthStakingWbethWrapV1Resp {
	this := CreateEthStakingWbethWrapV1Resp{}
	return &this
}

// NewCreateEthStakingWbethWrapV1RespWithDefaults instantiates a new CreateEthStakingWbethWrapV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateEthStakingWbethWrapV1RespWithDefaults() *CreateEthStakingWbethWrapV1Resp {
	this := CreateEthStakingWbethWrapV1Resp{}
	return &this
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *CreateEthStakingWbethWrapV1Resp) GetExchangeRate() string {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret string
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEthStakingWbethWrapV1Resp) GetExchangeRateOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *CreateEthStakingWbethWrapV1Resp) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given string and assigns it to the ExchangeRate field.
func (o *CreateEthStakingWbethWrapV1Resp) SetExchangeRate(v string) {
	o.ExchangeRate = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *CreateEthStakingWbethWrapV1Resp) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEthStakingWbethWrapV1Resp) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *CreateEthStakingWbethWrapV1Resp) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *CreateEthStakingWbethWrapV1Resp) SetSuccess(v bool) {
	o.Success = &v
}

// GetWbethAmount returns the WbethAmount field value if set, zero value otherwise.
func (o *CreateEthStakingWbethWrapV1Resp) GetWbethAmount() string {
	if o == nil || IsNil(o.WbethAmount) {
		var ret string
		return ret
	}
	return *o.WbethAmount
}

// GetWbethAmountOk returns a tuple with the WbethAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateEthStakingWbethWrapV1Resp) GetWbethAmountOk() (*string, bool) {
	if o == nil || IsNil(o.WbethAmount) {
		return nil, false
	}
	return o.WbethAmount, true
}

// HasWbethAmount returns a boolean if a field has been set.
func (o *CreateEthStakingWbethWrapV1Resp) HasWbethAmount() bool {
	if o != nil && !IsNil(o.WbethAmount) {
		return true
	}

	return false
}

// SetWbethAmount gets a reference to the given string and assigns it to the WbethAmount field.
func (o *CreateEthStakingWbethWrapV1Resp) SetWbethAmount(v string) {
	o.WbethAmount = &v
}

func (o CreateEthStakingWbethWrapV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateEthStakingWbethWrapV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.WbethAmount) {
		toSerialize["wbethAmount"] = o.WbethAmount
	}
	return toSerialize, nil
}

type NullableCreateEthStakingWbethWrapV1Resp struct {
	value *CreateEthStakingWbethWrapV1Resp
	isSet bool
}

func (v NullableCreateEthStakingWbethWrapV1Resp) Get() *CreateEthStakingWbethWrapV1Resp {
	return v.value
}

func (v *NullableCreateEthStakingWbethWrapV1Resp) Set(val *CreateEthStakingWbethWrapV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateEthStakingWbethWrapV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateEthStakingWbethWrapV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateEthStakingWbethWrapV1Resp(val *CreateEthStakingWbethWrapV1Resp) *NullableCreateEthStakingWbethWrapV1Resp {
	return &NullableCreateEthStakingWbethWrapV1Resp{value: val, isSet: true}
}

func (v NullableCreateEthStakingWbethWrapV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateEthStakingWbethWrapV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


