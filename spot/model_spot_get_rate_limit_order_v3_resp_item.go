/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the SpotGetRateLimitOrderV3RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotGetRateLimitOrderV3RespItem{}

// SpotGetRateLimitOrderV3RespItem struct for SpotGetRateLimitOrderV3RespItem
type SpotGetRateLimitOrderV3RespItem struct {
	Count *int32 `json:"count,omitempty"`
	Interval *string `json:"interval,omitempty"`
	IntervalNum *int32 `json:"intervalNum,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
	RateLimitType *string `json:"rateLimitType,omitempty"`
}

// NewSpotGetRateLimitOrderV3RespItem instantiates a new SpotGetRateLimitOrderV3RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotGetRateLimitOrderV3RespItem() *SpotGetRateLimitOrderV3RespItem {
	this := SpotGetRateLimitOrderV3RespItem{}
	return &this
}

// NewSpotGetRateLimitOrderV3RespItemWithDefaults instantiates a new SpotGetRateLimitOrderV3RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotGetRateLimitOrderV3RespItemWithDefaults() *SpotGetRateLimitOrderV3RespItem {
	this := SpotGetRateLimitOrderV3RespItem{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *SpotGetRateLimitOrderV3RespItem) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetRateLimitOrderV3RespItem) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *SpotGetRateLimitOrderV3RespItem) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *SpotGetRateLimitOrderV3RespItem) SetCount(v int32) {
	o.Count = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *SpotGetRateLimitOrderV3RespItem) GetInterval() string {
	if o == nil || IsNil(o.Interval) {
		var ret string
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetRateLimitOrderV3RespItem) GetIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *SpotGetRateLimitOrderV3RespItem) HasInterval() bool {
	if o != nil && !IsNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *SpotGetRateLimitOrderV3RespItem) SetInterval(v string) {
	o.Interval = &v
}

// GetIntervalNum returns the IntervalNum field value if set, zero value otherwise.
func (o *SpotGetRateLimitOrderV3RespItem) GetIntervalNum() int32 {
	if o == nil || IsNil(o.IntervalNum) {
		var ret int32
		return ret
	}
	return *o.IntervalNum
}

// GetIntervalNumOk returns a tuple with the IntervalNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetRateLimitOrderV3RespItem) GetIntervalNumOk() (*int32, bool) {
	if o == nil || IsNil(o.IntervalNum) {
		return nil, false
	}
	return o.IntervalNum, true
}

// HasIntervalNum returns a boolean if a field has been set.
func (o *SpotGetRateLimitOrderV3RespItem) HasIntervalNum() bool {
	if o != nil && !IsNil(o.IntervalNum) {
		return true
	}

	return false
}

// SetIntervalNum gets a reference to the given int32 and assigns it to the IntervalNum field.
func (o *SpotGetRateLimitOrderV3RespItem) SetIntervalNum(v int32) {
	o.IntervalNum = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *SpotGetRateLimitOrderV3RespItem) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetRateLimitOrderV3RespItem) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *SpotGetRateLimitOrderV3RespItem) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *SpotGetRateLimitOrderV3RespItem) SetLimit(v int32) {
	o.Limit = &v
}

// GetRateLimitType returns the RateLimitType field value if set, zero value otherwise.
func (o *SpotGetRateLimitOrderV3RespItem) GetRateLimitType() string {
	if o == nil || IsNil(o.RateLimitType) {
		var ret string
		return ret
	}
	return *o.RateLimitType
}

// GetRateLimitTypeOk returns a tuple with the RateLimitType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetRateLimitOrderV3RespItem) GetRateLimitTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RateLimitType) {
		return nil, false
	}
	return o.RateLimitType, true
}

// HasRateLimitType returns a boolean if a field has been set.
func (o *SpotGetRateLimitOrderV3RespItem) HasRateLimitType() bool {
	if o != nil && !IsNil(o.RateLimitType) {
		return true
	}

	return false
}

// SetRateLimitType gets a reference to the given string and assigns it to the RateLimitType field.
func (o *SpotGetRateLimitOrderV3RespItem) SetRateLimitType(v string) {
	o.RateLimitType = &v
}

func (o SpotGetRateLimitOrderV3RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotGetRateLimitOrderV3RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !IsNil(o.IntervalNum) {
		toSerialize["intervalNum"] = o.IntervalNum
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.RateLimitType) {
		toSerialize["rateLimitType"] = o.RateLimitType
	}
	return toSerialize, nil
}

type NullableSpotGetRateLimitOrderV3RespItem struct {
	value *SpotGetRateLimitOrderV3RespItem
	isSet bool
}

func (v NullableSpotGetRateLimitOrderV3RespItem) Get() *SpotGetRateLimitOrderV3RespItem {
	return v.value
}

func (v *NullableSpotGetRateLimitOrderV3RespItem) Set(val *SpotGetRateLimitOrderV3RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotGetRateLimitOrderV3RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotGetRateLimitOrderV3RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotGetRateLimitOrderV3RespItem(val *SpotGetRateLimitOrderV3RespItem) *NullableSpotGetRateLimitOrderV3RespItem {
	return &NullableSpotGetRateLimitOrderV3RespItem{value: val, isSet: true}
}

func (v NullableSpotGetRateLimitOrderV3RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotGetRateLimitOrderV3RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


