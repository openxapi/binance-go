/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetSubAccountFuturesPositionRiskV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSubAccountFuturesPositionRiskV1RespItem{}

// GetSubAccountFuturesPositionRiskV1RespItem struct for GetSubAccountFuturesPositionRiskV1RespItem
type GetSubAccountFuturesPositionRiskV1RespItem struct {
	EntryPrice *string `json:"entryPrice,omitempty"`
	Leverage *string `json:"leverage,omitempty"`
	LiquidationPrice *string `json:"liquidationPrice,omitempty"`
	MarkPrice *string `json:"markPrice,omitempty"`
	MaxNotional *string `json:"maxNotional,omitempty"`
	PositionAmount *string `json:"positionAmount,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	UnrealizedProfit *string `json:"unrealizedProfit,omitempty"`
}

// NewGetSubAccountFuturesPositionRiskV1RespItem instantiates a new GetSubAccountFuturesPositionRiskV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSubAccountFuturesPositionRiskV1RespItem() *GetSubAccountFuturesPositionRiskV1RespItem {
	this := GetSubAccountFuturesPositionRiskV1RespItem{}
	return &this
}

// NewGetSubAccountFuturesPositionRiskV1RespItemWithDefaults instantiates a new GetSubAccountFuturesPositionRiskV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSubAccountFuturesPositionRiskV1RespItemWithDefaults() *GetSubAccountFuturesPositionRiskV1RespItem {
	this := GetSubAccountFuturesPositionRiskV1RespItem{}
	return &this
}

// GetEntryPrice returns the EntryPrice field value if set, zero value otherwise.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetEntryPrice() string {
	if o == nil || IsNil(o.EntryPrice) {
		var ret string
		return ret
	}
	return *o.EntryPrice
}

// GetEntryPriceOk returns a tuple with the EntryPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetEntryPriceOk() (*string, bool) {
	if o == nil || IsNil(o.EntryPrice) {
		return nil, false
	}
	return o.EntryPrice, true
}

// HasEntryPrice returns a boolean if a field has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) HasEntryPrice() bool {
	if o != nil && !IsNil(o.EntryPrice) {
		return true
	}

	return false
}

// SetEntryPrice gets a reference to the given string and assigns it to the EntryPrice field.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) SetEntryPrice(v string) {
	o.EntryPrice = &v
}

// GetLeverage returns the Leverage field value if set, zero value otherwise.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetLeverage() string {
	if o == nil || IsNil(o.Leverage) {
		var ret string
		return ret
	}
	return *o.Leverage
}

// GetLeverageOk returns a tuple with the Leverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetLeverageOk() (*string, bool) {
	if o == nil || IsNil(o.Leverage) {
		return nil, false
	}
	return o.Leverage, true
}

// HasLeverage returns a boolean if a field has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) HasLeverage() bool {
	if o != nil && !IsNil(o.Leverage) {
		return true
	}

	return false
}

// SetLeverage gets a reference to the given string and assigns it to the Leverage field.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) SetLeverage(v string) {
	o.Leverage = &v
}

// GetLiquidationPrice returns the LiquidationPrice field value if set, zero value otherwise.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetLiquidationPrice() string {
	if o == nil || IsNil(o.LiquidationPrice) {
		var ret string
		return ret
	}
	return *o.LiquidationPrice
}

// GetLiquidationPriceOk returns a tuple with the LiquidationPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetLiquidationPriceOk() (*string, bool) {
	if o == nil || IsNil(o.LiquidationPrice) {
		return nil, false
	}
	return o.LiquidationPrice, true
}

// HasLiquidationPrice returns a boolean if a field has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) HasLiquidationPrice() bool {
	if o != nil && !IsNil(o.LiquidationPrice) {
		return true
	}

	return false
}

// SetLiquidationPrice gets a reference to the given string and assigns it to the LiquidationPrice field.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) SetLiquidationPrice(v string) {
	o.LiquidationPrice = &v
}

// GetMarkPrice returns the MarkPrice field value if set, zero value otherwise.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetMarkPrice() string {
	if o == nil || IsNil(o.MarkPrice) {
		var ret string
		return ret
	}
	return *o.MarkPrice
}

// GetMarkPriceOk returns a tuple with the MarkPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetMarkPriceOk() (*string, bool) {
	if o == nil || IsNil(o.MarkPrice) {
		return nil, false
	}
	return o.MarkPrice, true
}

// HasMarkPrice returns a boolean if a field has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) HasMarkPrice() bool {
	if o != nil && !IsNil(o.MarkPrice) {
		return true
	}

	return false
}

// SetMarkPrice gets a reference to the given string and assigns it to the MarkPrice field.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) SetMarkPrice(v string) {
	o.MarkPrice = &v
}

// GetMaxNotional returns the MaxNotional field value if set, zero value otherwise.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetMaxNotional() string {
	if o == nil || IsNil(o.MaxNotional) {
		var ret string
		return ret
	}
	return *o.MaxNotional
}

// GetMaxNotionalOk returns a tuple with the MaxNotional field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetMaxNotionalOk() (*string, bool) {
	if o == nil || IsNil(o.MaxNotional) {
		return nil, false
	}
	return o.MaxNotional, true
}

// HasMaxNotional returns a boolean if a field has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) HasMaxNotional() bool {
	if o != nil && !IsNil(o.MaxNotional) {
		return true
	}

	return false
}

// SetMaxNotional gets a reference to the given string and assigns it to the MaxNotional field.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) SetMaxNotional(v string) {
	o.MaxNotional = &v
}

// GetPositionAmount returns the PositionAmount field value if set, zero value otherwise.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetPositionAmount() string {
	if o == nil || IsNil(o.PositionAmount) {
		var ret string
		return ret
	}
	return *o.PositionAmount
}

// GetPositionAmountOk returns a tuple with the PositionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetPositionAmountOk() (*string, bool) {
	if o == nil || IsNil(o.PositionAmount) {
		return nil, false
	}
	return o.PositionAmount, true
}

// HasPositionAmount returns a boolean if a field has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) HasPositionAmount() bool {
	if o != nil && !IsNil(o.PositionAmount) {
		return true
	}

	return false
}

// SetPositionAmount gets a reference to the given string and assigns it to the PositionAmount field.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) SetPositionAmount(v string) {
	o.PositionAmount = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) SetSymbol(v string) {
	o.Symbol = &v
}

// GetUnrealizedProfit returns the UnrealizedProfit field value if set, zero value otherwise.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetUnrealizedProfit() string {
	if o == nil || IsNil(o.UnrealizedProfit) {
		var ret string
		return ret
	}
	return *o.UnrealizedProfit
}

// GetUnrealizedProfitOk returns a tuple with the UnrealizedProfit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) GetUnrealizedProfitOk() (*string, bool) {
	if o == nil || IsNil(o.UnrealizedProfit) {
		return nil, false
	}
	return o.UnrealizedProfit, true
}

// HasUnrealizedProfit returns a boolean if a field has been set.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) HasUnrealizedProfit() bool {
	if o != nil && !IsNil(o.UnrealizedProfit) {
		return true
	}

	return false
}

// SetUnrealizedProfit gets a reference to the given string and assigns it to the UnrealizedProfit field.
func (o *GetSubAccountFuturesPositionRiskV1RespItem) SetUnrealizedProfit(v string) {
	o.UnrealizedProfit = &v
}

func (o GetSubAccountFuturesPositionRiskV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSubAccountFuturesPositionRiskV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EntryPrice) {
		toSerialize["entryPrice"] = o.EntryPrice
	}
	if !IsNil(o.Leverage) {
		toSerialize["leverage"] = o.Leverage
	}
	if !IsNil(o.LiquidationPrice) {
		toSerialize["liquidationPrice"] = o.LiquidationPrice
	}
	if !IsNil(o.MarkPrice) {
		toSerialize["markPrice"] = o.MarkPrice
	}
	if !IsNil(o.MaxNotional) {
		toSerialize["maxNotional"] = o.MaxNotional
	}
	if !IsNil(o.PositionAmount) {
		toSerialize["positionAmount"] = o.PositionAmount
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.UnrealizedProfit) {
		toSerialize["unrealizedProfit"] = o.UnrealizedProfit
	}
	return toSerialize, nil
}

type NullableGetSubAccountFuturesPositionRiskV1RespItem struct {
	value *GetSubAccountFuturesPositionRiskV1RespItem
	isSet bool
}

func (v NullableGetSubAccountFuturesPositionRiskV1RespItem) Get() *GetSubAccountFuturesPositionRiskV1RespItem {
	return v.value
}

func (v *NullableGetSubAccountFuturesPositionRiskV1RespItem) Set(val *GetSubAccountFuturesPositionRiskV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSubAccountFuturesPositionRiskV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSubAccountFuturesPositionRiskV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSubAccountFuturesPositionRiskV1RespItem(val *GetSubAccountFuturesPositionRiskV1RespItem) *NullableGetSubAccountFuturesPositionRiskV1RespItem {
	return &NullableGetSubAccountFuturesPositionRiskV1RespItem{value: val, isSet: true}
}

func (v NullableGetSubAccountFuturesPositionRiskV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSubAccountFuturesPositionRiskV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


