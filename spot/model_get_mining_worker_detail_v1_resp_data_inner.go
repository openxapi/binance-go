/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetMiningWorkerDetailV1RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMiningWorkerDetailV1RespDataInner{}

// GetMiningWorkerDetailV1RespDataInner struct for GetMiningWorkerDetailV1RespDataInner
type GetMiningWorkerDetailV1RespDataInner struct {
	HashrateDatas []GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner `json:"hashrateDatas,omitempty"`
	Type *string `json:"type,omitempty"`
	WorkerName *string `json:"workerName,omitempty"`
}

// NewGetMiningWorkerDetailV1RespDataInner instantiates a new GetMiningWorkerDetailV1RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMiningWorkerDetailV1RespDataInner() *GetMiningWorkerDetailV1RespDataInner {
	this := GetMiningWorkerDetailV1RespDataInner{}
	return &this
}

// NewGetMiningWorkerDetailV1RespDataInnerWithDefaults instantiates a new GetMiningWorkerDetailV1RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMiningWorkerDetailV1RespDataInnerWithDefaults() *GetMiningWorkerDetailV1RespDataInner {
	this := GetMiningWorkerDetailV1RespDataInner{}
	return &this
}

// GetHashrateDatas returns the HashrateDatas field value if set, zero value otherwise.
func (o *GetMiningWorkerDetailV1RespDataInner) GetHashrateDatas() []GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner {
	if o == nil || IsNil(o.HashrateDatas) {
		var ret []GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner
		return ret
	}
	return o.HashrateDatas
}

// GetHashrateDatasOk returns a tuple with the HashrateDatas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningWorkerDetailV1RespDataInner) GetHashrateDatasOk() ([]GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner, bool) {
	if o == nil || IsNil(o.HashrateDatas) {
		return nil, false
	}
	return o.HashrateDatas, true
}

// HasHashrateDatas returns a boolean if a field has been set.
func (o *GetMiningWorkerDetailV1RespDataInner) HasHashrateDatas() bool {
	if o != nil && !IsNil(o.HashrateDatas) {
		return true
	}

	return false
}

// SetHashrateDatas gets a reference to the given []GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner and assigns it to the HashrateDatas field.
func (o *GetMiningWorkerDetailV1RespDataInner) SetHashrateDatas(v []GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) {
	o.HashrateDatas = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetMiningWorkerDetailV1RespDataInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningWorkerDetailV1RespDataInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetMiningWorkerDetailV1RespDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetMiningWorkerDetailV1RespDataInner) SetType(v string) {
	o.Type = &v
}

// GetWorkerName returns the WorkerName field value if set, zero value otherwise.
func (o *GetMiningWorkerDetailV1RespDataInner) GetWorkerName() string {
	if o == nil || IsNil(o.WorkerName) {
		var ret string
		return ret
	}
	return *o.WorkerName
}

// GetWorkerNameOk returns a tuple with the WorkerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningWorkerDetailV1RespDataInner) GetWorkerNameOk() (*string, bool) {
	if o == nil || IsNil(o.WorkerName) {
		return nil, false
	}
	return o.WorkerName, true
}

// HasWorkerName returns a boolean if a field has been set.
func (o *GetMiningWorkerDetailV1RespDataInner) HasWorkerName() bool {
	if o != nil && !IsNil(o.WorkerName) {
		return true
	}

	return false
}

// SetWorkerName gets a reference to the given string and assigns it to the WorkerName field.
func (o *GetMiningWorkerDetailV1RespDataInner) SetWorkerName(v string) {
	o.WorkerName = &v
}

func (o GetMiningWorkerDetailV1RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMiningWorkerDetailV1RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HashrateDatas) {
		toSerialize["hashrateDatas"] = o.HashrateDatas
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.WorkerName) {
		toSerialize["workerName"] = o.WorkerName
	}
	return toSerialize, nil
}

type NullableGetMiningWorkerDetailV1RespDataInner struct {
	value *GetMiningWorkerDetailV1RespDataInner
	isSet bool
}

func (v NullableGetMiningWorkerDetailV1RespDataInner) Get() *GetMiningWorkerDetailV1RespDataInner {
	return v.value
}

func (v *NullableGetMiningWorkerDetailV1RespDataInner) Set(val *GetMiningWorkerDetailV1RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMiningWorkerDetailV1RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMiningWorkerDetailV1RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMiningWorkerDetailV1RespDataInner(val *GetMiningWorkerDetailV1RespDataInner) *NullableGetMiningWorkerDetailV1RespDataInner {
	return &NullableGetMiningWorkerDetailV1RespDataInner{value: val, isSet: true}
}

func (v NullableGetMiningWorkerDetailV1RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMiningWorkerDetailV1RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


