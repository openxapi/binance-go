/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateConvertLimitPlaceOrderV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConvertLimitPlaceOrderV1Resp{}

// CreateConvertLimitPlaceOrderV1Resp struct for CreateConvertLimitPlaceOrderV1Resp
type CreateConvertLimitPlaceOrderV1Resp struct {
	FromAmount *string `json:"fromAmount,omitempty"`
	InverseRatio *string `json:"inverseRatio,omitempty"`
	QuoteId *string `json:"quoteId,omitempty"`
	Ratio *string `json:"ratio,omitempty"`
	ToAmount *string `json:"toAmount,omitempty"`
	ValidTimestamp *int64 `json:"validTimestamp,omitempty"`
}

// NewCreateConvertLimitPlaceOrderV1Resp instantiates a new CreateConvertLimitPlaceOrderV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConvertLimitPlaceOrderV1Resp() *CreateConvertLimitPlaceOrderV1Resp {
	this := CreateConvertLimitPlaceOrderV1Resp{}
	return &this
}

// NewCreateConvertLimitPlaceOrderV1RespWithDefaults instantiates a new CreateConvertLimitPlaceOrderV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConvertLimitPlaceOrderV1RespWithDefaults() *CreateConvertLimitPlaceOrderV1Resp {
	this := CreateConvertLimitPlaceOrderV1Resp{}
	return &this
}

// GetFromAmount returns the FromAmount field value if set, zero value otherwise.
func (o *CreateConvertLimitPlaceOrderV1Resp) GetFromAmount() string {
	if o == nil || IsNil(o.FromAmount) {
		var ret string
		return ret
	}
	return *o.FromAmount
}

// GetFromAmountOk returns a tuple with the FromAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConvertLimitPlaceOrderV1Resp) GetFromAmountOk() (*string, bool) {
	if o == nil || IsNil(o.FromAmount) {
		return nil, false
	}
	return o.FromAmount, true
}

// HasFromAmount returns a boolean if a field has been set.
func (o *CreateConvertLimitPlaceOrderV1Resp) HasFromAmount() bool {
	if o != nil && !IsNil(o.FromAmount) {
		return true
	}

	return false
}

// SetFromAmount gets a reference to the given string and assigns it to the FromAmount field.
func (o *CreateConvertLimitPlaceOrderV1Resp) SetFromAmount(v string) {
	o.FromAmount = &v
}

// GetInverseRatio returns the InverseRatio field value if set, zero value otherwise.
func (o *CreateConvertLimitPlaceOrderV1Resp) GetInverseRatio() string {
	if o == nil || IsNil(o.InverseRatio) {
		var ret string
		return ret
	}
	return *o.InverseRatio
}

// GetInverseRatioOk returns a tuple with the InverseRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConvertLimitPlaceOrderV1Resp) GetInverseRatioOk() (*string, bool) {
	if o == nil || IsNil(o.InverseRatio) {
		return nil, false
	}
	return o.InverseRatio, true
}

// HasInverseRatio returns a boolean if a field has been set.
func (o *CreateConvertLimitPlaceOrderV1Resp) HasInverseRatio() bool {
	if o != nil && !IsNil(o.InverseRatio) {
		return true
	}

	return false
}

// SetInverseRatio gets a reference to the given string and assigns it to the InverseRatio field.
func (o *CreateConvertLimitPlaceOrderV1Resp) SetInverseRatio(v string) {
	o.InverseRatio = &v
}

// GetQuoteId returns the QuoteId field value if set, zero value otherwise.
func (o *CreateConvertLimitPlaceOrderV1Resp) GetQuoteId() string {
	if o == nil || IsNil(o.QuoteId) {
		var ret string
		return ret
	}
	return *o.QuoteId
}

// GetQuoteIdOk returns a tuple with the QuoteId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConvertLimitPlaceOrderV1Resp) GetQuoteIdOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteId) {
		return nil, false
	}
	return o.QuoteId, true
}

// HasQuoteId returns a boolean if a field has been set.
func (o *CreateConvertLimitPlaceOrderV1Resp) HasQuoteId() bool {
	if o != nil && !IsNil(o.QuoteId) {
		return true
	}

	return false
}

// SetQuoteId gets a reference to the given string and assigns it to the QuoteId field.
func (o *CreateConvertLimitPlaceOrderV1Resp) SetQuoteId(v string) {
	o.QuoteId = &v
}

// GetRatio returns the Ratio field value if set, zero value otherwise.
func (o *CreateConvertLimitPlaceOrderV1Resp) GetRatio() string {
	if o == nil || IsNil(o.Ratio) {
		var ret string
		return ret
	}
	return *o.Ratio
}

// GetRatioOk returns a tuple with the Ratio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConvertLimitPlaceOrderV1Resp) GetRatioOk() (*string, bool) {
	if o == nil || IsNil(o.Ratio) {
		return nil, false
	}
	return o.Ratio, true
}

// HasRatio returns a boolean if a field has been set.
func (o *CreateConvertLimitPlaceOrderV1Resp) HasRatio() bool {
	if o != nil && !IsNil(o.Ratio) {
		return true
	}

	return false
}

// SetRatio gets a reference to the given string and assigns it to the Ratio field.
func (o *CreateConvertLimitPlaceOrderV1Resp) SetRatio(v string) {
	o.Ratio = &v
}

// GetToAmount returns the ToAmount field value if set, zero value otherwise.
func (o *CreateConvertLimitPlaceOrderV1Resp) GetToAmount() string {
	if o == nil || IsNil(o.ToAmount) {
		var ret string
		return ret
	}
	return *o.ToAmount
}

// GetToAmountOk returns a tuple with the ToAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConvertLimitPlaceOrderV1Resp) GetToAmountOk() (*string, bool) {
	if o == nil || IsNil(o.ToAmount) {
		return nil, false
	}
	return o.ToAmount, true
}

// HasToAmount returns a boolean if a field has been set.
func (o *CreateConvertLimitPlaceOrderV1Resp) HasToAmount() bool {
	if o != nil && !IsNil(o.ToAmount) {
		return true
	}

	return false
}

// SetToAmount gets a reference to the given string and assigns it to the ToAmount field.
func (o *CreateConvertLimitPlaceOrderV1Resp) SetToAmount(v string) {
	o.ToAmount = &v
}

// GetValidTimestamp returns the ValidTimestamp field value if set, zero value otherwise.
func (o *CreateConvertLimitPlaceOrderV1Resp) GetValidTimestamp() int64 {
	if o == nil || IsNil(o.ValidTimestamp) {
		var ret int64
		return ret
	}
	return *o.ValidTimestamp
}

// GetValidTimestampOk returns a tuple with the ValidTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConvertLimitPlaceOrderV1Resp) GetValidTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.ValidTimestamp) {
		return nil, false
	}
	return o.ValidTimestamp, true
}

// HasValidTimestamp returns a boolean if a field has been set.
func (o *CreateConvertLimitPlaceOrderV1Resp) HasValidTimestamp() bool {
	if o != nil && !IsNil(o.ValidTimestamp) {
		return true
	}

	return false
}

// SetValidTimestamp gets a reference to the given int64 and assigns it to the ValidTimestamp field.
func (o *CreateConvertLimitPlaceOrderV1Resp) SetValidTimestamp(v int64) {
	o.ValidTimestamp = &v
}

func (o CreateConvertLimitPlaceOrderV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConvertLimitPlaceOrderV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromAmount) {
		toSerialize["fromAmount"] = o.FromAmount
	}
	if !IsNil(o.InverseRatio) {
		toSerialize["inverseRatio"] = o.InverseRatio
	}
	if !IsNil(o.QuoteId) {
		toSerialize["quoteId"] = o.QuoteId
	}
	if !IsNil(o.Ratio) {
		toSerialize["ratio"] = o.Ratio
	}
	if !IsNil(o.ToAmount) {
		toSerialize["toAmount"] = o.ToAmount
	}
	if !IsNil(o.ValidTimestamp) {
		toSerialize["validTimestamp"] = o.ValidTimestamp
	}
	return toSerialize, nil
}

type NullableCreateConvertLimitPlaceOrderV1Resp struct {
	value *CreateConvertLimitPlaceOrderV1Resp
	isSet bool
}

func (v NullableCreateConvertLimitPlaceOrderV1Resp) Get() *CreateConvertLimitPlaceOrderV1Resp {
	return v.value
}

func (v *NullableCreateConvertLimitPlaceOrderV1Resp) Set(val *CreateConvertLimitPlaceOrderV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConvertLimitPlaceOrderV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConvertLimitPlaceOrderV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConvertLimitPlaceOrderV1Resp(val *CreateConvertLimitPlaceOrderV1Resp) *NullableCreateConvertLimitPlaceOrderV1Resp {
	return &NullableCreateConvertLimitPlaceOrderV1Resp{value: val, isSet: true}
}

func (v NullableCreateConvertLimitPlaceOrderV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConvertLimitPlaceOrderV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


