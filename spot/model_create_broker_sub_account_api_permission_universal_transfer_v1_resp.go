/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp{}

// CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp struct for CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp
type CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp struct {
	Apikey *string `json:"apikey,omitempty"`
	CanUniversalTransfer *bool `json:"canUniversalTransfer,omitempty"`
	SubaccountId *string `json:"subaccountId,omitempty"`
}

// NewCreateBrokerSubAccountApiPermissionUniversalTransferV1Resp instantiates a new CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBrokerSubAccountApiPermissionUniversalTransferV1Resp() *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp {
	this := CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp{}
	return &this
}

// NewCreateBrokerSubAccountApiPermissionUniversalTransferV1RespWithDefaults instantiates a new CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBrokerSubAccountApiPermissionUniversalTransferV1RespWithDefaults() *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp {
	this := CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp{}
	return &this
}

// GetApikey returns the Apikey field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) GetApikey() string {
	if o == nil || IsNil(o.Apikey) {
		var ret string
		return ret
	}
	return *o.Apikey
}

// GetApikeyOk returns a tuple with the Apikey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) GetApikeyOk() (*string, bool) {
	if o == nil || IsNil(o.Apikey) {
		return nil, false
	}
	return o.Apikey, true
}

// HasApikey returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) HasApikey() bool {
	if o != nil && !IsNil(o.Apikey) {
		return true
	}

	return false
}

// SetApikey gets a reference to the given string and assigns it to the Apikey field.
func (o *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) SetApikey(v string) {
	o.Apikey = &v
}

// GetCanUniversalTransfer returns the CanUniversalTransfer field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) GetCanUniversalTransfer() bool {
	if o == nil || IsNil(o.CanUniversalTransfer) {
		var ret bool
		return ret
	}
	return *o.CanUniversalTransfer
}

// GetCanUniversalTransferOk returns a tuple with the CanUniversalTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) GetCanUniversalTransferOk() (*bool, bool) {
	if o == nil || IsNil(o.CanUniversalTransfer) {
		return nil, false
	}
	return o.CanUniversalTransfer, true
}

// HasCanUniversalTransfer returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) HasCanUniversalTransfer() bool {
	if o != nil && !IsNil(o.CanUniversalTransfer) {
		return true
	}

	return false
}

// SetCanUniversalTransfer gets a reference to the given bool and assigns it to the CanUniversalTransfer field.
func (o *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) SetCanUniversalTransfer(v bool) {
	o.CanUniversalTransfer = &v
}

// GetSubaccountId returns the SubaccountId field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) GetSubaccountId() string {
	if o == nil || IsNil(o.SubaccountId) {
		var ret string
		return ret
	}
	return *o.SubaccountId
}

// GetSubaccountIdOk returns a tuple with the SubaccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) GetSubaccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubaccountId) {
		return nil, false
	}
	return o.SubaccountId, true
}

// HasSubaccountId returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) HasSubaccountId() bool {
	if o != nil && !IsNil(o.SubaccountId) {
		return true
	}

	return false
}

// SetSubaccountId gets a reference to the given string and assigns it to the SubaccountId field.
func (o *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) SetSubaccountId(v string) {
	o.SubaccountId = &v
}

func (o CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Apikey) {
		toSerialize["apikey"] = o.Apikey
	}
	if !IsNil(o.CanUniversalTransfer) {
		toSerialize["canUniversalTransfer"] = o.CanUniversalTransfer
	}
	if !IsNil(o.SubaccountId) {
		toSerialize["subaccountId"] = o.SubaccountId
	}
	return toSerialize, nil
}

type NullableCreateBrokerSubAccountApiPermissionUniversalTransferV1Resp struct {
	value *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp
	isSet bool
}

func (v NullableCreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) Get() *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp {
	return v.value
}

func (v *NullableCreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) Set(val *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBrokerSubAccountApiPermissionUniversalTransferV1Resp(val *CreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) *NullableCreateBrokerSubAccountApiPermissionUniversalTransferV1Resp {
	return &NullableCreateBrokerSubAccountApiPermissionUniversalTransferV1Resp{value: val, isSet: true}
}

func (v NullableCreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBrokerSubAccountApiPermissionUniversalTransferV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


