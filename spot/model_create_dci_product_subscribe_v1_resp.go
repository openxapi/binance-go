/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateDciProductSubscribeV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateDciProductSubscribeV1Resp{}

// CreateDciProductSubscribeV1Resp struct for CreateDciProductSubscribeV1Resp
type CreateDciProductSubscribeV1Resp struct {
	Apr *string `json:"apr,omitempty"`
	AutoCompoundPlan *string `json:"autoCompoundPlan,omitempty"`
	Duration *int32 `json:"duration,omitempty"`
	ExercisedCoin *string `json:"exercisedCoin,omitempty"`
	InvestCoin *string `json:"investCoin,omitempty"`
	OptionType *string `json:"optionType,omitempty"`
	OrderId *int64 `json:"orderId,omitempty"`
	PositionId *int64 `json:"positionId,omitempty"`
	PurchaseStatus *string `json:"purchaseStatus,omitempty"`
	PurchaseTime *int64 `json:"purchaseTime,omitempty"`
	SettleDate *int32 `json:"settleDate,omitempty"`
	StrikePrice *string `json:"strikePrice,omitempty"`
	SubscriptionAmount *string `json:"subscriptionAmount,omitempty"`
}

// NewCreateDciProductSubscribeV1Resp instantiates a new CreateDciProductSubscribeV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDciProductSubscribeV1Resp() *CreateDciProductSubscribeV1Resp {
	this := CreateDciProductSubscribeV1Resp{}
	return &this
}

// NewCreateDciProductSubscribeV1RespWithDefaults instantiates a new CreateDciProductSubscribeV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDciProductSubscribeV1RespWithDefaults() *CreateDciProductSubscribeV1Resp {
	this := CreateDciProductSubscribeV1Resp{}
	return &this
}

// GetApr returns the Apr field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetApr() string {
	if o == nil || IsNil(o.Apr) {
		var ret string
		return ret
	}
	return *o.Apr
}

// GetAprOk returns a tuple with the Apr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetAprOk() (*string, bool) {
	if o == nil || IsNil(o.Apr) {
		return nil, false
	}
	return o.Apr, true
}

// HasApr returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasApr() bool {
	if o != nil && !IsNil(o.Apr) {
		return true
	}

	return false
}

// SetApr gets a reference to the given string and assigns it to the Apr field.
func (o *CreateDciProductSubscribeV1Resp) SetApr(v string) {
	o.Apr = &v
}

// GetAutoCompoundPlan returns the AutoCompoundPlan field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetAutoCompoundPlan() string {
	if o == nil || IsNil(o.AutoCompoundPlan) {
		var ret string
		return ret
	}
	return *o.AutoCompoundPlan
}

// GetAutoCompoundPlanOk returns a tuple with the AutoCompoundPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetAutoCompoundPlanOk() (*string, bool) {
	if o == nil || IsNil(o.AutoCompoundPlan) {
		return nil, false
	}
	return o.AutoCompoundPlan, true
}

// HasAutoCompoundPlan returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasAutoCompoundPlan() bool {
	if o != nil && !IsNil(o.AutoCompoundPlan) {
		return true
	}

	return false
}

// SetAutoCompoundPlan gets a reference to the given string and assigns it to the AutoCompoundPlan field.
func (o *CreateDciProductSubscribeV1Resp) SetAutoCompoundPlan(v string) {
	o.AutoCompoundPlan = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *CreateDciProductSubscribeV1Resp) SetDuration(v int32) {
	o.Duration = &v
}

// GetExercisedCoin returns the ExercisedCoin field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetExercisedCoin() string {
	if o == nil || IsNil(o.ExercisedCoin) {
		var ret string
		return ret
	}
	return *o.ExercisedCoin
}

// GetExercisedCoinOk returns a tuple with the ExercisedCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetExercisedCoinOk() (*string, bool) {
	if o == nil || IsNil(o.ExercisedCoin) {
		return nil, false
	}
	return o.ExercisedCoin, true
}

// HasExercisedCoin returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasExercisedCoin() bool {
	if o != nil && !IsNil(o.ExercisedCoin) {
		return true
	}

	return false
}

// SetExercisedCoin gets a reference to the given string and assigns it to the ExercisedCoin field.
func (o *CreateDciProductSubscribeV1Resp) SetExercisedCoin(v string) {
	o.ExercisedCoin = &v
}

// GetInvestCoin returns the InvestCoin field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetInvestCoin() string {
	if o == nil || IsNil(o.InvestCoin) {
		var ret string
		return ret
	}
	return *o.InvestCoin
}

// GetInvestCoinOk returns a tuple with the InvestCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetInvestCoinOk() (*string, bool) {
	if o == nil || IsNil(o.InvestCoin) {
		return nil, false
	}
	return o.InvestCoin, true
}

// HasInvestCoin returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasInvestCoin() bool {
	if o != nil && !IsNil(o.InvestCoin) {
		return true
	}

	return false
}

// SetInvestCoin gets a reference to the given string and assigns it to the InvestCoin field.
func (o *CreateDciProductSubscribeV1Resp) SetInvestCoin(v string) {
	o.InvestCoin = &v
}

// GetOptionType returns the OptionType field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetOptionType() string {
	if o == nil || IsNil(o.OptionType) {
		var ret string
		return ret
	}
	return *o.OptionType
}

// GetOptionTypeOk returns a tuple with the OptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetOptionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OptionType) {
		return nil, false
	}
	return o.OptionType, true
}

// HasOptionType returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasOptionType() bool {
	if o != nil && !IsNil(o.OptionType) {
		return true
	}

	return false
}

// SetOptionType gets a reference to the given string and assigns it to the OptionType field.
func (o *CreateDciProductSubscribeV1Resp) SetOptionType(v string) {
	o.OptionType = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetOrderId() int64 {
	if o == nil || IsNil(o.OrderId) {
		var ret int64
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetOrderIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int64 and assigns it to the OrderId field.
func (o *CreateDciProductSubscribeV1Resp) SetOrderId(v int64) {
	o.OrderId = &v
}

// GetPositionId returns the PositionId field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetPositionId() int64 {
	if o == nil || IsNil(o.PositionId) {
		var ret int64
		return ret
	}
	return *o.PositionId
}

// GetPositionIdOk returns a tuple with the PositionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetPositionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PositionId) {
		return nil, false
	}
	return o.PositionId, true
}

// HasPositionId returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasPositionId() bool {
	if o != nil && !IsNil(o.PositionId) {
		return true
	}

	return false
}

// SetPositionId gets a reference to the given int64 and assigns it to the PositionId field.
func (o *CreateDciProductSubscribeV1Resp) SetPositionId(v int64) {
	o.PositionId = &v
}

// GetPurchaseStatus returns the PurchaseStatus field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetPurchaseStatus() string {
	if o == nil || IsNil(o.PurchaseStatus) {
		var ret string
		return ret
	}
	return *o.PurchaseStatus
}

// GetPurchaseStatusOk returns a tuple with the PurchaseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetPurchaseStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PurchaseStatus) {
		return nil, false
	}
	return o.PurchaseStatus, true
}

// HasPurchaseStatus returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasPurchaseStatus() bool {
	if o != nil && !IsNil(o.PurchaseStatus) {
		return true
	}

	return false
}

// SetPurchaseStatus gets a reference to the given string and assigns it to the PurchaseStatus field.
func (o *CreateDciProductSubscribeV1Resp) SetPurchaseStatus(v string) {
	o.PurchaseStatus = &v
}

// GetPurchaseTime returns the PurchaseTime field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetPurchaseTime() int64 {
	if o == nil || IsNil(o.PurchaseTime) {
		var ret int64
		return ret
	}
	return *o.PurchaseTime
}

// GetPurchaseTimeOk returns a tuple with the PurchaseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetPurchaseTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.PurchaseTime) {
		return nil, false
	}
	return o.PurchaseTime, true
}

// HasPurchaseTime returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasPurchaseTime() bool {
	if o != nil && !IsNil(o.PurchaseTime) {
		return true
	}

	return false
}

// SetPurchaseTime gets a reference to the given int64 and assigns it to the PurchaseTime field.
func (o *CreateDciProductSubscribeV1Resp) SetPurchaseTime(v int64) {
	o.PurchaseTime = &v
}

// GetSettleDate returns the SettleDate field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetSettleDate() int32 {
	if o == nil || IsNil(o.SettleDate) {
		var ret int32
		return ret
	}
	return *o.SettleDate
}

// GetSettleDateOk returns a tuple with the SettleDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetSettleDateOk() (*int32, bool) {
	if o == nil || IsNil(o.SettleDate) {
		return nil, false
	}
	return o.SettleDate, true
}

// HasSettleDate returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasSettleDate() bool {
	if o != nil && !IsNil(o.SettleDate) {
		return true
	}

	return false
}

// SetSettleDate gets a reference to the given int32 and assigns it to the SettleDate field.
func (o *CreateDciProductSubscribeV1Resp) SetSettleDate(v int32) {
	o.SettleDate = &v
}

// GetStrikePrice returns the StrikePrice field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetStrikePrice() string {
	if o == nil || IsNil(o.StrikePrice) {
		var ret string
		return ret
	}
	return *o.StrikePrice
}

// GetStrikePriceOk returns a tuple with the StrikePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetStrikePriceOk() (*string, bool) {
	if o == nil || IsNil(o.StrikePrice) {
		return nil, false
	}
	return o.StrikePrice, true
}

// HasStrikePrice returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasStrikePrice() bool {
	if o != nil && !IsNil(o.StrikePrice) {
		return true
	}

	return false
}

// SetStrikePrice gets a reference to the given string and assigns it to the StrikePrice field.
func (o *CreateDciProductSubscribeV1Resp) SetStrikePrice(v string) {
	o.StrikePrice = &v
}

// GetSubscriptionAmount returns the SubscriptionAmount field value if set, zero value otherwise.
func (o *CreateDciProductSubscribeV1Resp) GetSubscriptionAmount() string {
	if o == nil || IsNil(o.SubscriptionAmount) {
		var ret string
		return ret
	}
	return *o.SubscriptionAmount
}

// GetSubscriptionAmountOk returns a tuple with the SubscriptionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDciProductSubscribeV1Resp) GetSubscriptionAmountOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionAmount) {
		return nil, false
	}
	return o.SubscriptionAmount, true
}

// HasSubscriptionAmount returns a boolean if a field has been set.
func (o *CreateDciProductSubscribeV1Resp) HasSubscriptionAmount() bool {
	if o != nil && !IsNil(o.SubscriptionAmount) {
		return true
	}

	return false
}

// SetSubscriptionAmount gets a reference to the given string and assigns it to the SubscriptionAmount field.
func (o *CreateDciProductSubscribeV1Resp) SetSubscriptionAmount(v string) {
	o.SubscriptionAmount = &v
}

func (o CreateDciProductSubscribeV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateDciProductSubscribeV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Apr) {
		toSerialize["apr"] = o.Apr
	}
	if !IsNil(o.AutoCompoundPlan) {
		toSerialize["autoCompoundPlan"] = o.AutoCompoundPlan
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.ExercisedCoin) {
		toSerialize["exercisedCoin"] = o.ExercisedCoin
	}
	if !IsNil(o.InvestCoin) {
		toSerialize["investCoin"] = o.InvestCoin
	}
	if !IsNil(o.OptionType) {
		toSerialize["optionType"] = o.OptionType
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.PositionId) {
		toSerialize["positionId"] = o.PositionId
	}
	if !IsNil(o.PurchaseStatus) {
		toSerialize["purchaseStatus"] = o.PurchaseStatus
	}
	if !IsNil(o.PurchaseTime) {
		toSerialize["purchaseTime"] = o.PurchaseTime
	}
	if !IsNil(o.SettleDate) {
		toSerialize["settleDate"] = o.SettleDate
	}
	if !IsNil(o.StrikePrice) {
		toSerialize["strikePrice"] = o.StrikePrice
	}
	if !IsNil(o.SubscriptionAmount) {
		toSerialize["subscriptionAmount"] = o.SubscriptionAmount
	}
	return toSerialize, nil
}

type NullableCreateDciProductSubscribeV1Resp struct {
	value *CreateDciProductSubscribeV1Resp
	isSet bool
}

func (v NullableCreateDciProductSubscribeV1Resp) Get() *CreateDciProductSubscribeV1Resp {
	return v.value
}

func (v *NullableCreateDciProductSubscribeV1Resp) Set(val *CreateDciProductSubscribeV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDciProductSubscribeV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDciProductSubscribeV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDciProductSubscribeV1Resp(val *CreateDciProductSubscribeV1Resp) *NullableCreateDciProductSubscribeV1Resp {
	return &NullableCreateDciProductSubscribeV1Resp{value: val, isSet: true}
}

func (v NullableCreateDciProductSubscribeV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDciProductSubscribeV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


