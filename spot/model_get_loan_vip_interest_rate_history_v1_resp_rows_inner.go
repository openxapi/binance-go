/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetLoanVipInterestRateHistoryV1RespRowsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLoanVipInterestRateHistoryV1RespRowsInner{}

// GetLoanVipInterestRateHistoryV1RespRowsInner struct for GetLoanVipInterestRateHistoryV1RespRowsInner
type GetLoanVipInterestRateHistoryV1RespRowsInner struct {
	AnnualizedInterestRate *string `json:"annualizedInterestRate,omitempty"`
	Coin *string `json:"coin,omitempty"`
	Time *int64 `json:"time,omitempty"`
}

// NewGetLoanVipInterestRateHistoryV1RespRowsInner instantiates a new GetLoanVipInterestRateHistoryV1RespRowsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLoanVipInterestRateHistoryV1RespRowsInner() *GetLoanVipInterestRateHistoryV1RespRowsInner {
	this := GetLoanVipInterestRateHistoryV1RespRowsInner{}
	return &this
}

// NewGetLoanVipInterestRateHistoryV1RespRowsInnerWithDefaults instantiates a new GetLoanVipInterestRateHistoryV1RespRowsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLoanVipInterestRateHistoryV1RespRowsInnerWithDefaults() *GetLoanVipInterestRateHistoryV1RespRowsInner {
	this := GetLoanVipInterestRateHistoryV1RespRowsInner{}
	return &this
}

// GetAnnualizedInterestRate returns the AnnualizedInterestRate field value if set, zero value otherwise.
func (o *GetLoanVipInterestRateHistoryV1RespRowsInner) GetAnnualizedInterestRate() string {
	if o == nil || IsNil(o.AnnualizedInterestRate) {
		var ret string
		return ret
	}
	return *o.AnnualizedInterestRate
}

// GetAnnualizedInterestRateOk returns a tuple with the AnnualizedInterestRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoanVipInterestRateHistoryV1RespRowsInner) GetAnnualizedInterestRateOk() (*string, bool) {
	if o == nil || IsNil(o.AnnualizedInterestRate) {
		return nil, false
	}
	return o.AnnualizedInterestRate, true
}

// HasAnnualizedInterestRate returns a boolean if a field has been set.
func (o *GetLoanVipInterestRateHistoryV1RespRowsInner) HasAnnualizedInterestRate() bool {
	if o != nil && !IsNil(o.AnnualizedInterestRate) {
		return true
	}

	return false
}

// SetAnnualizedInterestRate gets a reference to the given string and assigns it to the AnnualizedInterestRate field.
func (o *GetLoanVipInterestRateHistoryV1RespRowsInner) SetAnnualizedInterestRate(v string) {
	o.AnnualizedInterestRate = &v
}

// GetCoin returns the Coin field value if set, zero value otherwise.
func (o *GetLoanVipInterestRateHistoryV1RespRowsInner) GetCoin() string {
	if o == nil || IsNil(o.Coin) {
		var ret string
		return ret
	}
	return *o.Coin
}

// GetCoinOk returns a tuple with the Coin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoanVipInterestRateHistoryV1RespRowsInner) GetCoinOk() (*string, bool) {
	if o == nil || IsNil(o.Coin) {
		return nil, false
	}
	return o.Coin, true
}

// HasCoin returns a boolean if a field has been set.
func (o *GetLoanVipInterestRateHistoryV1RespRowsInner) HasCoin() bool {
	if o != nil && !IsNil(o.Coin) {
		return true
	}

	return false
}

// SetCoin gets a reference to the given string and assigns it to the Coin field.
func (o *GetLoanVipInterestRateHistoryV1RespRowsInner) SetCoin(v string) {
	o.Coin = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetLoanVipInterestRateHistoryV1RespRowsInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoanVipInterestRateHistoryV1RespRowsInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetLoanVipInterestRateHistoryV1RespRowsInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetLoanVipInterestRateHistoryV1RespRowsInner) SetTime(v int64) {
	o.Time = &v
}

func (o GetLoanVipInterestRateHistoryV1RespRowsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLoanVipInterestRateHistoryV1RespRowsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnnualizedInterestRate) {
		toSerialize["annualizedInterestRate"] = o.AnnualizedInterestRate
	}
	if !IsNil(o.Coin) {
		toSerialize["coin"] = o.Coin
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableGetLoanVipInterestRateHistoryV1RespRowsInner struct {
	value *GetLoanVipInterestRateHistoryV1RespRowsInner
	isSet bool
}

func (v NullableGetLoanVipInterestRateHistoryV1RespRowsInner) Get() *GetLoanVipInterestRateHistoryV1RespRowsInner {
	return v.value
}

func (v *NullableGetLoanVipInterestRateHistoryV1RespRowsInner) Set(val *GetLoanVipInterestRateHistoryV1RespRowsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLoanVipInterestRateHistoryV1RespRowsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLoanVipInterestRateHistoryV1RespRowsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLoanVipInterestRateHistoryV1RespRowsInner(val *GetLoanVipInterestRateHistoryV1RespRowsInner) *NullableGetLoanVipInterestRateHistoryV1RespRowsInner {
	return &NullableGetLoanVipInterestRateHistoryV1RespRowsInner{value: val, isSet: true}
}

func (v NullableGetLoanVipInterestRateHistoryV1RespRowsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLoanVipInterestRateHistoryV1RespRowsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


