/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner{}

// GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner struct for GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner
type GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner struct {
	Amount *string `json:"amount,omitempty"`
	BnsolHolding *string `json:"bnsolHolding,omitempty"`
	Status *string `json:"status,omitempty"`
	Time *int64 `json:"time,omitempty"`
	Token *string `json:"token,omitempty"`
}

// NewGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner instantiates a new GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner() *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner {
	this := GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner{}
	return &this
}

// NewGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInnerWithDefaults instantiates a new GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInnerWithDefaults() *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner {
	this := GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) SetAmount(v string) {
	o.Amount = &v
}

// GetBnsolHolding returns the BnsolHolding field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) GetBnsolHolding() string {
	if o == nil || IsNil(o.BnsolHolding) {
		var ret string
		return ret
	}
	return *o.BnsolHolding
}

// GetBnsolHoldingOk returns a tuple with the BnsolHolding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) GetBnsolHoldingOk() (*string, bool) {
	if o == nil || IsNil(o.BnsolHolding) {
		return nil, false
	}
	return o.BnsolHolding, true
}

// HasBnsolHolding returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) HasBnsolHolding() bool {
	if o != nil && !IsNil(o.BnsolHolding) {
		return true
	}

	return false
}

// SetBnsolHolding gets a reference to the given string and assigns it to the BnsolHolding field.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) SetBnsolHolding(v string) {
	o.BnsolHolding = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) SetStatus(v string) {
	o.Status = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) SetTime(v int64) {
	o.Time = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) SetToken(v string) {
	o.Token = &v
}

func (o GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.BnsolHolding) {
		toSerialize["bnsolHolding"] = o.BnsolHolding
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner struct {
	value *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner
	isSet bool
}

func (v NullableGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) Get() *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner {
	return v.value
}

func (v *NullableGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) Set(val *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner(val *GetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) *NullableGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner {
	return &NullableGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner{value: val, isSet: true}
}

func (v NullableGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSolStakingSolHistoryBoostRewardsHistoryV1RespRowsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


