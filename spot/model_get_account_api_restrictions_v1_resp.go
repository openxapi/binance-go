/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetAccountApiRestrictionsV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAccountApiRestrictionsV1Resp{}

// GetAccountApiRestrictionsV1Resp struct for GetAccountApiRestrictionsV1Resp
type GetAccountApiRestrictionsV1Resp struct {
	CreateTime *int64 `json:"createTime,omitempty"`
	EnableFixApiTrade *bool `json:"enableFixApiTrade,omitempty"`
	EnableFixReadOnly *bool `json:"enableFixReadOnly,omitempty"`
	EnableFutures *bool `json:"enableFutures,omitempty"`
	EnableInternalTransfer *bool `json:"enableInternalTransfer,omitempty"`
	EnableMargin *bool `json:"enableMargin,omitempty"`
	EnablePortfolioMarginTrading *bool `json:"enablePortfolioMarginTrading,omitempty"`
	EnableReading *bool `json:"enableReading,omitempty"`
	EnableSpotAndMarginTrading *bool `json:"enableSpotAndMarginTrading,omitempty"`
	EnableVanillaOptions *bool `json:"enableVanillaOptions,omitempty"`
	EnableWithdrawals *bool `json:"enableWithdrawals,omitempty"`
	IpRestrict *bool `json:"ipRestrict,omitempty"`
	PermitsUniversalTransfer *bool `json:"permitsUniversalTransfer,omitempty"`
}

// NewGetAccountApiRestrictionsV1Resp instantiates a new GetAccountApiRestrictionsV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountApiRestrictionsV1Resp() *GetAccountApiRestrictionsV1Resp {
	this := GetAccountApiRestrictionsV1Resp{}
	return &this
}

// NewGetAccountApiRestrictionsV1RespWithDefaults instantiates a new GetAccountApiRestrictionsV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountApiRestrictionsV1RespWithDefaults() *GetAccountApiRestrictionsV1Resp {
	this := GetAccountApiRestrictionsV1Resp{}
	return &this
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime) {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetCreateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *GetAccountApiRestrictionsV1Resp) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetEnableFixApiTrade returns the EnableFixApiTrade field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableFixApiTrade() bool {
	if o == nil || IsNil(o.EnableFixApiTrade) {
		var ret bool
		return ret
	}
	return *o.EnableFixApiTrade
}

// GetEnableFixApiTradeOk returns a tuple with the EnableFixApiTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableFixApiTradeOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableFixApiTrade) {
		return nil, false
	}
	return o.EnableFixApiTrade, true
}

// HasEnableFixApiTrade returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasEnableFixApiTrade() bool {
	if o != nil && !IsNil(o.EnableFixApiTrade) {
		return true
	}

	return false
}

// SetEnableFixApiTrade gets a reference to the given bool and assigns it to the EnableFixApiTrade field.
func (o *GetAccountApiRestrictionsV1Resp) SetEnableFixApiTrade(v bool) {
	o.EnableFixApiTrade = &v
}

// GetEnableFixReadOnly returns the EnableFixReadOnly field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableFixReadOnly() bool {
	if o == nil || IsNil(o.EnableFixReadOnly) {
		var ret bool
		return ret
	}
	return *o.EnableFixReadOnly
}

// GetEnableFixReadOnlyOk returns a tuple with the EnableFixReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableFixReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableFixReadOnly) {
		return nil, false
	}
	return o.EnableFixReadOnly, true
}

// HasEnableFixReadOnly returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasEnableFixReadOnly() bool {
	if o != nil && !IsNil(o.EnableFixReadOnly) {
		return true
	}

	return false
}

// SetEnableFixReadOnly gets a reference to the given bool and assigns it to the EnableFixReadOnly field.
func (o *GetAccountApiRestrictionsV1Resp) SetEnableFixReadOnly(v bool) {
	o.EnableFixReadOnly = &v
}

// GetEnableFutures returns the EnableFutures field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableFutures() bool {
	if o == nil || IsNil(o.EnableFutures) {
		var ret bool
		return ret
	}
	return *o.EnableFutures
}

// GetEnableFuturesOk returns a tuple with the EnableFutures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableFuturesOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableFutures) {
		return nil, false
	}
	return o.EnableFutures, true
}

// HasEnableFutures returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasEnableFutures() bool {
	if o != nil && !IsNil(o.EnableFutures) {
		return true
	}

	return false
}

// SetEnableFutures gets a reference to the given bool and assigns it to the EnableFutures field.
func (o *GetAccountApiRestrictionsV1Resp) SetEnableFutures(v bool) {
	o.EnableFutures = &v
}

// GetEnableInternalTransfer returns the EnableInternalTransfer field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableInternalTransfer() bool {
	if o == nil || IsNil(o.EnableInternalTransfer) {
		var ret bool
		return ret
	}
	return *o.EnableInternalTransfer
}

// GetEnableInternalTransferOk returns a tuple with the EnableInternalTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableInternalTransferOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableInternalTransfer) {
		return nil, false
	}
	return o.EnableInternalTransfer, true
}

// HasEnableInternalTransfer returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasEnableInternalTransfer() bool {
	if o != nil && !IsNil(o.EnableInternalTransfer) {
		return true
	}

	return false
}

// SetEnableInternalTransfer gets a reference to the given bool and assigns it to the EnableInternalTransfer field.
func (o *GetAccountApiRestrictionsV1Resp) SetEnableInternalTransfer(v bool) {
	o.EnableInternalTransfer = &v
}

// GetEnableMargin returns the EnableMargin field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableMargin() bool {
	if o == nil || IsNil(o.EnableMargin) {
		var ret bool
		return ret
	}
	return *o.EnableMargin
}

// GetEnableMarginOk returns a tuple with the EnableMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableMarginOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableMargin) {
		return nil, false
	}
	return o.EnableMargin, true
}

// HasEnableMargin returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasEnableMargin() bool {
	if o != nil && !IsNil(o.EnableMargin) {
		return true
	}

	return false
}

// SetEnableMargin gets a reference to the given bool and assigns it to the EnableMargin field.
func (o *GetAccountApiRestrictionsV1Resp) SetEnableMargin(v bool) {
	o.EnableMargin = &v
}

// GetEnablePortfolioMarginTrading returns the EnablePortfolioMarginTrading field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetEnablePortfolioMarginTrading() bool {
	if o == nil || IsNil(o.EnablePortfolioMarginTrading) {
		var ret bool
		return ret
	}
	return *o.EnablePortfolioMarginTrading
}

// GetEnablePortfolioMarginTradingOk returns a tuple with the EnablePortfolioMarginTrading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetEnablePortfolioMarginTradingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnablePortfolioMarginTrading) {
		return nil, false
	}
	return o.EnablePortfolioMarginTrading, true
}

// HasEnablePortfolioMarginTrading returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasEnablePortfolioMarginTrading() bool {
	if o != nil && !IsNil(o.EnablePortfolioMarginTrading) {
		return true
	}

	return false
}

// SetEnablePortfolioMarginTrading gets a reference to the given bool and assigns it to the EnablePortfolioMarginTrading field.
func (o *GetAccountApiRestrictionsV1Resp) SetEnablePortfolioMarginTrading(v bool) {
	o.EnablePortfolioMarginTrading = &v
}

// GetEnableReading returns the EnableReading field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableReading() bool {
	if o == nil || IsNil(o.EnableReading) {
		var ret bool
		return ret
	}
	return *o.EnableReading
}

// GetEnableReadingOk returns a tuple with the EnableReading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableReadingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableReading) {
		return nil, false
	}
	return o.EnableReading, true
}

// HasEnableReading returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasEnableReading() bool {
	if o != nil && !IsNil(o.EnableReading) {
		return true
	}

	return false
}

// SetEnableReading gets a reference to the given bool and assigns it to the EnableReading field.
func (o *GetAccountApiRestrictionsV1Resp) SetEnableReading(v bool) {
	o.EnableReading = &v
}

// GetEnableSpotAndMarginTrading returns the EnableSpotAndMarginTrading field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableSpotAndMarginTrading() bool {
	if o == nil || IsNil(o.EnableSpotAndMarginTrading) {
		var ret bool
		return ret
	}
	return *o.EnableSpotAndMarginTrading
}

// GetEnableSpotAndMarginTradingOk returns a tuple with the EnableSpotAndMarginTrading field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableSpotAndMarginTradingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableSpotAndMarginTrading) {
		return nil, false
	}
	return o.EnableSpotAndMarginTrading, true
}

// HasEnableSpotAndMarginTrading returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasEnableSpotAndMarginTrading() bool {
	if o != nil && !IsNil(o.EnableSpotAndMarginTrading) {
		return true
	}

	return false
}

// SetEnableSpotAndMarginTrading gets a reference to the given bool and assigns it to the EnableSpotAndMarginTrading field.
func (o *GetAccountApiRestrictionsV1Resp) SetEnableSpotAndMarginTrading(v bool) {
	o.EnableSpotAndMarginTrading = &v
}

// GetEnableVanillaOptions returns the EnableVanillaOptions field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableVanillaOptions() bool {
	if o == nil || IsNil(o.EnableVanillaOptions) {
		var ret bool
		return ret
	}
	return *o.EnableVanillaOptions
}

// GetEnableVanillaOptionsOk returns a tuple with the EnableVanillaOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableVanillaOptionsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableVanillaOptions) {
		return nil, false
	}
	return o.EnableVanillaOptions, true
}

// HasEnableVanillaOptions returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasEnableVanillaOptions() bool {
	if o != nil && !IsNil(o.EnableVanillaOptions) {
		return true
	}

	return false
}

// SetEnableVanillaOptions gets a reference to the given bool and assigns it to the EnableVanillaOptions field.
func (o *GetAccountApiRestrictionsV1Resp) SetEnableVanillaOptions(v bool) {
	o.EnableVanillaOptions = &v
}

// GetEnableWithdrawals returns the EnableWithdrawals field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableWithdrawals() bool {
	if o == nil || IsNil(o.EnableWithdrawals) {
		var ret bool
		return ret
	}
	return *o.EnableWithdrawals
}

// GetEnableWithdrawalsOk returns a tuple with the EnableWithdrawals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetEnableWithdrawalsOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableWithdrawals) {
		return nil, false
	}
	return o.EnableWithdrawals, true
}

// HasEnableWithdrawals returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasEnableWithdrawals() bool {
	if o != nil && !IsNil(o.EnableWithdrawals) {
		return true
	}

	return false
}

// SetEnableWithdrawals gets a reference to the given bool and assigns it to the EnableWithdrawals field.
func (o *GetAccountApiRestrictionsV1Resp) SetEnableWithdrawals(v bool) {
	o.EnableWithdrawals = &v
}

// GetIpRestrict returns the IpRestrict field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetIpRestrict() bool {
	if o == nil || IsNil(o.IpRestrict) {
		var ret bool
		return ret
	}
	return *o.IpRestrict
}

// GetIpRestrictOk returns a tuple with the IpRestrict field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetIpRestrictOk() (*bool, bool) {
	if o == nil || IsNil(o.IpRestrict) {
		return nil, false
	}
	return o.IpRestrict, true
}

// HasIpRestrict returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasIpRestrict() bool {
	if o != nil && !IsNil(o.IpRestrict) {
		return true
	}

	return false
}

// SetIpRestrict gets a reference to the given bool and assigns it to the IpRestrict field.
func (o *GetAccountApiRestrictionsV1Resp) SetIpRestrict(v bool) {
	o.IpRestrict = &v
}

// GetPermitsUniversalTransfer returns the PermitsUniversalTransfer field value if set, zero value otherwise.
func (o *GetAccountApiRestrictionsV1Resp) GetPermitsUniversalTransfer() bool {
	if o == nil || IsNil(o.PermitsUniversalTransfer) {
		var ret bool
		return ret
	}
	return *o.PermitsUniversalTransfer
}

// GetPermitsUniversalTransferOk returns a tuple with the PermitsUniversalTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountApiRestrictionsV1Resp) GetPermitsUniversalTransferOk() (*bool, bool) {
	if o == nil || IsNil(o.PermitsUniversalTransfer) {
		return nil, false
	}
	return o.PermitsUniversalTransfer, true
}

// HasPermitsUniversalTransfer returns a boolean if a field has been set.
func (o *GetAccountApiRestrictionsV1Resp) HasPermitsUniversalTransfer() bool {
	if o != nil && !IsNil(o.PermitsUniversalTransfer) {
		return true
	}

	return false
}

// SetPermitsUniversalTransfer gets a reference to the given bool and assigns it to the PermitsUniversalTransfer field.
func (o *GetAccountApiRestrictionsV1Resp) SetPermitsUniversalTransfer(v bool) {
	o.PermitsUniversalTransfer = &v
}

func (o GetAccountApiRestrictionsV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAccountApiRestrictionsV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.EnableFixApiTrade) {
		toSerialize["enableFixApiTrade"] = o.EnableFixApiTrade
	}
	if !IsNil(o.EnableFixReadOnly) {
		toSerialize["enableFixReadOnly"] = o.EnableFixReadOnly
	}
	if !IsNil(o.EnableFutures) {
		toSerialize["enableFutures"] = o.EnableFutures
	}
	if !IsNil(o.EnableInternalTransfer) {
		toSerialize["enableInternalTransfer"] = o.EnableInternalTransfer
	}
	if !IsNil(o.EnableMargin) {
		toSerialize["enableMargin"] = o.EnableMargin
	}
	if !IsNil(o.EnablePortfolioMarginTrading) {
		toSerialize["enablePortfolioMarginTrading"] = o.EnablePortfolioMarginTrading
	}
	if !IsNil(o.EnableReading) {
		toSerialize["enableReading"] = o.EnableReading
	}
	if !IsNil(o.EnableSpotAndMarginTrading) {
		toSerialize["enableSpotAndMarginTrading"] = o.EnableSpotAndMarginTrading
	}
	if !IsNil(o.EnableVanillaOptions) {
		toSerialize["enableVanillaOptions"] = o.EnableVanillaOptions
	}
	if !IsNil(o.EnableWithdrawals) {
		toSerialize["enableWithdrawals"] = o.EnableWithdrawals
	}
	if !IsNil(o.IpRestrict) {
		toSerialize["ipRestrict"] = o.IpRestrict
	}
	if !IsNil(o.PermitsUniversalTransfer) {
		toSerialize["permitsUniversalTransfer"] = o.PermitsUniversalTransfer
	}
	return toSerialize, nil
}

type NullableGetAccountApiRestrictionsV1Resp struct {
	value *GetAccountApiRestrictionsV1Resp
	isSet bool
}

func (v NullableGetAccountApiRestrictionsV1Resp) Get() *GetAccountApiRestrictionsV1Resp {
	return v.value
}

func (v *NullableGetAccountApiRestrictionsV1Resp) Set(val *GetAccountApiRestrictionsV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountApiRestrictionsV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountApiRestrictionsV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountApiRestrictionsV1Resp(val *GetAccountApiRestrictionsV1Resp) *NullableGetAccountApiRestrictionsV1Resp {
	return &NullableGetAccountApiRestrictionsV1Resp{value: val, isSet: true}
}

func (v NullableGetAccountApiRestrictionsV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountApiRestrictionsV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


