/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateBrokerSubAccountBnbBurnMarginInterestV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBrokerSubAccountBnbBurnMarginInterestV1Resp{}

// CreateBrokerSubAccountBnbBurnMarginInterestV1Resp struct for CreateBrokerSubAccountBnbBurnMarginInterestV1Resp
type CreateBrokerSubAccountBnbBurnMarginInterestV1Resp struct {
	InterestBNBBurn *bool `json:"interestBNBBurn,omitempty"`
	SubAccountId *int64 `json:"subAccountId,omitempty"`
}

// NewCreateBrokerSubAccountBnbBurnMarginInterestV1Resp instantiates a new CreateBrokerSubAccountBnbBurnMarginInterestV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBrokerSubAccountBnbBurnMarginInterestV1Resp() *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp {
	this := CreateBrokerSubAccountBnbBurnMarginInterestV1Resp{}
	return &this
}

// NewCreateBrokerSubAccountBnbBurnMarginInterestV1RespWithDefaults instantiates a new CreateBrokerSubAccountBnbBurnMarginInterestV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBrokerSubAccountBnbBurnMarginInterestV1RespWithDefaults() *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp {
	this := CreateBrokerSubAccountBnbBurnMarginInterestV1Resp{}
	return &this
}

// GetInterestBNBBurn returns the InterestBNBBurn field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp) GetInterestBNBBurn() bool {
	if o == nil || IsNil(o.InterestBNBBurn) {
		var ret bool
		return ret
	}
	return *o.InterestBNBBurn
}

// GetInterestBNBBurnOk returns a tuple with the InterestBNBBurn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp) GetInterestBNBBurnOk() (*bool, bool) {
	if o == nil || IsNil(o.InterestBNBBurn) {
		return nil, false
	}
	return o.InterestBNBBurn, true
}

// HasInterestBNBBurn returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp) HasInterestBNBBurn() bool {
	if o != nil && !IsNil(o.InterestBNBBurn) {
		return true
	}

	return false
}

// SetInterestBNBBurn gets a reference to the given bool and assigns it to the InterestBNBBurn field.
func (o *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp) SetInterestBNBBurn(v bool) {
	o.InterestBNBBurn = &v
}

// GetSubAccountId returns the SubAccountId field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp) GetSubAccountId() int64 {
	if o == nil || IsNil(o.SubAccountId) {
		var ret int64
		return ret
	}
	return *o.SubAccountId
}

// GetSubAccountIdOk returns a tuple with the SubAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp) GetSubAccountIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SubAccountId) {
		return nil, false
	}
	return o.SubAccountId, true
}

// HasSubAccountId returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp) HasSubAccountId() bool {
	if o != nil && !IsNil(o.SubAccountId) {
		return true
	}

	return false
}

// SetSubAccountId gets a reference to the given int64 and assigns it to the SubAccountId field.
func (o *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp) SetSubAccountId(v int64) {
	o.SubAccountId = &v
}

func (o CreateBrokerSubAccountBnbBurnMarginInterestV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBrokerSubAccountBnbBurnMarginInterestV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InterestBNBBurn) {
		toSerialize["interestBNBBurn"] = o.InterestBNBBurn
	}
	if !IsNil(o.SubAccountId) {
		toSerialize["subAccountId"] = o.SubAccountId
	}
	return toSerialize, nil
}

type NullableCreateBrokerSubAccountBnbBurnMarginInterestV1Resp struct {
	value *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp
	isSet bool
}

func (v NullableCreateBrokerSubAccountBnbBurnMarginInterestV1Resp) Get() *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp {
	return v.value
}

func (v *NullableCreateBrokerSubAccountBnbBurnMarginInterestV1Resp) Set(val *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBrokerSubAccountBnbBurnMarginInterestV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBrokerSubAccountBnbBurnMarginInterestV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBrokerSubAccountBnbBurnMarginInterestV1Resp(val *CreateBrokerSubAccountBnbBurnMarginInterestV1Resp) *NullableCreateBrokerSubAccountBnbBurnMarginInterestV1Resp {
	return &NullableCreateBrokerSubAccountBnbBurnMarginInterestV1Resp{value: val, isSet: true}
}

func (v NullableCreateBrokerSubAccountBnbBurnMarginInterestV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBrokerSubAccountBnbBurnMarginInterestV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


