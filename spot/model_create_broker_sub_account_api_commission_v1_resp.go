/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateBrokerSubAccountApiCommissionV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBrokerSubAccountApiCommissionV1Resp{}

// CreateBrokerSubAccountApiCommissionV1Resp struct for CreateBrokerSubAccountApiCommissionV1Resp
type CreateBrokerSubAccountApiCommissionV1Resp struct {
	MakerCommission *float32 `json:"makerCommission,omitempty"`
	MarginMakerCommission *float32 `json:"marginMakerCommission,omitempty"`
	MarginTakerCommission *float32 `json:"marginTakerCommission,omitempty"`
	SubAccountId *string `json:"subAccountId,omitempty"`
	TakerCommission *float32 `json:"takerCommission,omitempty"`
}

// NewCreateBrokerSubAccountApiCommissionV1Resp instantiates a new CreateBrokerSubAccountApiCommissionV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBrokerSubAccountApiCommissionV1Resp() *CreateBrokerSubAccountApiCommissionV1Resp {
	this := CreateBrokerSubAccountApiCommissionV1Resp{}
	return &this
}

// NewCreateBrokerSubAccountApiCommissionV1RespWithDefaults instantiates a new CreateBrokerSubAccountApiCommissionV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBrokerSubAccountApiCommissionV1RespWithDefaults() *CreateBrokerSubAccountApiCommissionV1Resp {
	this := CreateBrokerSubAccountApiCommissionV1Resp{}
	return &this
}

// GetMakerCommission returns the MakerCommission field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) GetMakerCommission() float32 {
	if o == nil || IsNil(o.MakerCommission) {
		var ret float32
		return ret
	}
	return *o.MakerCommission
}

// GetMakerCommissionOk returns a tuple with the MakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) GetMakerCommissionOk() (*float32, bool) {
	if o == nil || IsNil(o.MakerCommission) {
		return nil, false
	}
	return o.MakerCommission, true
}

// HasMakerCommission returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) HasMakerCommission() bool {
	if o != nil && !IsNil(o.MakerCommission) {
		return true
	}

	return false
}

// SetMakerCommission gets a reference to the given float32 and assigns it to the MakerCommission field.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) SetMakerCommission(v float32) {
	o.MakerCommission = &v
}

// GetMarginMakerCommission returns the MarginMakerCommission field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) GetMarginMakerCommission() float32 {
	if o == nil || IsNil(o.MarginMakerCommission) {
		var ret float32
		return ret
	}
	return *o.MarginMakerCommission
}

// GetMarginMakerCommissionOk returns a tuple with the MarginMakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) GetMarginMakerCommissionOk() (*float32, bool) {
	if o == nil || IsNil(o.MarginMakerCommission) {
		return nil, false
	}
	return o.MarginMakerCommission, true
}

// HasMarginMakerCommission returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) HasMarginMakerCommission() bool {
	if o != nil && !IsNil(o.MarginMakerCommission) {
		return true
	}

	return false
}

// SetMarginMakerCommission gets a reference to the given float32 and assigns it to the MarginMakerCommission field.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) SetMarginMakerCommission(v float32) {
	o.MarginMakerCommission = &v
}

// GetMarginTakerCommission returns the MarginTakerCommission field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) GetMarginTakerCommission() float32 {
	if o == nil || IsNil(o.MarginTakerCommission) {
		var ret float32
		return ret
	}
	return *o.MarginTakerCommission
}

// GetMarginTakerCommissionOk returns a tuple with the MarginTakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) GetMarginTakerCommissionOk() (*float32, bool) {
	if o == nil || IsNil(o.MarginTakerCommission) {
		return nil, false
	}
	return o.MarginTakerCommission, true
}

// HasMarginTakerCommission returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) HasMarginTakerCommission() bool {
	if o != nil && !IsNil(o.MarginTakerCommission) {
		return true
	}

	return false
}

// SetMarginTakerCommission gets a reference to the given float32 and assigns it to the MarginTakerCommission field.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) SetMarginTakerCommission(v float32) {
	o.MarginTakerCommission = &v
}

// GetSubAccountId returns the SubAccountId field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) GetSubAccountId() string {
	if o == nil || IsNil(o.SubAccountId) {
		var ret string
		return ret
	}
	return *o.SubAccountId
}

// GetSubAccountIdOk returns a tuple with the SubAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) GetSubAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubAccountId) {
		return nil, false
	}
	return o.SubAccountId, true
}

// HasSubAccountId returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) HasSubAccountId() bool {
	if o != nil && !IsNil(o.SubAccountId) {
		return true
	}

	return false
}

// SetSubAccountId gets a reference to the given string and assigns it to the SubAccountId field.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) SetSubAccountId(v string) {
	o.SubAccountId = &v
}

// GetTakerCommission returns the TakerCommission field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) GetTakerCommission() float32 {
	if o == nil || IsNil(o.TakerCommission) {
		var ret float32
		return ret
	}
	return *o.TakerCommission
}

// GetTakerCommissionOk returns a tuple with the TakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) GetTakerCommissionOk() (*float32, bool) {
	if o == nil || IsNil(o.TakerCommission) {
		return nil, false
	}
	return o.TakerCommission, true
}

// HasTakerCommission returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) HasTakerCommission() bool {
	if o != nil && !IsNil(o.TakerCommission) {
		return true
	}

	return false
}

// SetTakerCommission gets a reference to the given float32 and assigns it to the TakerCommission field.
func (o *CreateBrokerSubAccountApiCommissionV1Resp) SetTakerCommission(v float32) {
	o.TakerCommission = &v
}

func (o CreateBrokerSubAccountApiCommissionV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBrokerSubAccountApiCommissionV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MakerCommission) {
		toSerialize["makerCommission"] = o.MakerCommission
	}
	if !IsNil(o.MarginMakerCommission) {
		toSerialize["marginMakerCommission"] = o.MarginMakerCommission
	}
	if !IsNil(o.MarginTakerCommission) {
		toSerialize["marginTakerCommission"] = o.MarginTakerCommission
	}
	if !IsNil(o.SubAccountId) {
		toSerialize["subAccountId"] = o.SubAccountId
	}
	if !IsNil(o.TakerCommission) {
		toSerialize["takerCommission"] = o.TakerCommission
	}
	return toSerialize, nil
}

type NullableCreateBrokerSubAccountApiCommissionV1Resp struct {
	value *CreateBrokerSubAccountApiCommissionV1Resp
	isSet bool
}

func (v NullableCreateBrokerSubAccountApiCommissionV1Resp) Get() *CreateBrokerSubAccountApiCommissionV1Resp {
	return v.value
}

func (v *NullableCreateBrokerSubAccountApiCommissionV1Resp) Set(val *CreateBrokerSubAccountApiCommissionV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBrokerSubAccountApiCommissionV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBrokerSubAccountApiCommissionV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBrokerSubAccountApiCommissionV1Resp(val *CreateBrokerSubAccountApiCommissionV1Resp) *NullableCreateBrokerSubAccountApiCommissionV1Resp {
	return &NullableCreateBrokerSubAccountApiCommissionV1Resp{value: val, isSet: true}
}

func (v NullableCreateBrokerSubAccountApiCommissionV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBrokerSubAccountApiCommissionV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


