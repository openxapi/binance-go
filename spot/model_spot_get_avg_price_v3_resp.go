/*
Binance Spot API

OpenAPI specification for Binance cryptocurrency exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the SpotGetAvgPriceV3Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotGetAvgPriceV3Resp{}

// SpotGetAvgPriceV3Resp struct for SpotGetAvgPriceV3Resp
type SpotGetAvgPriceV3Resp struct {
	CloseTime *int64 `json:"closeTime,omitempty"`
	Mins *int32 `json:"mins,omitempty"`
	Price *string `json:"price,omitempty"`
}

// NewSpotGetAvgPriceV3Resp instantiates a new SpotGetAvgPriceV3Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotGetAvgPriceV3Resp() *SpotGetAvgPriceV3Resp {
	this := SpotGetAvgPriceV3Resp{}
	return &this
}

// NewSpotGetAvgPriceV3RespWithDefaults instantiates a new SpotGetAvgPriceV3Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotGetAvgPriceV3RespWithDefaults() *SpotGetAvgPriceV3Resp {
	this := SpotGetAvgPriceV3Resp{}
	return &this
}

// GetCloseTime returns the CloseTime field value if set, zero value otherwise.
func (o *SpotGetAvgPriceV3Resp) GetCloseTime() int64 {
	if o == nil || IsNil(o.CloseTime) {
		var ret int64
		return ret
	}
	return *o.CloseTime
}

// GetCloseTimeOk returns a tuple with the CloseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetAvgPriceV3Resp) GetCloseTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CloseTime) {
		return nil, false
	}
	return o.CloseTime, true
}

// HasCloseTime returns a boolean if a field has been set.
func (o *SpotGetAvgPriceV3Resp) HasCloseTime() bool {
	if o != nil && !IsNil(o.CloseTime) {
		return true
	}

	return false
}

// SetCloseTime gets a reference to the given int64 and assigns it to the CloseTime field.
func (o *SpotGetAvgPriceV3Resp) SetCloseTime(v int64) {
	o.CloseTime = &v
}

// GetMins returns the Mins field value if set, zero value otherwise.
func (o *SpotGetAvgPriceV3Resp) GetMins() int32 {
	if o == nil || IsNil(o.Mins) {
		var ret int32
		return ret
	}
	return *o.Mins
}

// GetMinsOk returns a tuple with the Mins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetAvgPriceV3Resp) GetMinsOk() (*int32, bool) {
	if o == nil || IsNil(o.Mins) {
		return nil, false
	}
	return o.Mins, true
}

// HasMins returns a boolean if a field has been set.
func (o *SpotGetAvgPriceV3Resp) HasMins() bool {
	if o != nil && !IsNil(o.Mins) {
		return true
	}

	return false
}

// SetMins gets a reference to the given int32 and assigns it to the Mins field.
func (o *SpotGetAvgPriceV3Resp) SetMins(v int32) {
	o.Mins = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *SpotGetAvgPriceV3Resp) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetAvgPriceV3Resp) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *SpotGetAvgPriceV3Resp) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *SpotGetAvgPriceV3Resp) SetPrice(v string) {
	o.Price = &v
}

func (o SpotGetAvgPriceV3Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotGetAvgPriceV3Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloseTime) {
		toSerialize["closeTime"] = o.CloseTime
	}
	if !IsNil(o.Mins) {
		toSerialize["mins"] = o.Mins
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return toSerialize, nil
}

type NullableSpotGetAvgPriceV3Resp struct {
	value *SpotGetAvgPriceV3Resp
	isSet bool
}

func (v NullableSpotGetAvgPriceV3Resp) Get() *SpotGetAvgPriceV3Resp {
	return v.value
}

func (v *NullableSpotGetAvgPriceV3Resp) Set(val *SpotGetAvgPriceV3Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotGetAvgPriceV3Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotGetAvgPriceV3Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotGetAvgPriceV3Resp(val *SpotGetAvgPriceV3Resp) *NullableSpotGetAvgPriceV3Resp {
	return &NullableSpotGetAvgPriceV3Resp{value: val, isSet: true}
}

func (v NullableSpotGetAvgPriceV3Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotGetAvgPriceV3Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


