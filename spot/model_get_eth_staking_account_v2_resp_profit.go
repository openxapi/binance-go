/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetEthStakingAccountV2RespProfit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEthStakingAccountV2RespProfit{}

// GetEthStakingAccountV2RespProfit struct for GetEthStakingAccountV2RespProfit
type GetEthStakingAccountV2RespProfit struct {
	AmountFromBETH *string `json:"amountFromBETH,omitempty"`
	AmountFromWBETH *string `json:"amountFromWBETH,omitempty"`
}

// NewGetEthStakingAccountV2RespProfit instantiates a new GetEthStakingAccountV2RespProfit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEthStakingAccountV2RespProfit() *GetEthStakingAccountV2RespProfit {
	this := GetEthStakingAccountV2RespProfit{}
	return &this
}

// NewGetEthStakingAccountV2RespProfitWithDefaults instantiates a new GetEthStakingAccountV2RespProfit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEthStakingAccountV2RespProfitWithDefaults() *GetEthStakingAccountV2RespProfit {
	this := GetEthStakingAccountV2RespProfit{}
	return &this
}

// GetAmountFromBETH returns the AmountFromBETH field value if set, zero value otherwise.
func (o *GetEthStakingAccountV2RespProfit) GetAmountFromBETH() string {
	if o == nil || IsNil(o.AmountFromBETH) {
		var ret string
		return ret
	}
	return *o.AmountFromBETH
}

// GetAmountFromBETHOk returns a tuple with the AmountFromBETH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingAccountV2RespProfit) GetAmountFromBETHOk() (*string, bool) {
	if o == nil || IsNil(o.AmountFromBETH) {
		return nil, false
	}
	return o.AmountFromBETH, true
}

// HasAmountFromBETH returns a boolean if a field has been set.
func (o *GetEthStakingAccountV2RespProfit) HasAmountFromBETH() bool {
	if o != nil && !IsNil(o.AmountFromBETH) {
		return true
	}

	return false
}

// SetAmountFromBETH gets a reference to the given string and assigns it to the AmountFromBETH field.
func (o *GetEthStakingAccountV2RespProfit) SetAmountFromBETH(v string) {
	o.AmountFromBETH = &v
}

// GetAmountFromWBETH returns the AmountFromWBETH field value if set, zero value otherwise.
func (o *GetEthStakingAccountV2RespProfit) GetAmountFromWBETH() string {
	if o == nil || IsNil(o.AmountFromWBETH) {
		var ret string
		return ret
	}
	return *o.AmountFromWBETH
}

// GetAmountFromWBETHOk returns a tuple with the AmountFromWBETH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingAccountV2RespProfit) GetAmountFromWBETHOk() (*string, bool) {
	if o == nil || IsNil(o.AmountFromWBETH) {
		return nil, false
	}
	return o.AmountFromWBETH, true
}

// HasAmountFromWBETH returns a boolean if a field has been set.
func (o *GetEthStakingAccountV2RespProfit) HasAmountFromWBETH() bool {
	if o != nil && !IsNil(o.AmountFromWBETH) {
		return true
	}

	return false
}

// SetAmountFromWBETH gets a reference to the given string and assigns it to the AmountFromWBETH field.
func (o *GetEthStakingAccountV2RespProfit) SetAmountFromWBETH(v string) {
	o.AmountFromWBETH = &v
}

func (o GetEthStakingAccountV2RespProfit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEthStakingAccountV2RespProfit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AmountFromBETH) {
		toSerialize["amountFromBETH"] = o.AmountFromBETH
	}
	if !IsNil(o.AmountFromWBETH) {
		toSerialize["amountFromWBETH"] = o.AmountFromWBETH
	}
	return toSerialize, nil
}

type NullableGetEthStakingAccountV2RespProfit struct {
	value *GetEthStakingAccountV2RespProfit
	isSet bool
}

func (v NullableGetEthStakingAccountV2RespProfit) Get() *GetEthStakingAccountV2RespProfit {
	return v.value
}

func (v *NullableGetEthStakingAccountV2RespProfit) Set(val *GetEthStakingAccountV2RespProfit) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEthStakingAccountV2RespProfit) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEthStakingAccountV2RespProfit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEthStakingAccountV2RespProfit(val *GetEthStakingAccountV2RespProfit) *NullableGetEthStakingAccountV2RespProfit {
	return &NullableGetEthStakingAccountV2RespProfit{value: val, isSet: true}
}

func (v NullableGetEthStakingAccountV2RespProfit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEthStakingAccountV2RespProfit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


