/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateSimpleEarnFlexibleRedeemV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSimpleEarnFlexibleRedeemV1Resp{}

// CreateSimpleEarnFlexibleRedeemV1Resp struct for CreateSimpleEarnFlexibleRedeemV1Resp
type CreateSimpleEarnFlexibleRedeemV1Resp struct {
	RedeemId *int64 `json:"redeemId,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewCreateSimpleEarnFlexibleRedeemV1Resp instantiates a new CreateSimpleEarnFlexibleRedeemV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSimpleEarnFlexibleRedeemV1Resp() *CreateSimpleEarnFlexibleRedeemV1Resp {
	this := CreateSimpleEarnFlexibleRedeemV1Resp{}
	return &this
}

// NewCreateSimpleEarnFlexibleRedeemV1RespWithDefaults instantiates a new CreateSimpleEarnFlexibleRedeemV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSimpleEarnFlexibleRedeemV1RespWithDefaults() *CreateSimpleEarnFlexibleRedeemV1Resp {
	this := CreateSimpleEarnFlexibleRedeemV1Resp{}
	return &this
}

// GetRedeemId returns the RedeemId field value if set, zero value otherwise.
func (o *CreateSimpleEarnFlexibleRedeemV1Resp) GetRedeemId() int64 {
	if o == nil || IsNil(o.RedeemId) {
		var ret int64
		return ret
	}
	return *o.RedeemId
}

// GetRedeemIdOk returns a tuple with the RedeemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSimpleEarnFlexibleRedeemV1Resp) GetRedeemIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RedeemId) {
		return nil, false
	}
	return o.RedeemId, true
}

// HasRedeemId returns a boolean if a field has been set.
func (o *CreateSimpleEarnFlexibleRedeemV1Resp) HasRedeemId() bool {
	if o != nil && !IsNil(o.RedeemId) {
		return true
	}

	return false
}

// SetRedeemId gets a reference to the given int64 and assigns it to the RedeemId field.
func (o *CreateSimpleEarnFlexibleRedeemV1Resp) SetRedeemId(v int64) {
	o.RedeemId = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *CreateSimpleEarnFlexibleRedeemV1Resp) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSimpleEarnFlexibleRedeemV1Resp) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *CreateSimpleEarnFlexibleRedeemV1Resp) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *CreateSimpleEarnFlexibleRedeemV1Resp) SetSuccess(v bool) {
	o.Success = &v
}

func (o CreateSimpleEarnFlexibleRedeemV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSimpleEarnFlexibleRedeemV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RedeemId) {
		toSerialize["redeemId"] = o.RedeemId
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableCreateSimpleEarnFlexibleRedeemV1Resp struct {
	value *CreateSimpleEarnFlexibleRedeemV1Resp
	isSet bool
}

func (v NullableCreateSimpleEarnFlexibleRedeemV1Resp) Get() *CreateSimpleEarnFlexibleRedeemV1Resp {
	return v.value
}

func (v *NullableCreateSimpleEarnFlexibleRedeemV1Resp) Set(val *CreateSimpleEarnFlexibleRedeemV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSimpleEarnFlexibleRedeemV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSimpleEarnFlexibleRedeemV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSimpleEarnFlexibleRedeemV1Resp(val *CreateSimpleEarnFlexibleRedeemV1Resp) *NullableCreateSimpleEarnFlexibleRedeemV1Resp {
	return &NullableCreateSimpleEarnFlexibleRedeemV1Resp{value: val, isSet: true}
}

func (v NullableCreateSimpleEarnFlexibleRedeemV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSimpleEarnFlexibleRedeemV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


