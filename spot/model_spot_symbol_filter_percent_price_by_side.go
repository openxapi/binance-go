/*
Binance Spot API

OpenAPI specification for Binance cryptocurrency exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the SpotSymbolFilterPercentPriceBySide type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotSymbolFilterPercentPriceBySide{}

// SpotSymbolFilterPercentPriceBySide struct for SpotSymbolFilterPercentPriceBySide
type SpotSymbolFilterPercentPriceBySide struct {
	AskMultiplierDown *string `json:"askMultiplierDown,omitempty"`
	AskMultiplierUp *string `json:"askMultiplierUp,omitempty"`
	AvgPriceMins *int32 `json:"avgPriceMins,omitempty"`
	BidMultiplierDown *string `json:"bidMultiplierDown,omitempty"`
	BidMultiplierUp *string `json:"bidMultiplierUp,omitempty"`
	FilterType *string `json:"filterType,omitempty"`
}

// NewSpotSymbolFilterPercentPriceBySide instantiates a new SpotSymbolFilterPercentPriceBySide object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotSymbolFilterPercentPriceBySide() *SpotSymbolFilterPercentPriceBySide {
	this := SpotSymbolFilterPercentPriceBySide{}
	return &this
}

// NewSpotSymbolFilterPercentPriceBySideWithDefaults instantiates a new SpotSymbolFilterPercentPriceBySide object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotSymbolFilterPercentPriceBySideWithDefaults() *SpotSymbolFilterPercentPriceBySide {
	this := SpotSymbolFilterPercentPriceBySide{}
	return &this
}

// GetAskMultiplierDown returns the AskMultiplierDown field value if set, zero value otherwise.
func (o *SpotSymbolFilterPercentPriceBySide) GetAskMultiplierDown() string {
	if o == nil || IsNil(o.AskMultiplierDown) {
		var ret string
		return ret
	}
	return *o.AskMultiplierDown
}

// GetAskMultiplierDownOk returns a tuple with the AskMultiplierDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterPercentPriceBySide) GetAskMultiplierDownOk() (*string, bool) {
	if o == nil || IsNil(o.AskMultiplierDown) {
		return nil, false
	}
	return o.AskMultiplierDown, true
}

// HasAskMultiplierDown returns a boolean if a field has been set.
func (o *SpotSymbolFilterPercentPriceBySide) HasAskMultiplierDown() bool {
	if o != nil && !IsNil(o.AskMultiplierDown) {
		return true
	}

	return false
}

// SetAskMultiplierDown gets a reference to the given string and assigns it to the AskMultiplierDown field.
func (o *SpotSymbolFilterPercentPriceBySide) SetAskMultiplierDown(v string) {
	o.AskMultiplierDown = &v
}

// GetAskMultiplierUp returns the AskMultiplierUp field value if set, zero value otherwise.
func (o *SpotSymbolFilterPercentPriceBySide) GetAskMultiplierUp() string {
	if o == nil || IsNil(o.AskMultiplierUp) {
		var ret string
		return ret
	}
	return *o.AskMultiplierUp
}

// GetAskMultiplierUpOk returns a tuple with the AskMultiplierUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterPercentPriceBySide) GetAskMultiplierUpOk() (*string, bool) {
	if o == nil || IsNil(o.AskMultiplierUp) {
		return nil, false
	}
	return o.AskMultiplierUp, true
}

// HasAskMultiplierUp returns a boolean if a field has been set.
func (o *SpotSymbolFilterPercentPriceBySide) HasAskMultiplierUp() bool {
	if o != nil && !IsNil(o.AskMultiplierUp) {
		return true
	}

	return false
}

// SetAskMultiplierUp gets a reference to the given string and assigns it to the AskMultiplierUp field.
func (o *SpotSymbolFilterPercentPriceBySide) SetAskMultiplierUp(v string) {
	o.AskMultiplierUp = &v
}

// GetAvgPriceMins returns the AvgPriceMins field value if set, zero value otherwise.
func (o *SpotSymbolFilterPercentPriceBySide) GetAvgPriceMins() int32 {
	if o == nil || IsNil(o.AvgPriceMins) {
		var ret int32
		return ret
	}
	return *o.AvgPriceMins
}

// GetAvgPriceMinsOk returns a tuple with the AvgPriceMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterPercentPriceBySide) GetAvgPriceMinsOk() (*int32, bool) {
	if o == nil || IsNil(o.AvgPriceMins) {
		return nil, false
	}
	return o.AvgPriceMins, true
}

// HasAvgPriceMins returns a boolean if a field has been set.
func (o *SpotSymbolFilterPercentPriceBySide) HasAvgPriceMins() bool {
	if o != nil && !IsNil(o.AvgPriceMins) {
		return true
	}

	return false
}

// SetAvgPriceMins gets a reference to the given int32 and assigns it to the AvgPriceMins field.
func (o *SpotSymbolFilterPercentPriceBySide) SetAvgPriceMins(v int32) {
	o.AvgPriceMins = &v
}

// GetBidMultiplierDown returns the BidMultiplierDown field value if set, zero value otherwise.
func (o *SpotSymbolFilterPercentPriceBySide) GetBidMultiplierDown() string {
	if o == nil || IsNil(o.BidMultiplierDown) {
		var ret string
		return ret
	}
	return *o.BidMultiplierDown
}

// GetBidMultiplierDownOk returns a tuple with the BidMultiplierDown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterPercentPriceBySide) GetBidMultiplierDownOk() (*string, bool) {
	if o == nil || IsNil(o.BidMultiplierDown) {
		return nil, false
	}
	return o.BidMultiplierDown, true
}

// HasBidMultiplierDown returns a boolean if a field has been set.
func (o *SpotSymbolFilterPercentPriceBySide) HasBidMultiplierDown() bool {
	if o != nil && !IsNil(o.BidMultiplierDown) {
		return true
	}

	return false
}

// SetBidMultiplierDown gets a reference to the given string and assigns it to the BidMultiplierDown field.
func (o *SpotSymbolFilterPercentPriceBySide) SetBidMultiplierDown(v string) {
	o.BidMultiplierDown = &v
}

// GetBidMultiplierUp returns the BidMultiplierUp field value if set, zero value otherwise.
func (o *SpotSymbolFilterPercentPriceBySide) GetBidMultiplierUp() string {
	if o == nil || IsNil(o.BidMultiplierUp) {
		var ret string
		return ret
	}
	return *o.BidMultiplierUp
}

// GetBidMultiplierUpOk returns a tuple with the BidMultiplierUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterPercentPriceBySide) GetBidMultiplierUpOk() (*string, bool) {
	if o == nil || IsNil(o.BidMultiplierUp) {
		return nil, false
	}
	return o.BidMultiplierUp, true
}

// HasBidMultiplierUp returns a boolean if a field has been set.
func (o *SpotSymbolFilterPercentPriceBySide) HasBidMultiplierUp() bool {
	if o != nil && !IsNil(o.BidMultiplierUp) {
		return true
	}

	return false
}

// SetBidMultiplierUp gets a reference to the given string and assigns it to the BidMultiplierUp field.
func (o *SpotSymbolFilterPercentPriceBySide) SetBidMultiplierUp(v string) {
	o.BidMultiplierUp = &v
}

// GetFilterType returns the FilterType field value if set, zero value otherwise.
func (o *SpotSymbolFilterPercentPriceBySide) GetFilterType() string {
	if o == nil || IsNil(o.FilterType) {
		var ret string
		return ret
	}
	return *o.FilterType
}

// GetFilterTypeOk returns a tuple with the FilterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterPercentPriceBySide) GetFilterTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FilterType) {
		return nil, false
	}
	return o.FilterType, true
}

// HasFilterType returns a boolean if a field has been set.
func (o *SpotSymbolFilterPercentPriceBySide) HasFilterType() bool {
	if o != nil && !IsNil(o.FilterType) {
		return true
	}

	return false
}

// SetFilterType gets a reference to the given string and assigns it to the FilterType field.
func (o *SpotSymbolFilterPercentPriceBySide) SetFilterType(v string) {
	o.FilterType = &v
}

func (o SpotSymbolFilterPercentPriceBySide) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotSymbolFilterPercentPriceBySide) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AskMultiplierDown) {
		toSerialize["askMultiplierDown"] = o.AskMultiplierDown
	}
	if !IsNil(o.AskMultiplierUp) {
		toSerialize["askMultiplierUp"] = o.AskMultiplierUp
	}
	if !IsNil(o.AvgPriceMins) {
		toSerialize["avgPriceMins"] = o.AvgPriceMins
	}
	if !IsNil(o.BidMultiplierDown) {
		toSerialize["bidMultiplierDown"] = o.BidMultiplierDown
	}
	if !IsNil(o.BidMultiplierUp) {
		toSerialize["bidMultiplierUp"] = o.BidMultiplierUp
	}
	if !IsNil(o.FilterType) {
		toSerialize["filterType"] = o.FilterType
	}
	return toSerialize, nil
}

type NullableSpotSymbolFilterPercentPriceBySide struct {
	value *SpotSymbolFilterPercentPriceBySide
	isSet bool
}

func (v NullableSpotSymbolFilterPercentPriceBySide) Get() *SpotSymbolFilterPercentPriceBySide {
	return v.value
}

func (v *NullableSpotSymbolFilterPercentPriceBySide) Set(val *SpotSymbolFilterPercentPriceBySide) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotSymbolFilterPercentPriceBySide) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotSymbolFilterPercentPriceBySide) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotSymbolFilterPercentPriceBySide(val *SpotSymbolFilterPercentPriceBySide) *NullableSpotSymbolFilterPercentPriceBySide {
	return &NullableSpotSymbolFilterPercentPriceBySide{value: val, isSet: true}
}

func (v NullableSpotSymbolFilterPercentPriceBySide) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotSymbolFilterPercentPriceBySide) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


