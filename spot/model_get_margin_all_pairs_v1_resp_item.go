/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetMarginAllPairsV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMarginAllPairsV1RespItem{}

// GetMarginAllPairsV1RespItem struct for GetMarginAllPairsV1RespItem
type GetMarginAllPairsV1RespItem struct {
	Base *string `json:"base,omitempty"`
	Id *int32 `json:"id,omitempty"`
	IsBuyAllowed *bool `json:"isBuyAllowed,omitempty"`
	IsMarginTrade *bool `json:"isMarginTrade,omitempty"`
	IsSellAllowed *bool `json:"isSellAllowed,omitempty"`
	Quote *string `json:"quote,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
}

// NewGetMarginAllPairsV1RespItem instantiates a new GetMarginAllPairsV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMarginAllPairsV1RespItem() *GetMarginAllPairsV1RespItem {
	this := GetMarginAllPairsV1RespItem{}
	return &this
}

// NewGetMarginAllPairsV1RespItemWithDefaults instantiates a new GetMarginAllPairsV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMarginAllPairsV1RespItemWithDefaults() *GetMarginAllPairsV1RespItem {
	this := GetMarginAllPairsV1RespItem{}
	return &this
}

// GetBase returns the Base field value if set, zero value otherwise.
func (o *GetMarginAllPairsV1RespItem) GetBase() string {
	if o == nil || IsNil(o.Base) {
		var ret string
		return ret
	}
	return *o.Base
}

// GetBaseOk returns a tuple with the Base field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMarginAllPairsV1RespItem) GetBaseOk() (*string, bool) {
	if o == nil || IsNil(o.Base) {
		return nil, false
	}
	return o.Base, true
}

// HasBase returns a boolean if a field has been set.
func (o *GetMarginAllPairsV1RespItem) HasBase() bool {
	if o != nil && !IsNil(o.Base) {
		return true
	}

	return false
}

// SetBase gets a reference to the given string and assigns it to the Base field.
func (o *GetMarginAllPairsV1RespItem) SetBase(v string) {
	o.Base = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetMarginAllPairsV1RespItem) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMarginAllPairsV1RespItem) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetMarginAllPairsV1RespItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *GetMarginAllPairsV1RespItem) SetId(v int32) {
	o.Id = &v
}

// GetIsBuyAllowed returns the IsBuyAllowed field value if set, zero value otherwise.
func (o *GetMarginAllPairsV1RespItem) GetIsBuyAllowed() bool {
	if o == nil || IsNil(o.IsBuyAllowed) {
		var ret bool
		return ret
	}
	return *o.IsBuyAllowed
}

// GetIsBuyAllowedOk returns a tuple with the IsBuyAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMarginAllPairsV1RespItem) GetIsBuyAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBuyAllowed) {
		return nil, false
	}
	return o.IsBuyAllowed, true
}

// HasIsBuyAllowed returns a boolean if a field has been set.
func (o *GetMarginAllPairsV1RespItem) HasIsBuyAllowed() bool {
	if o != nil && !IsNil(o.IsBuyAllowed) {
		return true
	}

	return false
}

// SetIsBuyAllowed gets a reference to the given bool and assigns it to the IsBuyAllowed field.
func (o *GetMarginAllPairsV1RespItem) SetIsBuyAllowed(v bool) {
	o.IsBuyAllowed = &v
}

// GetIsMarginTrade returns the IsMarginTrade field value if set, zero value otherwise.
func (o *GetMarginAllPairsV1RespItem) GetIsMarginTrade() bool {
	if o == nil || IsNil(o.IsMarginTrade) {
		var ret bool
		return ret
	}
	return *o.IsMarginTrade
}

// GetIsMarginTradeOk returns a tuple with the IsMarginTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMarginAllPairsV1RespItem) GetIsMarginTradeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMarginTrade) {
		return nil, false
	}
	return o.IsMarginTrade, true
}

// HasIsMarginTrade returns a boolean if a field has been set.
func (o *GetMarginAllPairsV1RespItem) HasIsMarginTrade() bool {
	if o != nil && !IsNil(o.IsMarginTrade) {
		return true
	}

	return false
}

// SetIsMarginTrade gets a reference to the given bool and assigns it to the IsMarginTrade field.
func (o *GetMarginAllPairsV1RespItem) SetIsMarginTrade(v bool) {
	o.IsMarginTrade = &v
}

// GetIsSellAllowed returns the IsSellAllowed field value if set, zero value otherwise.
func (o *GetMarginAllPairsV1RespItem) GetIsSellAllowed() bool {
	if o == nil || IsNil(o.IsSellAllowed) {
		var ret bool
		return ret
	}
	return *o.IsSellAllowed
}

// GetIsSellAllowedOk returns a tuple with the IsSellAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMarginAllPairsV1RespItem) GetIsSellAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSellAllowed) {
		return nil, false
	}
	return o.IsSellAllowed, true
}

// HasIsSellAllowed returns a boolean if a field has been set.
func (o *GetMarginAllPairsV1RespItem) HasIsSellAllowed() bool {
	if o != nil && !IsNil(o.IsSellAllowed) {
		return true
	}

	return false
}

// SetIsSellAllowed gets a reference to the given bool and assigns it to the IsSellAllowed field.
func (o *GetMarginAllPairsV1RespItem) SetIsSellAllowed(v bool) {
	o.IsSellAllowed = &v
}

// GetQuote returns the Quote field value if set, zero value otherwise.
func (o *GetMarginAllPairsV1RespItem) GetQuote() string {
	if o == nil || IsNil(o.Quote) {
		var ret string
		return ret
	}
	return *o.Quote
}

// GetQuoteOk returns a tuple with the Quote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMarginAllPairsV1RespItem) GetQuoteOk() (*string, bool) {
	if o == nil || IsNil(o.Quote) {
		return nil, false
	}
	return o.Quote, true
}

// HasQuote returns a boolean if a field has been set.
func (o *GetMarginAllPairsV1RespItem) HasQuote() bool {
	if o != nil && !IsNil(o.Quote) {
		return true
	}

	return false
}

// SetQuote gets a reference to the given string and assigns it to the Quote field.
func (o *GetMarginAllPairsV1RespItem) SetQuote(v string) {
	o.Quote = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *GetMarginAllPairsV1RespItem) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMarginAllPairsV1RespItem) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *GetMarginAllPairsV1RespItem) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *GetMarginAllPairsV1RespItem) SetSymbol(v string) {
	o.Symbol = &v
}

func (o GetMarginAllPairsV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMarginAllPairsV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Base) {
		toSerialize["base"] = o.Base
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsBuyAllowed) {
		toSerialize["isBuyAllowed"] = o.IsBuyAllowed
	}
	if !IsNil(o.IsMarginTrade) {
		toSerialize["isMarginTrade"] = o.IsMarginTrade
	}
	if !IsNil(o.IsSellAllowed) {
		toSerialize["isSellAllowed"] = o.IsSellAllowed
	}
	if !IsNil(o.Quote) {
		toSerialize["quote"] = o.Quote
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	return toSerialize, nil
}

type NullableGetMarginAllPairsV1RespItem struct {
	value *GetMarginAllPairsV1RespItem
	isSet bool
}

func (v NullableGetMarginAllPairsV1RespItem) Get() *GetMarginAllPairsV1RespItem {
	return v.value
}

func (v *NullableGetMarginAllPairsV1RespItem) Set(val *GetMarginAllPairsV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMarginAllPairsV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMarginAllPairsV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMarginAllPairsV1RespItem(val *GetMarginAllPairsV1RespItem) *NullableGetMarginAllPairsV1RespItem {
	return &NullableGetMarginAllPairsV1RespItem{value: val, isSet: true}
}

func (v NullableGetMarginAllPairsV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMarginAllPairsV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


