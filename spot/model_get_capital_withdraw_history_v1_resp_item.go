/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetCapitalWithdrawHistoryV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCapitalWithdrawHistoryV1RespItem{}

// GetCapitalWithdrawHistoryV1RespItem struct for GetCapitalWithdrawHistoryV1RespItem
type GetCapitalWithdrawHistoryV1RespItem struct {
	Address *string `json:"address,omitempty"`
	Amount *string `json:"amount,omitempty"`
	ApplyTime *string `json:"applyTime,omitempty"`
	Coin *string `json:"coin,omitempty"`
	CompleteTime *string `json:"completeTime,omitempty"`
	ConfirmNo *int32 `json:"confirmNo,omitempty"`
	Id *string `json:"id,omitempty"`
	Info *string `json:"info,omitempty"`
	Network *string `json:"network,omitempty"`
	Status *int32 `json:"status,omitempty"`
	TransactionFee *string `json:"transactionFee,omitempty"`
	TransferType *int32 `json:"transferType,omitempty"`
	TxId *string `json:"txId,omitempty"`
	TxKey *string `json:"txKey,omitempty"`
	WalletType *int32 `json:"walletType,omitempty"`
	WithdrawOrderId *string `json:"withdrawOrderId,omitempty"`
}

// NewGetCapitalWithdrawHistoryV1RespItem instantiates a new GetCapitalWithdrawHistoryV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCapitalWithdrawHistoryV1RespItem() *GetCapitalWithdrawHistoryV1RespItem {
	this := GetCapitalWithdrawHistoryV1RespItem{}
	return &this
}

// NewGetCapitalWithdrawHistoryV1RespItemWithDefaults instantiates a new GetCapitalWithdrawHistoryV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCapitalWithdrawHistoryV1RespItemWithDefaults() *GetCapitalWithdrawHistoryV1RespItem {
	this := GetCapitalWithdrawHistoryV1RespItem{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetAddress() string {
	if o == nil || IsNil(o.Address) {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetAddress(v string) {
	o.Address = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetAmount(v string) {
	o.Amount = &v
}

// GetApplyTime returns the ApplyTime field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetApplyTime() string {
	if o == nil || IsNil(o.ApplyTime) {
		var ret string
		return ret
	}
	return *o.ApplyTime
}

// GetApplyTimeOk returns a tuple with the ApplyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetApplyTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ApplyTime) {
		return nil, false
	}
	return o.ApplyTime, true
}

// HasApplyTime returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasApplyTime() bool {
	if o != nil && !IsNil(o.ApplyTime) {
		return true
	}

	return false
}

// SetApplyTime gets a reference to the given string and assigns it to the ApplyTime field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetApplyTime(v string) {
	o.ApplyTime = &v
}

// GetCoin returns the Coin field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetCoin() string {
	if o == nil || IsNil(o.Coin) {
		var ret string
		return ret
	}
	return *o.Coin
}

// GetCoinOk returns a tuple with the Coin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetCoinOk() (*string, bool) {
	if o == nil || IsNil(o.Coin) {
		return nil, false
	}
	return o.Coin, true
}

// HasCoin returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasCoin() bool {
	if o != nil && !IsNil(o.Coin) {
		return true
	}

	return false
}

// SetCoin gets a reference to the given string and assigns it to the Coin field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetCoin(v string) {
	o.Coin = &v
}

// GetCompleteTime returns the CompleteTime field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetCompleteTime() string {
	if o == nil || IsNil(o.CompleteTime) {
		var ret string
		return ret
	}
	return *o.CompleteTime
}

// GetCompleteTimeOk returns a tuple with the CompleteTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetCompleteTimeOk() (*string, bool) {
	if o == nil || IsNil(o.CompleteTime) {
		return nil, false
	}
	return o.CompleteTime, true
}

// HasCompleteTime returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasCompleteTime() bool {
	if o != nil && !IsNil(o.CompleteTime) {
		return true
	}

	return false
}

// SetCompleteTime gets a reference to the given string and assigns it to the CompleteTime field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetCompleteTime(v string) {
	o.CompleteTime = &v
}

// GetConfirmNo returns the ConfirmNo field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetConfirmNo() int32 {
	if o == nil || IsNil(o.ConfirmNo) {
		var ret int32
		return ret
	}
	return *o.ConfirmNo
}

// GetConfirmNoOk returns a tuple with the ConfirmNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetConfirmNoOk() (*int32, bool) {
	if o == nil || IsNil(o.ConfirmNo) {
		return nil, false
	}
	return o.ConfirmNo, true
}

// HasConfirmNo returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasConfirmNo() bool {
	if o != nil && !IsNil(o.ConfirmNo) {
		return true
	}

	return false
}

// SetConfirmNo gets a reference to the given int32 and assigns it to the ConfirmNo field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetConfirmNo(v int32) {
	o.ConfirmNo = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetId(v string) {
	o.Id = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetInfo() string {
	if o == nil || IsNil(o.Info) {
		var ret string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetInfoOk() (*string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given string and assigns it to the Info field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetInfo(v string) {
	o.Info = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetNetwork() string {
	if o == nil || IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetNetwork(v string) {
	o.Network = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetStatus(v int32) {
	o.Status = &v
}

// GetTransactionFee returns the TransactionFee field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetTransactionFee() string {
	if o == nil || IsNil(o.TransactionFee) {
		var ret string
		return ret
	}
	return *o.TransactionFee
}

// GetTransactionFeeOk returns a tuple with the TransactionFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetTransactionFeeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionFee) {
		return nil, false
	}
	return o.TransactionFee, true
}

// HasTransactionFee returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasTransactionFee() bool {
	if o != nil && !IsNil(o.TransactionFee) {
		return true
	}

	return false
}

// SetTransactionFee gets a reference to the given string and assigns it to the TransactionFee field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetTransactionFee(v string) {
	o.TransactionFee = &v
}

// GetTransferType returns the TransferType field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetTransferType() int32 {
	if o == nil || IsNil(o.TransferType) {
		var ret int32
		return ret
	}
	return *o.TransferType
}

// GetTransferTypeOk returns a tuple with the TransferType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetTransferTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.TransferType) {
		return nil, false
	}
	return o.TransferType, true
}

// HasTransferType returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasTransferType() bool {
	if o != nil && !IsNil(o.TransferType) {
		return true
	}

	return false
}

// SetTransferType gets a reference to the given int32 and assigns it to the TransferType field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetTransferType(v int32) {
	o.TransferType = &v
}

// GetTxId returns the TxId field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetTxId() string {
	if o == nil || IsNil(o.TxId) {
		var ret string
		return ret
	}
	return *o.TxId
}

// GetTxIdOk returns a tuple with the TxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetTxIdOk() (*string, bool) {
	if o == nil || IsNil(o.TxId) {
		return nil, false
	}
	return o.TxId, true
}

// HasTxId returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasTxId() bool {
	if o != nil && !IsNil(o.TxId) {
		return true
	}

	return false
}

// SetTxId gets a reference to the given string and assigns it to the TxId field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetTxId(v string) {
	o.TxId = &v
}

// GetTxKey returns the TxKey field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetTxKey() string {
	if o == nil || IsNil(o.TxKey) {
		var ret string
		return ret
	}
	return *o.TxKey
}

// GetTxKeyOk returns a tuple with the TxKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetTxKeyOk() (*string, bool) {
	if o == nil || IsNil(o.TxKey) {
		return nil, false
	}
	return o.TxKey, true
}

// HasTxKey returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasTxKey() bool {
	if o != nil && !IsNil(o.TxKey) {
		return true
	}

	return false
}

// SetTxKey gets a reference to the given string and assigns it to the TxKey field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetTxKey(v string) {
	o.TxKey = &v
}

// GetWalletType returns the WalletType field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetWalletType() int32 {
	if o == nil || IsNil(o.WalletType) {
		var ret int32
		return ret
	}
	return *o.WalletType
}

// GetWalletTypeOk returns a tuple with the WalletType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetWalletTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.WalletType) {
		return nil, false
	}
	return o.WalletType, true
}

// HasWalletType returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasWalletType() bool {
	if o != nil && !IsNil(o.WalletType) {
		return true
	}

	return false
}

// SetWalletType gets a reference to the given int32 and assigns it to the WalletType field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetWalletType(v int32) {
	o.WalletType = &v
}

// GetWithdrawOrderId returns the WithdrawOrderId field value if set, zero value otherwise.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetWithdrawOrderId() string {
	if o == nil || IsNil(o.WithdrawOrderId) {
		var ret string
		return ret
	}
	return *o.WithdrawOrderId
}

// GetWithdrawOrderIdOk returns a tuple with the WithdrawOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) GetWithdrawOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.WithdrawOrderId) {
		return nil, false
	}
	return o.WithdrawOrderId, true
}

// HasWithdrawOrderId returns a boolean if a field has been set.
func (o *GetCapitalWithdrawHistoryV1RespItem) HasWithdrawOrderId() bool {
	if o != nil && !IsNil(o.WithdrawOrderId) {
		return true
	}

	return false
}

// SetWithdrawOrderId gets a reference to the given string and assigns it to the WithdrawOrderId field.
func (o *GetCapitalWithdrawHistoryV1RespItem) SetWithdrawOrderId(v string) {
	o.WithdrawOrderId = &v
}

func (o GetCapitalWithdrawHistoryV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCapitalWithdrawHistoryV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.ApplyTime) {
		toSerialize["applyTime"] = o.ApplyTime
	}
	if !IsNil(o.Coin) {
		toSerialize["coin"] = o.Coin
	}
	if !IsNil(o.CompleteTime) {
		toSerialize["completeTime"] = o.CompleteTime
	}
	if !IsNil(o.ConfirmNo) {
		toSerialize["confirmNo"] = o.ConfirmNo
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.TransactionFee) {
		toSerialize["transactionFee"] = o.TransactionFee
	}
	if !IsNil(o.TransferType) {
		toSerialize["transferType"] = o.TransferType
	}
	if !IsNil(o.TxId) {
		toSerialize["txId"] = o.TxId
	}
	if !IsNil(o.TxKey) {
		toSerialize["txKey"] = o.TxKey
	}
	if !IsNil(o.WalletType) {
		toSerialize["walletType"] = o.WalletType
	}
	if !IsNil(o.WithdrawOrderId) {
		toSerialize["withdrawOrderId"] = o.WithdrawOrderId
	}
	return toSerialize, nil
}

type NullableGetCapitalWithdrawHistoryV1RespItem struct {
	value *GetCapitalWithdrawHistoryV1RespItem
	isSet bool
}

func (v NullableGetCapitalWithdrawHistoryV1RespItem) Get() *GetCapitalWithdrawHistoryV1RespItem {
	return v.value
}

func (v *NullableGetCapitalWithdrawHistoryV1RespItem) Set(val *GetCapitalWithdrawHistoryV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCapitalWithdrawHistoryV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCapitalWithdrawHistoryV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCapitalWithdrawHistoryV1RespItem(val *GetCapitalWithdrawHistoryV1RespItem) *NullableGetCapitalWithdrawHistoryV1RespItem {
	return &NullableGetCapitalWithdrawHistoryV1RespItem{value: val, isSet: true}
}

func (v NullableGetCapitalWithdrawHistoryV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCapitalWithdrawHistoryV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


