/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner{}

// GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner struct for GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner
type GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner struct {
	Amount *string `json:"amount,omitempty"`
	Asset *string `json:"asset,omitempty"`
	CreateTime *int64 `json:"createTime,omitempty"`
	FromAccountType *string `json:"fromAccountType,omitempty"`
	FromEmail *string `json:"fromEmail,omitempty"`
	ScheduledData *int32 `json:"scheduledData,omitempty"`
	Status *string `json:"status,omitempty"`
	ToAccountType *string `json:"toAccountType,omitempty"`
	ToEmail *string `json:"toEmail,omitempty"`
	TranId *int64 `json:"tranId,omitempty"`
}

// NewGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner instantiates a new GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner() *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner {
	this := GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner{}
	return &this
}

// NewGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInnerWithDefaults instantiates a new GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInnerWithDefaults() *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner {
	this := GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) SetAmount(v string) {
	o.Amount = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) SetAsset(v string) {
	o.Asset = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime) {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetCreateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetFromAccountType returns the FromAccountType field value if set, zero value otherwise.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetFromAccountType() string {
	if o == nil || IsNil(o.FromAccountType) {
		var ret string
		return ret
	}
	return *o.FromAccountType
}

// GetFromAccountTypeOk returns a tuple with the FromAccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetFromAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FromAccountType) {
		return nil, false
	}
	return o.FromAccountType, true
}

// HasFromAccountType returns a boolean if a field has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) HasFromAccountType() bool {
	if o != nil && !IsNil(o.FromAccountType) {
		return true
	}

	return false
}

// SetFromAccountType gets a reference to the given string and assigns it to the FromAccountType field.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) SetFromAccountType(v string) {
	o.FromAccountType = &v
}

// GetFromEmail returns the FromEmail field value if set, zero value otherwise.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetFromEmail() string {
	if o == nil || IsNil(o.FromEmail) {
		var ret string
		return ret
	}
	return *o.FromEmail
}

// GetFromEmailOk returns a tuple with the FromEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetFromEmailOk() (*string, bool) {
	if o == nil || IsNil(o.FromEmail) {
		return nil, false
	}
	return o.FromEmail, true
}

// HasFromEmail returns a boolean if a field has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) HasFromEmail() bool {
	if o != nil && !IsNil(o.FromEmail) {
		return true
	}

	return false
}

// SetFromEmail gets a reference to the given string and assigns it to the FromEmail field.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) SetFromEmail(v string) {
	o.FromEmail = &v
}

// GetScheduledData returns the ScheduledData field value if set, zero value otherwise.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetScheduledData() int32 {
	if o == nil || IsNil(o.ScheduledData) {
		var ret int32
		return ret
	}
	return *o.ScheduledData
}

// GetScheduledDataOk returns a tuple with the ScheduledData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetScheduledDataOk() (*int32, bool) {
	if o == nil || IsNil(o.ScheduledData) {
		return nil, false
	}
	return o.ScheduledData, true
}

// HasScheduledData returns a boolean if a field has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) HasScheduledData() bool {
	if o != nil && !IsNil(o.ScheduledData) {
		return true
	}

	return false
}

// SetScheduledData gets a reference to the given int32 and assigns it to the ScheduledData field.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) SetScheduledData(v int32) {
	o.ScheduledData = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) SetStatus(v string) {
	o.Status = &v
}

// GetToAccountType returns the ToAccountType field value if set, zero value otherwise.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetToAccountType() string {
	if o == nil || IsNil(o.ToAccountType) {
		var ret string
		return ret
	}
	return *o.ToAccountType
}

// GetToAccountTypeOk returns a tuple with the ToAccountType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetToAccountTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ToAccountType) {
		return nil, false
	}
	return o.ToAccountType, true
}

// HasToAccountType returns a boolean if a field has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) HasToAccountType() bool {
	if o != nil && !IsNil(o.ToAccountType) {
		return true
	}

	return false
}

// SetToAccountType gets a reference to the given string and assigns it to the ToAccountType field.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) SetToAccountType(v string) {
	o.ToAccountType = &v
}

// GetToEmail returns the ToEmail field value if set, zero value otherwise.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetToEmail() string {
	if o == nil || IsNil(o.ToEmail) {
		var ret string
		return ret
	}
	return *o.ToEmail
}

// GetToEmailOk returns a tuple with the ToEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetToEmailOk() (*string, bool) {
	if o == nil || IsNil(o.ToEmail) {
		return nil, false
	}
	return o.ToEmail, true
}

// HasToEmail returns a boolean if a field has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) HasToEmail() bool {
	if o != nil && !IsNil(o.ToEmail) {
		return true
	}

	return false
}

// SetToEmail gets a reference to the given string and assigns it to the ToEmail field.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) SetToEmail(v string) {
	o.ToEmail = &v
}

// GetTranId returns the TranId field value if set, zero value otherwise.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetTranId() int64 {
	if o == nil || IsNil(o.TranId) {
		var ret int64
		return ret
	}
	return *o.TranId
}

// GetTranIdOk returns a tuple with the TranId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) GetTranIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TranId) {
		return nil, false
	}
	return o.TranId, true
}

// HasTranId returns a boolean if a field has been set.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) HasTranId() bool {
	if o != nil && !IsNil(o.TranId) {
		return true
	}

	return false
}

// SetTranId gets a reference to the given int64 and assigns it to the TranId field.
func (o *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) SetTranId(v int64) {
	o.TranId = &v
}

func (o GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.FromAccountType) {
		toSerialize["fromAccountType"] = o.FromAccountType
	}
	if !IsNil(o.FromEmail) {
		toSerialize["fromEmail"] = o.FromEmail
	}
	if !IsNil(o.ScheduledData) {
		toSerialize["scheduledData"] = o.ScheduledData
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.ToAccountType) {
		toSerialize["toAccountType"] = o.ToAccountType
	}
	if !IsNil(o.ToEmail) {
		toSerialize["toEmail"] = o.ToEmail
	}
	if !IsNil(o.TranId) {
		toSerialize["tranId"] = o.TranId
	}
	return toSerialize, nil
}

type NullableGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner struct {
	value *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner
	isSet bool
}

func (v NullableGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) Get() *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner {
	return v.value
}

func (v *NullableGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) Set(val *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner(val *GetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) *NullableGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner {
	return &NullableGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner{value: val, isSet: true}
}

func (v NullableGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


