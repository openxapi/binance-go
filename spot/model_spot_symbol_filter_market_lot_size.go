/*
Binance Spot API

OpenAPI specification for Binance cryptocurrency exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the SpotSymbolFilterMarketLotSize type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotSymbolFilterMarketLotSize{}

// SpotSymbolFilterMarketLotSize struct for SpotSymbolFilterMarketLotSize
type SpotSymbolFilterMarketLotSize struct {
	FilterType *string `json:"filterType,omitempty"`
	MaxQty *string `json:"maxQty,omitempty"`
	MinQty *string `json:"minQty,omitempty"`
	StepSize *string `json:"stepSize,omitempty"`
}

// NewSpotSymbolFilterMarketLotSize instantiates a new SpotSymbolFilterMarketLotSize object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotSymbolFilterMarketLotSize() *SpotSymbolFilterMarketLotSize {
	this := SpotSymbolFilterMarketLotSize{}
	return &this
}

// NewSpotSymbolFilterMarketLotSizeWithDefaults instantiates a new SpotSymbolFilterMarketLotSize object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotSymbolFilterMarketLotSizeWithDefaults() *SpotSymbolFilterMarketLotSize {
	this := SpotSymbolFilterMarketLotSize{}
	return &this
}

// GetFilterType returns the FilterType field value if set, zero value otherwise.
func (o *SpotSymbolFilterMarketLotSize) GetFilterType() string {
	if o == nil || IsNil(o.FilterType) {
		var ret string
		return ret
	}
	return *o.FilterType
}

// GetFilterTypeOk returns a tuple with the FilterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterMarketLotSize) GetFilterTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FilterType) {
		return nil, false
	}
	return o.FilterType, true
}

// HasFilterType returns a boolean if a field has been set.
func (o *SpotSymbolFilterMarketLotSize) HasFilterType() bool {
	if o != nil && !IsNil(o.FilterType) {
		return true
	}

	return false
}

// SetFilterType gets a reference to the given string and assigns it to the FilterType field.
func (o *SpotSymbolFilterMarketLotSize) SetFilterType(v string) {
	o.FilterType = &v
}

// GetMaxQty returns the MaxQty field value if set, zero value otherwise.
func (o *SpotSymbolFilterMarketLotSize) GetMaxQty() string {
	if o == nil || IsNil(o.MaxQty) {
		var ret string
		return ret
	}
	return *o.MaxQty
}

// GetMaxQtyOk returns a tuple with the MaxQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterMarketLotSize) GetMaxQtyOk() (*string, bool) {
	if o == nil || IsNil(o.MaxQty) {
		return nil, false
	}
	return o.MaxQty, true
}

// HasMaxQty returns a boolean if a field has been set.
func (o *SpotSymbolFilterMarketLotSize) HasMaxQty() bool {
	if o != nil && !IsNil(o.MaxQty) {
		return true
	}

	return false
}

// SetMaxQty gets a reference to the given string and assigns it to the MaxQty field.
func (o *SpotSymbolFilterMarketLotSize) SetMaxQty(v string) {
	o.MaxQty = &v
}

// GetMinQty returns the MinQty field value if set, zero value otherwise.
func (o *SpotSymbolFilterMarketLotSize) GetMinQty() string {
	if o == nil || IsNil(o.MinQty) {
		var ret string
		return ret
	}
	return *o.MinQty
}

// GetMinQtyOk returns a tuple with the MinQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterMarketLotSize) GetMinQtyOk() (*string, bool) {
	if o == nil || IsNil(o.MinQty) {
		return nil, false
	}
	return o.MinQty, true
}

// HasMinQty returns a boolean if a field has been set.
func (o *SpotSymbolFilterMarketLotSize) HasMinQty() bool {
	if o != nil && !IsNil(o.MinQty) {
		return true
	}

	return false
}

// SetMinQty gets a reference to the given string and assigns it to the MinQty field.
func (o *SpotSymbolFilterMarketLotSize) SetMinQty(v string) {
	o.MinQty = &v
}

// GetStepSize returns the StepSize field value if set, zero value otherwise.
func (o *SpotSymbolFilterMarketLotSize) GetStepSize() string {
	if o == nil || IsNil(o.StepSize) {
		var ret string
		return ret
	}
	return *o.StepSize
}

// GetStepSizeOk returns a tuple with the StepSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterMarketLotSize) GetStepSizeOk() (*string, bool) {
	if o == nil || IsNil(o.StepSize) {
		return nil, false
	}
	return o.StepSize, true
}

// HasStepSize returns a boolean if a field has been set.
func (o *SpotSymbolFilterMarketLotSize) HasStepSize() bool {
	if o != nil && !IsNil(o.StepSize) {
		return true
	}

	return false
}

// SetStepSize gets a reference to the given string and assigns it to the StepSize field.
func (o *SpotSymbolFilterMarketLotSize) SetStepSize(v string) {
	o.StepSize = &v
}

func (o SpotSymbolFilterMarketLotSize) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotSymbolFilterMarketLotSize) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FilterType) {
		toSerialize["filterType"] = o.FilterType
	}
	if !IsNil(o.MaxQty) {
		toSerialize["maxQty"] = o.MaxQty
	}
	if !IsNil(o.MinQty) {
		toSerialize["minQty"] = o.MinQty
	}
	if !IsNil(o.StepSize) {
		toSerialize["stepSize"] = o.StepSize
	}
	return toSerialize, nil
}

type NullableSpotSymbolFilterMarketLotSize struct {
	value *SpotSymbolFilterMarketLotSize
	isSet bool
}

func (v NullableSpotSymbolFilterMarketLotSize) Get() *SpotSymbolFilterMarketLotSize {
	return v.value
}

func (v *NullableSpotSymbolFilterMarketLotSize) Set(val *SpotSymbolFilterMarketLotSize) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotSymbolFilterMarketLotSize) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotSymbolFilterMarketLotSize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotSymbolFilterMarketLotSize(val *SpotSymbolFilterMarketLotSize) *NullableSpotSymbolFilterMarketLotSize {
	return &NullableSpotSymbolFilterMarketLotSize{value: val, isSet: true}
}

func (v NullableSpotSymbolFilterMarketLotSize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotSymbolFilterMarketLotSize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


