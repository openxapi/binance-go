/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateBrokerSubAccountBnbBurnSpotV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBrokerSubAccountBnbBurnSpotV1Resp{}

// CreateBrokerSubAccountBnbBurnSpotV1Resp struct for CreateBrokerSubAccountBnbBurnSpotV1Resp
type CreateBrokerSubAccountBnbBurnSpotV1Resp struct {
	SpotBNBBurn *bool `json:"spotBNBBurn,omitempty"`
	SubAccountId *int64 `json:"subAccountId,omitempty"`
}

// NewCreateBrokerSubAccountBnbBurnSpotV1Resp instantiates a new CreateBrokerSubAccountBnbBurnSpotV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBrokerSubAccountBnbBurnSpotV1Resp() *CreateBrokerSubAccountBnbBurnSpotV1Resp {
	this := CreateBrokerSubAccountBnbBurnSpotV1Resp{}
	return &this
}

// NewCreateBrokerSubAccountBnbBurnSpotV1RespWithDefaults instantiates a new CreateBrokerSubAccountBnbBurnSpotV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBrokerSubAccountBnbBurnSpotV1RespWithDefaults() *CreateBrokerSubAccountBnbBurnSpotV1Resp {
	this := CreateBrokerSubAccountBnbBurnSpotV1Resp{}
	return &this
}

// GetSpotBNBBurn returns the SpotBNBBurn field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountBnbBurnSpotV1Resp) GetSpotBNBBurn() bool {
	if o == nil || IsNil(o.SpotBNBBurn) {
		var ret bool
		return ret
	}
	return *o.SpotBNBBurn
}

// GetSpotBNBBurnOk returns a tuple with the SpotBNBBurn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountBnbBurnSpotV1Resp) GetSpotBNBBurnOk() (*bool, bool) {
	if o == nil || IsNil(o.SpotBNBBurn) {
		return nil, false
	}
	return o.SpotBNBBurn, true
}

// HasSpotBNBBurn returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountBnbBurnSpotV1Resp) HasSpotBNBBurn() bool {
	if o != nil && !IsNil(o.SpotBNBBurn) {
		return true
	}

	return false
}

// SetSpotBNBBurn gets a reference to the given bool and assigns it to the SpotBNBBurn field.
func (o *CreateBrokerSubAccountBnbBurnSpotV1Resp) SetSpotBNBBurn(v bool) {
	o.SpotBNBBurn = &v
}

// GetSubAccountId returns the SubAccountId field value if set, zero value otherwise.
func (o *CreateBrokerSubAccountBnbBurnSpotV1Resp) GetSubAccountId() int64 {
	if o == nil || IsNil(o.SubAccountId) {
		var ret int64
		return ret
	}
	return *o.SubAccountId
}

// GetSubAccountIdOk returns a tuple with the SubAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerSubAccountBnbBurnSpotV1Resp) GetSubAccountIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SubAccountId) {
		return nil, false
	}
	return o.SubAccountId, true
}

// HasSubAccountId returns a boolean if a field has been set.
func (o *CreateBrokerSubAccountBnbBurnSpotV1Resp) HasSubAccountId() bool {
	if o != nil && !IsNil(o.SubAccountId) {
		return true
	}

	return false
}

// SetSubAccountId gets a reference to the given int64 and assigns it to the SubAccountId field.
func (o *CreateBrokerSubAccountBnbBurnSpotV1Resp) SetSubAccountId(v int64) {
	o.SubAccountId = &v
}

func (o CreateBrokerSubAccountBnbBurnSpotV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBrokerSubAccountBnbBurnSpotV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SpotBNBBurn) {
		toSerialize["spotBNBBurn"] = o.SpotBNBBurn
	}
	if !IsNil(o.SubAccountId) {
		toSerialize["subAccountId"] = o.SubAccountId
	}
	return toSerialize, nil
}

type NullableCreateBrokerSubAccountBnbBurnSpotV1Resp struct {
	value *CreateBrokerSubAccountBnbBurnSpotV1Resp
	isSet bool
}

func (v NullableCreateBrokerSubAccountBnbBurnSpotV1Resp) Get() *CreateBrokerSubAccountBnbBurnSpotV1Resp {
	return v.value
}

func (v *NullableCreateBrokerSubAccountBnbBurnSpotV1Resp) Set(val *CreateBrokerSubAccountBnbBurnSpotV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBrokerSubAccountBnbBurnSpotV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBrokerSubAccountBnbBurnSpotV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBrokerSubAccountBnbBurnSpotV1Resp(val *CreateBrokerSubAccountBnbBurnSpotV1Resp) *NullableCreateBrokerSubAccountBnbBurnSpotV1Resp {
	return &NullableCreateBrokerSubAccountBnbBurnSpotV1Resp{value: val, isSet: true}
}

func (v NullableCreateBrokerSubAccountBnbBurnSpotV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBrokerSubAccountBnbBurnSpotV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


