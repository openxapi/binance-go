/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateSubAccountFuturesMovePositionV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSubAccountFuturesMovePositionV1Resp{}

// CreateSubAccountFuturesMovePositionV1Resp struct for CreateSubAccountFuturesMovePositionV1Resp
type CreateSubAccountFuturesMovePositionV1Resp struct {
	MovePositionOrders []CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner `json:"movePositionOrders,omitempty"`
}

// NewCreateSubAccountFuturesMovePositionV1Resp instantiates a new CreateSubAccountFuturesMovePositionV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSubAccountFuturesMovePositionV1Resp() *CreateSubAccountFuturesMovePositionV1Resp {
	this := CreateSubAccountFuturesMovePositionV1Resp{}
	return &this
}

// NewCreateSubAccountFuturesMovePositionV1RespWithDefaults instantiates a new CreateSubAccountFuturesMovePositionV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSubAccountFuturesMovePositionV1RespWithDefaults() *CreateSubAccountFuturesMovePositionV1Resp {
	this := CreateSubAccountFuturesMovePositionV1Resp{}
	return &this
}

// GetMovePositionOrders returns the MovePositionOrders field value if set, zero value otherwise.
func (o *CreateSubAccountFuturesMovePositionV1Resp) GetMovePositionOrders() []CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner {
	if o == nil || IsNil(o.MovePositionOrders) {
		var ret []CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner
		return ret
	}
	return o.MovePositionOrders
}

// GetMovePositionOrdersOk returns a tuple with the MovePositionOrders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSubAccountFuturesMovePositionV1Resp) GetMovePositionOrdersOk() ([]CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner, bool) {
	if o == nil || IsNil(o.MovePositionOrders) {
		return nil, false
	}
	return o.MovePositionOrders, true
}

// HasMovePositionOrders returns a boolean if a field has been set.
func (o *CreateSubAccountFuturesMovePositionV1Resp) HasMovePositionOrders() bool {
	if o != nil && !IsNil(o.MovePositionOrders) {
		return true
	}

	return false
}

// SetMovePositionOrders gets a reference to the given []CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner and assigns it to the MovePositionOrders field.
func (o *CreateSubAccountFuturesMovePositionV1Resp) SetMovePositionOrders(v []CreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner) {
	o.MovePositionOrders = v
}

func (o CreateSubAccountFuturesMovePositionV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSubAccountFuturesMovePositionV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MovePositionOrders) {
		toSerialize["movePositionOrders"] = o.MovePositionOrders
	}
	return toSerialize, nil
}

type NullableCreateSubAccountFuturesMovePositionV1Resp struct {
	value *CreateSubAccountFuturesMovePositionV1Resp
	isSet bool
}

func (v NullableCreateSubAccountFuturesMovePositionV1Resp) Get() *CreateSubAccountFuturesMovePositionV1Resp {
	return v.value
}

func (v *NullableCreateSubAccountFuturesMovePositionV1Resp) Set(val *CreateSubAccountFuturesMovePositionV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSubAccountFuturesMovePositionV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSubAccountFuturesMovePositionV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSubAccountFuturesMovePositionV1Resp(val *CreateSubAccountFuturesMovePositionV1Resp) *NullableCreateSubAccountFuturesMovePositionV1Resp {
	return &NullableCreateSubAccountFuturesMovePositionV1Resp{value: val, isSet: true}
}

func (v NullableCreateSubAccountFuturesMovePositionV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSubAccountFuturesMovePositionV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


