/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner{}

// GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner struct for GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner
type GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner struct {
	BindParentEmail *string `json:"bindParentEmail,omitempty"`
	BindParentUserId *int64 `json:"bindParentUserId,omitempty"`
	Email *string `json:"email,omitempty"`
	InsertTimeStamp *int32 `json:"insertTimeStamp,omitempty"`
	IsFutureEnabled *bool `json:"isFutureEnabled,omitempty"`
	IsMarginEnabled *bool `json:"isMarginEnabled,omitempty"`
	IsSignedLVTRiskAgreement *bool `json:"isSignedLVTRiskAgreement,omitempty"`
	IsSubUserEnabled *bool `json:"isSubUserEnabled,omitempty"`
	IsUserActive *bool `json:"isUserActive,omitempty"`
	ManagersubUserId *int64 `json:"managersubUserId,omitempty"`
	RootUserId *int64 `json:"rootUserId,omitempty"`
}

// NewGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner instantiates a new GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner() *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner {
	this := GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner{}
	return &this
}

// NewGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInnerWithDefaults instantiates a new GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInnerWithDefaults() *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner {
	this := GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner{}
	return &this
}

// GetBindParentEmail returns the BindParentEmail field value if set, zero value otherwise.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetBindParentEmail() string {
	if o == nil || IsNil(o.BindParentEmail) {
		var ret string
		return ret
	}
	return *o.BindParentEmail
}

// GetBindParentEmailOk returns a tuple with the BindParentEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetBindParentEmailOk() (*string, bool) {
	if o == nil || IsNil(o.BindParentEmail) {
		return nil, false
	}
	return o.BindParentEmail, true
}

// HasBindParentEmail returns a boolean if a field has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) HasBindParentEmail() bool {
	if o != nil && !IsNil(o.BindParentEmail) {
		return true
	}

	return false
}

// SetBindParentEmail gets a reference to the given string and assigns it to the BindParentEmail field.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) SetBindParentEmail(v string) {
	o.BindParentEmail = &v
}

// GetBindParentUserId returns the BindParentUserId field value if set, zero value otherwise.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetBindParentUserId() int64 {
	if o == nil || IsNil(o.BindParentUserId) {
		var ret int64
		return ret
	}
	return *o.BindParentUserId
}

// GetBindParentUserIdOk returns a tuple with the BindParentUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetBindParentUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.BindParentUserId) {
		return nil, false
	}
	return o.BindParentUserId, true
}

// HasBindParentUserId returns a boolean if a field has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) HasBindParentUserId() bool {
	if o != nil && !IsNil(o.BindParentUserId) {
		return true
	}

	return false
}

// SetBindParentUserId gets a reference to the given int64 and assigns it to the BindParentUserId field.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) SetBindParentUserId(v int64) {
	o.BindParentUserId = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) SetEmail(v string) {
	o.Email = &v
}

// GetInsertTimeStamp returns the InsertTimeStamp field value if set, zero value otherwise.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetInsertTimeStamp() int32 {
	if o == nil || IsNil(o.InsertTimeStamp) {
		var ret int32
		return ret
	}
	return *o.InsertTimeStamp
}

// GetInsertTimeStampOk returns a tuple with the InsertTimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetInsertTimeStampOk() (*int32, bool) {
	if o == nil || IsNil(o.InsertTimeStamp) {
		return nil, false
	}
	return o.InsertTimeStamp, true
}

// HasInsertTimeStamp returns a boolean if a field has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) HasInsertTimeStamp() bool {
	if o != nil && !IsNil(o.InsertTimeStamp) {
		return true
	}

	return false
}

// SetInsertTimeStamp gets a reference to the given int32 and assigns it to the InsertTimeStamp field.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) SetInsertTimeStamp(v int32) {
	o.InsertTimeStamp = &v
}

// GetIsFutureEnabled returns the IsFutureEnabled field value if set, zero value otherwise.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetIsFutureEnabled() bool {
	if o == nil || IsNil(o.IsFutureEnabled) {
		var ret bool
		return ret
	}
	return *o.IsFutureEnabled
}

// GetIsFutureEnabledOk returns a tuple with the IsFutureEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetIsFutureEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFutureEnabled) {
		return nil, false
	}
	return o.IsFutureEnabled, true
}

// HasIsFutureEnabled returns a boolean if a field has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) HasIsFutureEnabled() bool {
	if o != nil && !IsNil(o.IsFutureEnabled) {
		return true
	}

	return false
}

// SetIsFutureEnabled gets a reference to the given bool and assigns it to the IsFutureEnabled field.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) SetIsFutureEnabled(v bool) {
	o.IsFutureEnabled = &v
}

// GetIsMarginEnabled returns the IsMarginEnabled field value if set, zero value otherwise.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetIsMarginEnabled() bool {
	if o == nil || IsNil(o.IsMarginEnabled) {
		var ret bool
		return ret
	}
	return *o.IsMarginEnabled
}

// GetIsMarginEnabledOk returns a tuple with the IsMarginEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetIsMarginEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMarginEnabled) {
		return nil, false
	}
	return o.IsMarginEnabled, true
}

// HasIsMarginEnabled returns a boolean if a field has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) HasIsMarginEnabled() bool {
	if o != nil && !IsNil(o.IsMarginEnabled) {
		return true
	}

	return false
}

// SetIsMarginEnabled gets a reference to the given bool and assigns it to the IsMarginEnabled field.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) SetIsMarginEnabled(v bool) {
	o.IsMarginEnabled = &v
}

// GetIsSignedLVTRiskAgreement returns the IsSignedLVTRiskAgreement field value if set, zero value otherwise.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetIsSignedLVTRiskAgreement() bool {
	if o == nil || IsNil(o.IsSignedLVTRiskAgreement) {
		var ret bool
		return ret
	}
	return *o.IsSignedLVTRiskAgreement
}

// GetIsSignedLVTRiskAgreementOk returns a tuple with the IsSignedLVTRiskAgreement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetIsSignedLVTRiskAgreementOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSignedLVTRiskAgreement) {
		return nil, false
	}
	return o.IsSignedLVTRiskAgreement, true
}

// HasIsSignedLVTRiskAgreement returns a boolean if a field has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) HasIsSignedLVTRiskAgreement() bool {
	if o != nil && !IsNil(o.IsSignedLVTRiskAgreement) {
		return true
	}

	return false
}

// SetIsSignedLVTRiskAgreement gets a reference to the given bool and assigns it to the IsSignedLVTRiskAgreement field.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) SetIsSignedLVTRiskAgreement(v bool) {
	o.IsSignedLVTRiskAgreement = &v
}

// GetIsSubUserEnabled returns the IsSubUserEnabled field value if set, zero value otherwise.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetIsSubUserEnabled() bool {
	if o == nil || IsNil(o.IsSubUserEnabled) {
		var ret bool
		return ret
	}
	return *o.IsSubUserEnabled
}

// GetIsSubUserEnabledOk returns a tuple with the IsSubUserEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetIsSubUserEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSubUserEnabled) {
		return nil, false
	}
	return o.IsSubUserEnabled, true
}

// HasIsSubUserEnabled returns a boolean if a field has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) HasIsSubUserEnabled() bool {
	if o != nil && !IsNil(o.IsSubUserEnabled) {
		return true
	}

	return false
}

// SetIsSubUserEnabled gets a reference to the given bool and assigns it to the IsSubUserEnabled field.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) SetIsSubUserEnabled(v bool) {
	o.IsSubUserEnabled = &v
}

// GetIsUserActive returns the IsUserActive field value if set, zero value otherwise.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetIsUserActive() bool {
	if o == nil || IsNil(o.IsUserActive) {
		var ret bool
		return ret
	}
	return *o.IsUserActive
}

// GetIsUserActiveOk returns a tuple with the IsUserActive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetIsUserActiveOk() (*bool, bool) {
	if o == nil || IsNil(o.IsUserActive) {
		return nil, false
	}
	return o.IsUserActive, true
}

// HasIsUserActive returns a boolean if a field has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) HasIsUserActive() bool {
	if o != nil && !IsNil(o.IsUserActive) {
		return true
	}

	return false
}

// SetIsUserActive gets a reference to the given bool and assigns it to the IsUserActive field.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) SetIsUserActive(v bool) {
	o.IsUserActive = &v
}

// GetManagersubUserId returns the ManagersubUserId field value if set, zero value otherwise.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetManagersubUserId() int64 {
	if o == nil || IsNil(o.ManagersubUserId) {
		var ret int64
		return ret
	}
	return *o.ManagersubUserId
}

// GetManagersubUserIdOk returns a tuple with the ManagersubUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetManagersubUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ManagersubUserId) {
		return nil, false
	}
	return o.ManagersubUserId, true
}

// HasManagersubUserId returns a boolean if a field has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) HasManagersubUserId() bool {
	if o != nil && !IsNil(o.ManagersubUserId) {
		return true
	}

	return false
}

// SetManagersubUserId gets a reference to the given int64 and assigns it to the ManagersubUserId field.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) SetManagersubUserId(v int64) {
	o.ManagersubUserId = &v
}

// GetRootUserId returns the RootUserId field value if set, zero value otherwise.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetRootUserId() int64 {
	if o == nil || IsNil(o.RootUserId) {
		var ret int64
		return ret
	}
	return *o.RootUserId
}

// GetRootUserIdOk returns a tuple with the RootUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) GetRootUserIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RootUserId) {
		return nil, false
	}
	return o.RootUserId, true
}

// HasRootUserId returns a boolean if a field has been set.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) HasRootUserId() bool {
	if o != nil && !IsNil(o.RootUserId) {
		return true
	}

	return false
}

// SetRootUserId gets a reference to the given int64 and assigns it to the RootUserId field.
func (o *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) SetRootUserId(v int64) {
	o.RootUserId = &v
}

func (o GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BindParentEmail) {
		toSerialize["bindParentEmail"] = o.BindParentEmail
	}
	if !IsNil(o.BindParentUserId) {
		toSerialize["bindParentUserId"] = o.BindParentUserId
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.InsertTimeStamp) {
		toSerialize["insertTimeStamp"] = o.InsertTimeStamp
	}
	if !IsNil(o.IsFutureEnabled) {
		toSerialize["isFutureEnabled"] = o.IsFutureEnabled
	}
	if !IsNil(o.IsMarginEnabled) {
		toSerialize["isMarginEnabled"] = o.IsMarginEnabled
	}
	if !IsNil(o.IsSignedLVTRiskAgreement) {
		toSerialize["isSignedLVTRiskAgreement"] = o.IsSignedLVTRiskAgreement
	}
	if !IsNil(o.IsSubUserEnabled) {
		toSerialize["isSubUserEnabled"] = o.IsSubUserEnabled
	}
	if !IsNil(o.IsUserActive) {
		toSerialize["isUserActive"] = o.IsUserActive
	}
	if !IsNil(o.ManagersubUserId) {
		toSerialize["managersubUserId"] = o.ManagersubUserId
	}
	if !IsNil(o.RootUserId) {
		toSerialize["rootUserId"] = o.RootUserId
	}
	return toSerialize, nil
}

type NullableGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner struct {
	value *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner
	isSet bool
}

func (v NullableGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) Get() *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner {
	return v.value
}

func (v *NullableGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) Set(val *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner(val *GetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) *NullableGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner {
	return &NullableGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner{value: val, isSet: true}
}

func (v NullableGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetManagedSubaccountInfoV1RespManagerSubUserInfoVoListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


