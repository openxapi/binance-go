/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetFuturesHistDataLinkV1RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetFuturesHistDataLinkV1RespDataInner{}

// GetFuturesHistDataLinkV1RespDataInner struct for GetFuturesHistDataLinkV1RespDataInner
type GetFuturesHistDataLinkV1RespDataInner struct {
	Day *string `json:"day,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewGetFuturesHistDataLinkV1RespDataInner instantiates a new GetFuturesHistDataLinkV1RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetFuturesHistDataLinkV1RespDataInner() *GetFuturesHistDataLinkV1RespDataInner {
	this := GetFuturesHistDataLinkV1RespDataInner{}
	return &this
}

// NewGetFuturesHistDataLinkV1RespDataInnerWithDefaults instantiates a new GetFuturesHistDataLinkV1RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetFuturesHistDataLinkV1RespDataInnerWithDefaults() *GetFuturesHistDataLinkV1RespDataInner {
	this := GetFuturesHistDataLinkV1RespDataInner{}
	return &this
}

// GetDay returns the Day field value if set, zero value otherwise.
func (o *GetFuturesHistDataLinkV1RespDataInner) GetDay() string {
	if o == nil || IsNil(o.Day) {
		var ret string
		return ret
	}
	return *o.Day
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFuturesHistDataLinkV1RespDataInner) GetDayOk() (*string, bool) {
	if o == nil || IsNil(o.Day) {
		return nil, false
	}
	return o.Day, true
}

// HasDay returns a boolean if a field has been set.
func (o *GetFuturesHistDataLinkV1RespDataInner) HasDay() bool {
	if o != nil && !IsNil(o.Day) {
		return true
	}

	return false
}

// SetDay gets a reference to the given string and assigns it to the Day field.
func (o *GetFuturesHistDataLinkV1RespDataInner) SetDay(v string) {
	o.Day = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *GetFuturesHistDataLinkV1RespDataInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetFuturesHistDataLinkV1RespDataInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *GetFuturesHistDataLinkV1RespDataInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *GetFuturesHistDataLinkV1RespDataInner) SetUrl(v string) {
	o.Url = &v
}

func (o GetFuturesHistDataLinkV1RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetFuturesHistDataLinkV1RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Day) {
		toSerialize["day"] = o.Day
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableGetFuturesHistDataLinkV1RespDataInner struct {
	value *GetFuturesHistDataLinkV1RespDataInner
	isSet bool
}

func (v NullableGetFuturesHistDataLinkV1RespDataInner) Get() *GetFuturesHistDataLinkV1RespDataInner {
	return v.value
}

func (v *NullableGetFuturesHistDataLinkV1RespDataInner) Set(val *GetFuturesHistDataLinkV1RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetFuturesHistDataLinkV1RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetFuturesHistDataLinkV1RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetFuturesHistDataLinkV1RespDataInner(val *GetFuturesHistDataLinkV1RespDataInner) *NullableGetFuturesHistDataLinkV1RespDataInner {
	return &NullableGetFuturesHistDataLinkV1RespDataInner{value: val, isSet: true}
}

func (v NullableGetFuturesHistDataLinkV1RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetFuturesHistDataLinkV1RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


