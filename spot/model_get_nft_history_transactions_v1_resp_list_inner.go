/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetNftHistoryTransactionsV1RespListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNftHistoryTransactionsV1RespListInner{}

// GetNftHistoryTransactionsV1RespListInner struct for GetNftHistoryTransactionsV1RespListInner
type GetNftHistoryTransactionsV1RespListInner struct {
	OrderNo *string `json:"orderNo,omitempty"`
	Tokens []GetNftHistoryTransactionsV1RespListInnerTokensInner `json:"tokens,omitempty"`
	TradeAmount *string `json:"tradeAmount,omitempty"`
	TradeCurrency *string `json:"tradeCurrency,omitempty"`
	TradeTime *int64 `json:"tradeTime,omitempty"`
}

// NewGetNftHistoryTransactionsV1RespListInner instantiates a new GetNftHistoryTransactionsV1RespListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNftHistoryTransactionsV1RespListInner() *GetNftHistoryTransactionsV1RespListInner {
	this := GetNftHistoryTransactionsV1RespListInner{}
	return &this
}

// NewGetNftHistoryTransactionsV1RespListInnerWithDefaults instantiates a new GetNftHistoryTransactionsV1RespListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNftHistoryTransactionsV1RespListInnerWithDefaults() *GetNftHistoryTransactionsV1RespListInner {
	this := GetNftHistoryTransactionsV1RespListInner{}
	return &this
}

// GetOrderNo returns the OrderNo field value if set, zero value otherwise.
func (o *GetNftHistoryTransactionsV1RespListInner) GetOrderNo() string {
	if o == nil || IsNil(o.OrderNo) {
		var ret string
		return ret
	}
	return *o.OrderNo
}

// GetOrderNoOk returns a tuple with the OrderNo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryTransactionsV1RespListInner) GetOrderNoOk() (*string, bool) {
	if o == nil || IsNil(o.OrderNo) {
		return nil, false
	}
	return o.OrderNo, true
}

// HasOrderNo returns a boolean if a field has been set.
func (o *GetNftHistoryTransactionsV1RespListInner) HasOrderNo() bool {
	if o != nil && !IsNil(o.OrderNo) {
		return true
	}

	return false
}

// SetOrderNo gets a reference to the given string and assigns it to the OrderNo field.
func (o *GetNftHistoryTransactionsV1RespListInner) SetOrderNo(v string) {
	o.OrderNo = &v
}

// GetTokens returns the Tokens field value if set, zero value otherwise.
func (o *GetNftHistoryTransactionsV1RespListInner) GetTokens() []GetNftHistoryTransactionsV1RespListInnerTokensInner {
	if o == nil || IsNil(o.Tokens) {
		var ret []GetNftHistoryTransactionsV1RespListInnerTokensInner
		return ret
	}
	return o.Tokens
}

// GetTokensOk returns a tuple with the Tokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryTransactionsV1RespListInner) GetTokensOk() ([]GetNftHistoryTransactionsV1RespListInnerTokensInner, bool) {
	if o == nil || IsNil(o.Tokens) {
		return nil, false
	}
	return o.Tokens, true
}

// HasTokens returns a boolean if a field has been set.
func (o *GetNftHistoryTransactionsV1RespListInner) HasTokens() bool {
	if o != nil && !IsNil(o.Tokens) {
		return true
	}

	return false
}

// SetTokens gets a reference to the given []GetNftHistoryTransactionsV1RespListInnerTokensInner and assigns it to the Tokens field.
func (o *GetNftHistoryTransactionsV1RespListInner) SetTokens(v []GetNftHistoryTransactionsV1RespListInnerTokensInner) {
	o.Tokens = v
}

// GetTradeAmount returns the TradeAmount field value if set, zero value otherwise.
func (o *GetNftHistoryTransactionsV1RespListInner) GetTradeAmount() string {
	if o == nil || IsNil(o.TradeAmount) {
		var ret string
		return ret
	}
	return *o.TradeAmount
}

// GetTradeAmountOk returns a tuple with the TradeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryTransactionsV1RespListInner) GetTradeAmountOk() (*string, bool) {
	if o == nil || IsNil(o.TradeAmount) {
		return nil, false
	}
	return o.TradeAmount, true
}

// HasTradeAmount returns a boolean if a field has been set.
func (o *GetNftHistoryTransactionsV1RespListInner) HasTradeAmount() bool {
	if o != nil && !IsNil(o.TradeAmount) {
		return true
	}

	return false
}

// SetTradeAmount gets a reference to the given string and assigns it to the TradeAmount field.
func (o *GetNftHistoryTransactionsV1RespListInner) SetTradeAmount(v string) {
	o.TradeAmount = &v
}

// GetTradeCurrency returns the TradeCurrency field value if set, zero value otherwise.
func (o *GetNftHistoryTransactionsV1RespListInner) GetTradeCurrency() string {
	if o == nil || IsNil(o.TradeCurrency) {
		var ret string
		return ret
	}
	return *o.TradeCurrency
}

// GetTradeCurrencyOk returns a tuple with the TradeCurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryTransactionsV1RespListInner) GetTradeCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.TradeCurrency) {
		return nil, false
	}
	return o.TradeCurrency, true
}

// HasTradeCurrency returns a boolean if a field has been set.
func (o *GetNftHistoryTransactionsV1RespListInner) HasTradeCurrency() bool {
	if o != nil && !IsNil(o.TradeCurrency) {
		return true
	}

	return false
}

// SetTradeCurrency gets a reference to the given string and assigns it to the TradeCurrency field.
func (o *GetNftHistoryTransactionsV1RespListInner) SetTradeCurrency(v string) {
	o.TradeCurrency = &v
}

// GetTradeTime returns the TradeTime field value if set, zero value otherwise.
func (o *GetNftHistoryTransactionsV1RespListInner) GetTradeTime() int64 {
	if o == nil || IsNil(o.TradeTime) {
		var ret int64
		return ret
	}
	return *o.TradeTime
}

// GetTradeTimeOk returns a tuple with the TradeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryTransactionsV1RespListInner) GetTradeTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.TradeTime) {
		return nil, false
	}
	return o.TradeTime, true
}

// HasTradeTime returns a boolean if a field has been set.
func (o *GetNftHistoryTransactionsV1RespListInner) HasTradeTime() bool {
	if o != nil && !IsNil(o.TradeTime) {
		return true
	}

	return false
}

// SetTradeTime gets a reference to the given int64 and assigns it to the TradeTime field.
func (o *GetNftHistoryTransactionsV1RespListInner) SetTradeTime(v int64) {
	o.TradeTime = &v
}

func (o GetNftHistoryTransactionsV1RespListInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNftHistoryTransactionsV1RespListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderNo) {
		toSerialize["orderNo"] = o.OrderNo
	}
	if !IsNil(o.Tokens) {
		toSerialize["tokens"] = o.Tokens
	}
	if !IsNil(o.TradeAmount) {
		toSerialize["tradeAmount"] = o.TradeAmount
	}
	if !IsNil(o.TradeCurrency) {
		toSerialize["tradeCurrency"] = o.TradeCurrency
	}
	if !IsNil(o.TradeTime) {
		toSerialize["tradeTime"] = o.TradeTime
	}
	return toSerialize, nil
}

type NullableGetNftHistoryTransactionsV1RespListInner struct {
	value *GetNftHistoryTransactionsV1RespListInner
	isSet bool
}

func (v NullableGetNftHistoryTransactionsV1RespListInner) Get() *GetNftHistoryTransactionsV1RespListInner {
	return v.value
}

func (v *NullableGetNftHistoryTransactionsV1RespListInner) Set(val *GetNftHistoryTransactionsV1RespListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNftHistoryTransactionsV1RespListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNftHistoryTransactionsV1RespListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNftHistoryTransactionsV1RespListInner(val *GetNftHistoryTransactionsV1RespListInner) *NullableGetNftHistoryTransactionsV1RespListInner {
	return &NullableGetNftHistoryTransactionsV1RespListInner{value: val, isSet: true}
}

func (v NullableGetNftHistoryTransactionsV1RespListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNftHistoryTransactionsV1RespListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


