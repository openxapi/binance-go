/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateMarginApiKeyV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateMarginApiKeyV1Resp{}

// CreateMarginApiKeyV1Resp struct for CreateMarginApiKeyV1Resp
type CreateMarginApiKeyV1Resp struct {
	ApiKey *string `json:"apiKey,omitempty"`
	SecretKey *string `json:"secretKey,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewCreateMarginApiKeyV1Resp instantiates a new CreateMarginApiKeyV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMarginApiKeyV1Resp() *CreateMarginApiKeyV1Resp {
	this := CreateMarginApiKeyV1Resp{}
	return &this
}

// NewCreateMarginApiKeyV1RespWithDefaults instantiates a new CreateMarginApiKeyV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMarginApiKeyV1RespWithDefaults() *CreateMarginApiKeyV1Resp {
	this := CreateMarginApiKeyV1Resp{}
	return &this
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *CreateMarginApiKeyV1Resp) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMarginApiKeyV1Resp) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *CreateMarginApiKeyV1Resp) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *CreateMarginApiKeyV1Resp) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *CreateMarginApiKeyV1Resp) GetSecretKey() string {
	if o == nil || IsNil(o.SecretKey) {
		var ret string
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMarginApiKeyV1Resp) GetSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *CreateMarginApiKeyV1Resp) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given string and assigns it to the SecretKey field.
func (o *CreateMarginApiKeyV1Resp) SetSecretKey(v string) {
	o.SecretKey = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateMarginApiKeyV1Resp) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateMarginApiKeyV1Resp) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateMarginApiKeyV1Resp) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CreateMarginApiKeyV1Resp) SetType(v string) {
	o.Type = &v
}

func (o CreateMarginApiKeyV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateMarginApiKeyV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKey) {
		toSerialize["apiKey"] = o.ApiKey
	}
	if !IsNil(o.SecretKey) {
		toSerialize["secretKey"] = o.SecretKey
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableCreateMarginApiKeyV1Resp struct {
	value *CreateMarginApiKeyV1Resp
	isSet bool
}

func (v NullableCreateMarginApiKeyV1Resp) Get() *CreateMarginApiKeyV1Resp {
	return v.value
}

func (v *NullableCreateMarginApiKeyV1Resp) Set(val *CreateMarginApiKeyV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMarginApiKeyV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMarginApiKeyV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMarginApiKeyV1Resp(val *CreateMarginApiKeyV1Resp) *NullableCreateMarginApiKeyV1Resp {
	return &NullableCreateMarginApiKeyV1Resp{value: val, isSet: true}
}

func (v NullableCreateMarginApiKeyV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMarginApiKeyV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


