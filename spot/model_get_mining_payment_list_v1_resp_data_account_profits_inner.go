/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetMiningPaymentListV1RespDataAccountProfitsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMiningPaymentListV1RespDataAccountProfitsInner{}

// GetMiningPaymentListV1RespDataAccountProfitsInner struct for GetMiningPaymentListV1RespDataAccountProfitsInner
type GetMiningPaymentListV1RespDataAccountProfitsInner struct {
	CoinName *string `json:"coinName,omitempty"`
	DayHashRate *int32 `json:"dayHashRate,omitempty"`
	HashTransfer map[string]interface{} `json:"hashTransfer,omitempty"`
	ProfitAmount *float32 `json:"profitAmount,omitempty"`
	Status *int32 `json:"status,omitempty"`
	Time *int64 `json:"time,omitempty"`
	TransferAmount map[string]interface{} `json:"transferAmount,omitempty"`
	Type *int32 `json:"type,omitempty"`
}

// NewGetMiningPaymentListV1RespDataAccountProfitsInner instantiates a new GetMiningPaymentListV1RespDataAccountProfitsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMiningPaymentListV1RespDataAccountProfitsInner() *GetMiningPaymentListV1RespDataAccountProfitsInner {
	this := GetMiningPaymentListV1RespDataAccountProfitsInner{}
	return &this
}

// NewGetMiningPaymentListV1RespDataAccountProfitsInnerWithDefaults instantiates a new GetMiningPaymentListV1RespDataAccountProfitsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMiningPaymentListV1RespDataAccountProfitsInnerWithDefaults() *GetMiningPaymentListV1RespDataAccountProfitsInner {
	this := GetMiningPaymentListV1RespDataAccountProfitsInner{}
	return &this
}

// GetCoinName returns the CoinName field value if set, zero value otherwise.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetCoinName() string {
	if o == nil || IsNil(o.CoinName) {
		var ret string
		return ret
	}
	return *o.CoinName
}

// GetCoinNameOk returns a tuple with the CoinName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetCoinNameOk() (*string, bool) {
	if o == nil || IsNil(o.CoinName) {
		return nil, false
	}
	return o.CoinName, true
}

// HasCoinName returns a boolean if a field has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) HasCoinName() bool {
	if o != nil && !IsNil(o.CoinName) {
		return true
	}

	return false
}

// SetCoinName gets a reference to the given string and assigns it to the CoinName field.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) SetCoinName(v string) {
	o.CoinName = &v
}

// GetDayHashRate returns the DayHashRate field value if set, zero value otherwise.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetDayHashRate() int32 {
	if o == nil || IsNil(o.DayHashRate) {
		var ret int32
		return ret
	}
	return *o.DayHashRate
}

// GetDayHashRateOk returns a tuple with the DayHashRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetDayHashRateOk() (*int32, bool) {
	if o == nil || IsNil(o.DayHashRate) {
		return nil, false
	}
	return o.DayHashRate, true
}

// HasDayHashRate returns a boolean if a field has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) HasDayHashRate() bool {
	if o != nil && !IsNil(o.DayHashRate) {
		return true
	}

	return false
}

// SetDayHashRate gets a reference to the given int32 and assigns it to the DayHashRate field.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) SetDayHashRate(v int32) {
	o.DayHashRate = &v
}

// GetHashTransfer returns the HashTransfer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetHashTransfer() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.HashTransfer
}

// GetHashTransferOk returns a tuple with the HashTransfer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetHashTransferOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.HashTransfer) {
		return map[string]interface{}{}, false
	}
	return o.HashTransfer, true
}

// HasHashTransfer returns a boolean if a field has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) HasHashTransfer() bool {
	if o != nil && !IsNil(o.HashTransfer) {
		return true
	}

	return false
}

// SetHashTransfer gets a reference to the given map[string]interface{} and assigns it to the HashTransfer field.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) SetHashTransfer(v map[string]interface{}) {
	o.HashTransfer = v
}

// GetProfitAmount returns the ProfitAmount field value if set, zero value otherwise.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetProfitAmount() float32 {
	if o == nil || IsNil(o.ProfitAmount) {
		var ret float32
		return ret
	}
	return *o.ProfitAmount
}

// GetProfitAmountOk returns a tuple with the ProfitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetProfitAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ProfitAmount) {
		return nil, false
	}
	return o.ProfitAmount, true
}

// HasProfitAmount returns a boolean if a field has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) HasProfitAmount() bool {
	if o != nil && !IsNil(o.ProfitAmount) {
		return true
	}

	return false
}

// SetProfitAmount gets a reference to the given float32 and assigns it to the ProfitAmount field.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) SetProfitAmount(v float32) {
	o.ProfitAmount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) SetStatus(v int32) {
	o.Status = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) SetTime(v int64) {
	o.Time = &v
}

// GetTransferAmount returns the TransferAmount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetTransferAmount() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.TransferAmount
}

// GetTransferAmountOk returns a tuple with the TransferAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetTransferAmountOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.TransferAmount) {
		return map[string]interface{}{}, false
	}
	return o.TransferAmount, true
}

// HasTransferAmount returns a boolean if a field has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) HasTransferAmount() bool {
	if o != nil && !IsNil(o.TransferAmount) {
		return true
	}

	return false
}

// SetTransferAmount gets a reference to the given map[string]interface{} and assigns it to the TransferAmount field.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) SetTransferAmount(v map[string]interface{}) {
	o.TransferAmount = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *GetMiningPaymentListV1RespDataAccountProfitsInner) SetType(v int32) {
	o.Type = &v
}

func (o GetMiningPaymentListV1RespDataAccountProfitsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMiningPaymentListV1RespDataAccountProfitsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CoinName) {
		toSerialize["coinName"] = o.CoinName
	}
	if !IsNil(o.DayHashRate) {
		toSerialize["dayHashRate"] = o.DayHashRate
	}
	if o.HashTransfer != nil {
		toSerialize["hashTransfer"] = o.HashTransfer
	}
	if !IsNil(o.ProfitAmount) {
		toSerialize["profitAmount"] = o.ProfitAmount
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if o.TransferAmount != nil {
		toSerialize["transferAmount"] = o.TransferAmount
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetMiningPaymentListV1RespDataAccountProfitsInner struct {
	value *GetMiningPaymentListV1RespDataAccountProfitsInner
	isSet bool
}

func (v NullableGetMiningPaymentListV1RespDataAccountProfitsInner) Get() *GetMiningPaymentListV1RespDataAccountProfitsInner {
	return v.value
}

func (v *NullableGetMiningPaymentListV1RespDataAccountProfitsInner) Set(val *GetMiningPaymentListV1RespDataAccountProfitsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMiningPaymentListV1RespDataAccountProfitsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMiningPaymentListV1RespDataAccountProfitsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMiningPaymentListV1RespDataAccountProfitsInner(val *GetMiningPaymentListV1RespDataAccountProfitsInner) *NullableGetMiningPaymentListV1RespDataAccountProfitsInner {
	return &NullableGetMiningPaymentListV1RespDataAccountProfitsInner{value: val, isSet: true}
}

func (v NullableGetMiningPaymentListV1RespDataAccountProfitsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMiningPaymentListV1RespDataAccountProfitsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


