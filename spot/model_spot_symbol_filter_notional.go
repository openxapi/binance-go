/*
Binance Spot API

OpenAPI specification for Binance cryptocurrency exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the SpotSymbolFilterNotional type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotSymbolFilterNotional{}

// SpotSymbolFilterNotional struct for SpotSymbolFilterNotional
type SpotSymbolFilterNotional struct {
	ApplyMaxToMarket *bool `json:"applyMaxToMarket,omitempty"`
	ApplyMinToMarket *bool `json:"applyMinToMarket,omitempty"`
	AvgPriceMins *int32 `json:"avgPriceMins,omitempty"`
	FilterType *string `json:"filterType,omitempty"`
	MaxNotionalValue *string `json:"maxNotionalValue,omitempty"`
	MinNotionalValue *string `json:"minNotionalValue,omitempty"`
}

// NewSpotSymbolFilterNotional instantiates a new SpotSymbolFilterNotional object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotSymbolFilterNotional() *SpotSymbolFilterNotional {
	this := SpotSymbolFilterNotional{}
	return &this
}

// NewSpotSymbolFilterNotionalWithDefaults instantiates a new SpotSymbolFilterNotional object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotSymbolFilterNotionalWithDefaults() *SpotSymbolFilterNotional {
	this := SpotSymbolFilterNotional{}
	return &this
}

// GetApplyMaxToMarket returns the ApplyMaxToMarket field value if set, zero value otherwise.
func (o *SpotSymbolFilterNotional) GetApplyMaxToMarket() bool {
	if o == nil || IsNil(o.ApplyMaxToMarket) {
		var ret bool
		return ret
	}
	return *o.ApplyMaxToMarket
}

// GetApplyMaxToMarketOk returns a tuple with the ApplyMaxToMarket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterNotional) GetApplyMaxToMarketOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplyMaxToMarket) {
		return nil, false
	}
	return o.ApplyMaxToMarket, true
}

// HasApplyMaxToMarket returns a boolean if a field has been set.
func (o *SpotSymbolFilterNotional) HasApplyMaxToMarket() bool {
	if o != nil && !IsNil(o.ApplyMaxToMarket) {
		return true
	}

	return false
}

// SetApplyMaxToMarket gets a reference to the given bool and assigns it to the ApplyMaxToMarket field.
func (o *SpotSymbolFilterNotional) SetApplyMaxToMarket(v bool) {
	o.ApplyMaxToMarket = &v
}

// GetApplyMinToMarket returns the ApplyMinToMarket field value if set, zero value otherwise.
func (o *SpotSymbolFilterNotional) GetApplyMinToMarket() bool {
	if o == nil || IsNil(o.ApplyMinToMarket) {
		var ret bool
		return ret
	}
	return *o.ApplyMinToMarket
}

// GetApplyMinToMarketOk returns a tuple with the ApplyMinToMarket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterNotional) GetApplyMinToMarketOk() (*bool, bool) {
	if o == nil || IsNil(o.ApplyMinToMarket) {
		return nil, false
	}
	return o.ApplyMinToMarket, true
}

// HasApplyMinToMarket returns a boolean if a field has been set.
func (o *SpotSymbolFilterNotional) HasApplyMinToMarket() bool {
	if o != nil && !IsNil(o.ApplyMinToMarket) {
		return true
	}

	return false
}

// SetApplyMinToMarket gets a reference to the given bool and assigns it to the ApplyMinToMarket field.
func (o *SpotSymbolFilterNotional) SetApplyMinToMarket(v bool) {
	o.ApplyMinToMarket = &v
}

// GetAvgPriceMins returns the AvgPriceMins field value if set, zero value otherwise.
func (o *SpotSymbolFilterNotional) GetAvgPriceMins() int32 {
	if o == nil || IsNil(o.AvgPriceMins) {
		var ret int32
		return ret
	}
	return *o.AvgPriceMins
}

// GetAvgPriceMinsOk returns a tuple with the AvgPriceMins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterNotional) GetAvgPriceMinsOk() (*int32, bool) {
	if o == nil || IsNil(o.AvgPriceMins) {
		return nil, false
	}
	return o.AvgPriceMins, true
}

// HasAvgPriceMins returns a boolean if a field has been set.
func (o *SpotSymbolFilterNotional) HasAvgPriceMins() bool {
	if o != nil && !IsNil(o.AvgPriceMins) {
		return true
	}

	return false
}

// SetAvgPriceMins gets a reference to the given int32 and assigns it to the AvgPriceMins field.
func (o *SpotSymbolFilterNotional) SetAvgPriceMins(v int32) {
	o.AvgPriceMins = &v
}

// GetFilterType returns the FilterType field value if set, zero value otherwise.
func (o *SpotSymbolFilterNotional) GetFilterType() string {
	if o == nil || IsNil(o.FilterType) {
		var ret string
		return ret
	}
	return *o.FilterType
}

// GetFilterTypeOk returns a tuple with the FilterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterNotional) GetFilterTypeOk() (*string, bool) {
	if o == nil || IsNil(o.FilterType) {
		return nil, false
	}
	return o.FilterType, true
}

// HasFilterType returns a boolean if a field has been set.
func (o *SpotSymbolFilterNotional) HasFilterType() bool {
	if o != nil && !IsNil(o.FilterType) {
		return true
	}

	return false
}

// SetFilterType gets a reference to the given string and assigns it to the FilterType field.
func (o *SpotSymbolFilterNotional) SetFilterType(v string) {
	o.FilterType = &v
}

// GetMaxNotionalValue returns the MaxNotionalValue field value if set, zero value otherwise.
func (o *SpotSymbolFilterNotional) GetMaxNotionalValue() string {
	if o == nil || IsNil(o.MaxNotionalValue) {
		var ret string
		return ret
	}
	return *o.MaxNotionalValue
}

// GetMaxNotionalValueOk returns a tuple with the MaxNotionalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterNotional) GetMaxNotionalValueOk() (*string, bool) {
	if o == nil || IsNil(o.MaxNotionalValue) {
		return nil, false
	}
	return o.MaxNotionalValue, true
}

// HasMaxNotionalValue returns a boolean if a field has been set.
func (o *SpotSymbolFilterNotional) HasMaxNotionalValue() bool {
	if o != nil && !IsNil(o.MaxNotionalValue) {
		return true
	}

	return false
}

// SetMaxNotionalValue gets a reference to the given string and assigns it to the MaxNotionalValue field.
func (o *SpotSymbolFilterNotional) SetMaxNotionalValue(v string) {
	o.MaxNotionalValue = &v
}

// GetMinNotionalValue returns the MinNotionalValue field value if set, zero value otherwise.
func (o *SpotSymbolFilterNotional) GetMinNotionalValue() string {
	if o == nil || IsNil(o.MinNotionalValue) {
		var ret string
		return ret
	}
	return *o.MinNotionalValue
}

// GetMinNotionalValueOk returns a tuple with the MinNotionalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotSymbolFilterNotional) GetMinNotionalValueOk() (*string, bool) {
	if o == nil || IsNil(o.MinNotionalValue) {
		return nil, false
	}
	return o.MinNotionalValue, true
}

// HasMinNotionalValue returns a boolean if a field has been set.
func (o *SpotSymbolFilterNotional) HasMinNotionalValue() bool {
	if o != nil && !IsNil(o.MinNotionalValue) {
		return true
	}

	return false
}

// SetMinNotionalValue gets a reference to the given string and assigns it to the MinNotionalValue field.
func (o *SpotSymbolFilterNotional) SetMinNotionalValue(v string) {
	o.MinNotionalValue = &v
}

func (o SpotSymbolFilterNotional) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotSymbolFilterNotional) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApplyMaxToMarket) {
		toSerialize["applyMaxToMarket"] = o.ApplyMaxToMarket
	}
	if !IsNil(o.ApplyMinToMarket) {
		toSerialize["applyMinToMarket"] = o.ApplyMinToMarket
	}
	if !IsNil(o.AvgPriceMins) {
		toSerialize["avgPriceMins"] = o.AvgPriceMins
	}
	if !IsNil(o.FilterType) {
		toSerialize["filterType"] = o.FilterType
	}
	if !IsNil(o.MaxNotionalValue) {
		toSerialize["maxNotionalValue"] = o.MaxNotionalValue
	}
	if !IsNil(o.MinNotionalValue) {
		toSerialize["minNotionalValue"] = o.MinNotionalValue
	}
	return toSerialize, nil
}

type NullableSpotSymbolFilterNotional struct {
	value *SpotSymbolFilterNotional
	isSet bool
}

func (v NullableSpotSymbolFilterNotional) Get() *SpotSymbolFilterNotional {
	return v.value
}

func (v *NullableSpotSymbolFilterNotional) Set(val *SpotSymbolFilterNotional) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotSymbolFilterNotional) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotSymbolFilterNotional) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotSymbolFilterNotional(val *SpotSymbolFilterNotional) *NullableSpotSymbolFilterNotional {
	return &NullableSpotSymbolFilterNotional{value: val, isSet: true}
}

func (v NullableSpotSymbolFilterNotional) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotSymbolFilterNotional) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


