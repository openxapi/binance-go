/*
Binance Spot API

OpenAPI specification for Binance cryptocurrency exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the SpotGetExchangeInfoV3RespSorsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotGetExchangeInfoV3RespSorsInner{}

// SpotGetExchangeInfoV3RespSorsInner struct for SpotGetExchangeInfoV3RespSorsInner
type SpotGetExchangeInfoV3RespSorsInner struct {
	BaseAsset *string `json:"baseAsset,omitempty"`
	Symbols []string `json:"symbols,omitempty"`
}

// NewSpotGetExchangeInfoV3RespSorsInner instantiates a new SpotGetExchangeInfoV3RespSorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotGetExchangeInfoV3RespSorsInner() *SpotGetExchangeInfoV3RespSorsInner {
	this := SpotGetExchangeInfoV3RespSorsInner{}
	return &this
}

// NewSpotGetExchangeInfoV3RespSorsInnerWithDefaults instantiates a new SpotGetExchangeInfoV3RespSorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotGetExchangeInfoV3RespSorsInnerWithDefaults() *SpotGetExchangeInfoV3RespSorsInner {
	this := SpotGetExchangeInfoV3RespSorsInner{}
	return &this
}

// GetBaseAsset returns the BaseAsset field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSorsInner) GetBaseAsset() string {
	if o == nil || IsNil(o.BaseAsset) {
		var ret string
		return ret
	}
	return *o.BaseAsset
}

// GetBaseAssetOk returns a tuple with the BaseAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSorsInner) GetBaseAssetOk() (*string, bool) {
	if o == nil || IsNil(o.BaseAsset) {
		return nil, false
	}
	return o.BaseAsset, true
}

// HasBaseAsset returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSorsInner) HasBaseAsset() bool {
	if o != nil && !IsNil(o.BaseAsset) {
		return true
	}

	return false
}

// SetBaseAsset gets a reference to the given string and assigns it to the BaseAsset field.
func (o *SpotGetExchangeInfoV3RespSorsInner) SetBaseAsset(v string) {
	o.BaseAsset = &v
}

// GetSymbols returns the Symbols field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSorsInner) GetSymbols() []string {
	if o == nil || IsNil(o.Symbols) {
		var ret []string
		return ret
	}
	return o.Symbols
}

// GetSymbolsOk returns a tuple with the Symbols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSorsInner) GetSymbolsOk() ([]string, bool) {
	if o == nil || IsNil(o.Symbols) {
		return nil, false
	}
	return o.Symbols, true
}

// HasSymbols returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSorsInner) HasSymbols() bool {
	if o != nil && !IsNil(o.Symbols) {
		return true
	}

	return false
}

// SetSymbols gets a reference to the given []string and assigns it to the Symbols field.
func (o *SpotGetExchangeInfoV3RespSorsInner) SetSymbols(v []string) {
	o.Symbols = v
}

func (o SpotGetExchangeInfoV3RespSorsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotGetExchangeInfoV3RespSorsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseAsset) {
		toSerialize["baseAsset"] = o.BaseAsset
	}
	if !IsNil(o.Symbols) {
		toSerialize["symbols"] = o.Symbols
	}
	return toSerialize, nil
}

type NullableSpotGetExchangeInfoV3RespSorsInner struct {
	value *SpotGetExchangeInfoV3RespSorsInner
	isSet bool
}

func (v NullableSpotGetExchangeInfoV3RespSorsInner) Get() *SpotGetExchangeInfoV3RespSorsInner {
	return v.value
}

func (v *NullableSpotGetExchangeInfoV3RespSorsInner) Set(val *SpotGetExchangeInfoV3RespSorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotGetExchangeInfoV3RespSorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotGetExchangeInfoV3RespSorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotGetExchangeInfoV3RespSorsInner(val *SpotGetExchangeInfoV3RespSorsInner) *NullableSpotGetExchangeInfoV3RespSorsInner {
	return &NullableSpotGetExchangeInfoV3RespSorsInner{value: val, isSet: true}
}

func (v NullableSpotGetExchangeInfoV3RespSorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotGetExchangeInfoV3RespSorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


