/*
Binance Spot API

OpenAPI specification for Binance cryptocurrency exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner - struct for SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
type SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner struct {
	SpotSymbolFilterIcebergParts *SpotSymbolFilterIcebergParts
	SpotSymbolFilterLotSize *SpotSymbolFilterLotSize
	SpotSymbolFilterMarketLotSize *SpotSymbolFilterMarketLotSize
	SpotSymbolFilterMaxNumAlgoOrders *SpotSymbolFilterMaxNumAlgoOrders
	SpotSymbolFilterMaxNumIcebergOrders *SpotSymbolFilterMaxNumIcebergOrders
	SpotSymbolFilterMaxNumOrders *SpotSymbolFilterMaxNumOrders
	SpotSymbolFilterMaxPosition *SpotSymbolFilterMaxPosition
	SpotSymbolFilterMinNotional *SpotSymbolFilterMinNotional
	SpotSymbolFilterNotional *SpotSymbolFilterNotional
	SpotSymbolFilterPercentPrice *SpotSymbolFilterPercentPrice
	SpotSymbolFilterPercentPriceBySide *SpotSymbolFilterPercentPriceBySide
	SpotSymbolFilterPriceFilter *SpotSymbolFilterPriceFilter
	SpotSymbolFilterTrailingDelta *SpotSymbolFilterTrailingDelta
}

// SpotSymbolFilterIcebergPartsAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterIcebergParts wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterIcebergPartsAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterIcebergParts) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterIcebergParts: v,
	}
}

// SpotSymbolFilterLotSizeAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterLotSize wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterLotSizeAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterLotSize) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterLotSize: v,
	}
}

// SpotSymbolFilterMarketLotSizeAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterMarketLotSize wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterMarketLotSizeAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterMarketLotSize) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterMarketLotSize: v,
	}
}

// SpotSymbolFilterMaxNumAlgoOrdersAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterMaxNumAlgoOrders wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterMaxNumAlgoOrdersAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterMaxNumAlgoOrders) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterMaxNumAlgoOrders: v,
	}
}

// SpotSymbolFilterMaxNumIcebergOrdersAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterMaxNumIcebergOrders wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterMaxNumIcebergOrdersAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterMaxNumIcebergOrders) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterMaxNumIcebergOrders: v,
	}
}

// SpotSymbolFilterMaxNumOrdersAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterMaxNumOrders wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterMaxNumOrdersAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterMaxNumOrders) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterMaxNumOrders: v,
	}
}

// SpotSymbolFilterMaxPositionAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterMaxPosition wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterMaxPositionAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterMaxPosition) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterMaxPosition: v,
	}
}

// SpotSymbolFilterMinNotionalAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterMinNotional wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterMinNotionalAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterMinNotional) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterMinNotional: v,
	}
}

// SpotSymbolFilterNotionalAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterNotional wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterNotionalAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterNotional) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterNotional: v,
	}
}

// SpotSymbolFilterPercentPriceAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterPercentPrice wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterPercentPriceAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterPercentPrice) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterPercentPrice: v,
	}
}

// SpotSymbolFilterPercentPriceBySideAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterPercentPriceBySide wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterPercentPriceBySideAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterPercentPriceBySide) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterPercentPriceBySide: v,
	}
}

// SpotSymbolFilterPriceFilterAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterPriceFilter wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterPriceFilterAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterPriceFilter) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterPriceFilter: v,
	}
}

// SpotSymbolFilterTrailingDeltaAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner is a convenience function that returns SpotSymbolFilterTrailingDelta wrapped in SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
func SpotSymbolFilterTrailingDeltaAsSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(v *SpotSymbolFilterTrailingDelta) SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{
		SpotSymbolFilterTrailingDelta: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into SpotSymbolFilterIcebergParts
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterIcebergParts)
	if err == nil {
		jsonSpotSymbolFilterIcebergParts, _ := json.Marshal(dst.SpotSymbolFilterIcebergParts)
		if string(jsonSpotSymbolFilterIcebergParts) == "{}" { // empty struct
			dst.SpotSymbolFilterIcebergParts = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterIcebergParts); err != nil {
				dst.SpotSymbolFilterIcebergParts = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterIcebergParts = nil
	}

	// try to unmarshal data into SpotSymbolFilterLotSize
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterLotSize)
	if err == nil {
		jsonSpotSymbolFilterLotSize, _ := json.Marshal(dst.SpotSymbolFilterLotSize)
		if string(jsonSpotSymbolFilterLotSize) == "{}" { // empty struct
			dst.SpotSymbolFilterLotSize = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterLotSize); err != nil {
				dst.SpotSymbolFilterLotSize = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterLotSize = nil
	}

	// try to unmarshal data into SpotSymbolFilterMarketLotSize
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterMarketLotSize)
	if err == nil {
		jsonSpotSymbolFilterMarketLotSize, _ := json.Marshal(dst.SpotSymbolFilterMarketLotSize)
		if string(jsonSpotSymbolFilterMarketLotSize) == "{}" { // empty struct
			dst.SpotSymbolFilterMarketLotSize = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterMarketLotSize); err != nil {
				dst.SpotSymbolFilterMarketLotSize = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterMarketLotSize = nil
	}

	// try to unmarshal data into SpotSymbolFilterMaxNumAlgoOrders
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterMaxNumAlgoOrders)
	if err == nil {
		jsonSpotSymbolFilterMaxNumAlgoOrders, _ := json.Marshal(dst.SpotSymbolFilterMaxNumAlgoOrders)
		if string(jsonSpotSymbolFilterMaxNumAlgoOrders) == "{}" { // empty struct
			dst.SpotSymbolFilterMaxNumAlgoOrders = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterMaxNumAlgoOrders); err != nil {
				dst.SpotSymbolFilterMaxNumAlgoOrders = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterMaxNumAlgoOrders = nil
	}

	// try to unmarshal data into SpotSymbolFilterMaxNumIcebergOrders
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterMaxNumIcebergOrders)
	if err == nil {
		jsonSpotSymbolFilterMaxNumIcebergOrders, _ := json.Marshal(dst.SpotSymbolFilterMaxNumIcebergOrders)
		if string(jsonSpotSymbolFilterMaxNumIcebergOrders) == "{}" { // empty struct
			dst.SpotSymbolFilterMaxNumIcebergOrders = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterMaxNumIcebergOrders); err != nil {
				dst.SpotSymbolFilterMaxNumIcebergOrders = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterMaxNumIcebergOrders = nil
	}

	// try to unmarshal data into SpotSymbolFilterMaxNumOrders
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterMaxNumOrders)
	if err == nil {
		jsonSpotSymbolFilterMaxNumOrders, _ := json.Marshal(dst.SpotSymbolFilterMaxNumOrders)
		if string(jsonSpotSymbolFilterMaxNumOrders) == "{}" { // empty struct
			dst.SpotSymbolFilterMaxNumOrders = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterMaxNumOrders); err != nil {
				dst.SpotSymbolFilterMaxNumOrders = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterMaxNumOrders = nil
	}

	// try to unmarshal data into SpotSymbolFilterMaxPosition
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterMaxPosition)
	if err == nil {
		jsonSpotSymbolFilterMaxPosition, _ := json.Marshal(dst.SpotSymbolFilterMaxPosition)
		if string(jsonSpotSymbolFilterMaxPosition) == "{}" { // empty struct
			dst.SpotSymbolFilterMaxPosition = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterMaxPosition); err != nil {
				dst.SpotSymbolFilterMaxPosition = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterMaxPosition = nil
	}

	// try to unmarshal data into SpotSymbolFilterMinNotional
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterMinNotional)
	if err == nil {
		jsonSpotSymbolFilterMinNotional, _ := json.Marshal(dst.SpotSymbolFilterMinNotional)
		if string(jsonSpotSymbolFilterMinNotional) == "{}" { // empty struct
			dst.SpotSymbolFilterMinNotional = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterMinNotional); err != nil {
				dst.SpotSymbolFilterMinNotional = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterMinNotional = nil
	}

	// try to unmarshal data into SpotSymbolFilterNotional
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterNotional)
	if err == nil {
		jsonSpotSymbolFilterNotional, _ := json.Marshal(dst.SpotSymbolFilterNotional)
		if string(jsonSpotSymbolFilterNotional) == "{}" { // empty struct
			dst.SpotSymbolFilterNotional = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterNotional); err != nil {
				dst.SpotSymbolFilterNotional = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterNotional = nil
	}

	// try to unmarshal data into SpotSymbolFilterPercentPrice
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterPercentPrice)
	if err == nil {
		jsonSpotSymbolFilterPercentPrice, _ := json.Marshal(dst.SpotSymbolFilterPercentPrice)
		if string(jsonSpotSymbolFilterPercentPrice) == "{}" { // empty struct
			dst.SpotSymbolFilterPercentPrice = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterPercentPrice); err != nil {
				dst.SpotSymbolFilterPercentPrice = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterPercentPrice = nil
	}

	// try to unmarshal data into SpotSymbolFilterPercentPriceBySide
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterPercentPriceBySide)
	if err == nil {
		jsonSpotSymbolFilterPercentPriceBySide, _ := json.Marshal(dst.SpotSymbolFilterPercentPriceBySide)
		if string(jsonSpotSymbolFilterPercentPriceBySide) == "{}" { // empty struct
			dst.SpotSymbolFilterPercentPriceBySide = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterPercentPriceBySide); err != nil {
				dst.SpotSymbolFilterPercentPriceBySide = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterPercentPriceBySide = nil
	}

	// try to unmarshal data into SpotSymbolFilterPriceFilter
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterPriceFilter)
	if err == nil {
		jsonSpotSymbolFilterPriceFilter, _ := json.Marshal(dst.SpotSymbolFilterPriceFilter)
		if string(jsonSpotSymbolFilterPriceFilter) == "{}" { // empty struct
			dst.SpotSymbolFilterPriceFilter = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterPriceFilter); err != nil {
				dst.SpotSymbolFilterPriceFilter = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterPriceFilter = nil
	}

	// try to unmarshal data into SpotSymbolFilterTrailingDelta
	err = newStrictDecoder(data).Decode(&dst.SpotSymbolFilterTrailingDelta)
	if err == nil {
		jsonSpotSymbolFilterTrailingDelta, _ := json.Marshal(dst.SpotSymbolFilterTrailingDelta)
		if string(jsonSpotSymbolFilterTrailingDelta) == "{}" { // empty struct
			dst.SpotSymbolFilterTrailingDelta = nil
		} else {
			if err = validator.Validate(dst.SpotSymbolFilterTrailingDelta); err != nil {
				dst.SpotSymbolFilterTrailingDelta = nil
			} else {
				match++
			}
		}
	} else {
		dst.SpotSymbolFilterTrailingDelta = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.SpotSymbolFilterIcebergParts = nil
		dst.SpotSymbolFilterLotSize = nil
		dst.SpotSymbolFilterMarketLotSize = nil
		dst.SpotSymbolFilterMaxNumAlgoOrders = nil
		dst.SpotSymbolFilterMaxNumIcebergOrders = nil
		dst.SpotSymbolFilterMaxNumOrders = nil
		dst.SpotSymbolFilterMaxPosition = nil
		dst.SpotSymbolFilterMinNotional = nil
		dst.SpotSymbolFilterNotional = nil
		dst.SpotSymbolFilterPercentPrice = nil
		dst.SpotSymbolFilterPercentPriceBySide = nil
		dst.SpotSymbolFilterPriceFilter = nil
		dst.SpotSymbolFilterTrailingDelta = nil

		return fmt.Errorf("data matches more than one schema in oneOf(SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner) MarshalJSON() ([]byte, error) {
	if src.SpotSymbolFilterIcebergParts != nil {
		return json.Marshal(&src.SpotSymbolFilterIcebergParts)
	}

	if src.SpotSymbolFilterLotSize != nil {
		return json.Marshal(&src.SpotSymbolFilterLotSize)
	}

	if src.SpotSymbolFilterMarketLotSize != nil {
		return json.Marshal(&src.SpotSymbolFilterMarketLotSize)
	}

	if src.SpotSymbolFilterMaxNumAlgoOrders != nil {
		return json.Marshal(&src.SpotSymbolFilterMaxNumAlgoOrders)
	}

	if src.SpotSymbolFilterMaxNumIcebergOrders != nil {
		return json.Marshal(&src.SpotSymbolFilterMaxNumIcebergOrders)
	}

	if src.SpotSymbolFilterMaxNumOrders != nil {
		return json.Marshal(&src.SpotSymbolFilterMaxNumOrders)
	}

	if src.SpotSymbolFilterMaxPosition != nil {
		return json.Marshal(&src.SpotSymbolFilterMaxPosition)
	}

	if src.SpotSymbolFilterMinNotional != nil {
		return json.Marshal(&src.SpotSymbolFilterMinNotional)
	}

	if src.SpotSymbolFilterNotional != nil {
		return json.Marshal(&src.SpotSymbolFilterNotional)
	}

	if src.SpotSymbolFilterPercentPrice != nil {
		return json.Marshal(&src.SpotSymbolFilterPercentPrice)
	}

	if src.SpotSymbolFilterPercentPriceBySide != nil {
		return json.Marshal(&src.SpotSymbolFilterPercentPriceBySide)
	}

	if src.SpotSymbolFilterPriceFilter != nil {
		return json.Marshal(&src.SpotSymbolFilterPriceFilter)
	}

	if src.SpotSymbolFilterTrailingDelta != nil {
		return json.Marshal(&src.SpotSymbolFilterTrailingDelta)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.SpotSymbolFilterIcebergParts != nil {
		return obj.SpotSymbolFilterIcebergParts
	}

	if obj.SpotSymbolFilterLotSize != nil {
		return obj.SpotSymbolFilterLotSize
	}

	if obj.SpotSymbolFilterMarketLotSize != nil {
		return obj.SpotSymbolFilterMarketLotSize
	}

	if obj.SpotSymbolFilterMaxNumAlgoOrders != nil {
		return obj.SpotSymbolFilterMaxNumAlgoOrders
	}

	if obj.SpotSymbolFilterMaxNumIcebergOrders != nil {
		return obj.SpotSymbolFilterMaxNumIcebergOrders
	}

	if obj.SpotSymbolFilterMaxNumOrders != nil {
		return obj.SpotSymbolFilterMaxNumOrders
	}

	if obj.SpotSymbolFilterMaxPosition != nil {
		return obj.SpotSymbolFilterMaxPosition
	}

	if obj.SpotSymbolFilterMinNotional != nil {
		return obj.SpotSymbolFilterMinNotional
	}

	if obj.SpotSymbolFilterNotional != nil {
		return obj.SpotSymbolFilterNotional
	}

	if obj.SpotSymbolFilterPercentPrice != nil {
		return obj.SpotSymbolFilterPercentPrice
	}

	if obj.SpotSymbolFilterPercentPriceBySide != nil {
		return obj.SpotSymbolFilterPercentPriceBySide
	}

	if obj.SpotSymbolFilterPriceFilter != nil {
		return obj.SpotSymbolFilterPriceFilter
	}

	if obj.SpotSymbolFilterTrailingDelta != nil {
		return obj.SpotSymbolFilterTrailingDelta
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner) GetActualInstanceValue() (interface{}) {
	if obj.SpotSymbolFilterIcebergParts != nil {
		return *obj.SpotSymbolFilterIcebergParts
	}

	if obj.SpotSymbolFilterLotSize != nil {
		return *obj.SpotSymbolFilterLotSize
	}

	if obj.SpotSymbolFilterMarketLotSize != nil {
		return *obj.SpotSymbolFilterMarketLotSize
	}

	if obj.SpotSymbolFilterMaxNumAlgoOrders != nil {
		return *obj.SpotSymbolFilterMaxNumAlgoOrders
	}

	if obj.SpotSymbolFilterMaxNumIcebergOrders != nil {
		return *obj.SpotSymbolFilterMaxNumIcebergOrders
	}

	if obj.SpotSymbolFilterMaxNumOrders != nil {
		return *obj.SpotSymbolFilterMaxNumOrders
	}

	if obj.SpotSymbolFilterMaxPosition != nil {
		return *obj.SpotSymbolFilterMaxPosition
	}

	if obj.SpotSymbolFilterMinNotional != nil {
		return *obj.SpotSymbolFilterMinNotional
	}

	if obj.SpotSymbolFilterNotional != nil {
		return *obj.SpotSymbolFilterNotional
	}

	if obj.SpotSymbolFilterPercentPrice != nil {
		return *obj.SpotSymbolFilterPercentPrice
	}

	if obj.SpotSymbolFilterPercentPriceBySide != nil {
		return *obj.SpotSymbolFilterPercentPriceBySide
	}

	if obj.SpotSymbolFilterPriceFilter != nil {
		return *obj.SpotSymbolFilterPriceFilter
	}

	if obj.SpotSymbolFilterTrailingDelta != nil {
		return *obj.SpotSymbolFilterTrailingDelta
	}

	// all schemas are nil
	return nil
}

type NullableSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner struct {
	value *SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner
	isSet bool
}

func (v NullableSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner) Get() *SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return v.value
}

func (v *NullableSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner) Set(val *SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner(val *SpotGetExchangeInfoV3RespSymbolsInnerFiltersInner) *NullableSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner {
	return &NullableSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner{value: val, isSet: true}
}

func (v NullableSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotGetExchangeInfoV3RespSymbolsInnerFiltersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


