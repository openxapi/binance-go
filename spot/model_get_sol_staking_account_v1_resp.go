/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetSolStakingAccountV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSolStakingAccountV1Resp{}

// GetSolStakingAccountV1Resp struct for GetSolStakingAccountV1Resp
type GetSolStakingAccountV1Resp struct {
	BnsolAmount *string `json:"bnsolAmount,omitempty"`
	HoldingInSOL *string `json:"holdingInSOL,omitempty"`
	ThirtyDaysProfitInSOL *string `json:"thirtyDaysProfitInSOL,omitempty"`
}

// NewGetSolStakingAccountV1Resp instantiates a new GetSolStakingAccountV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSolStakingAccountV1Resp() *GetSolStakingAccountV1Resp {
	this := GetSolStakingAccountV1Resp{}
	return &this
}

// NewGetSolStakingAccountV1RespWithDefaults instantiates a new GetSolStakingAccountV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSolStakingAccountV1RespWithDefaults() *GetSolStakingAccountV1Resp {
	this := GetSolStakingAccountV1Resp{}
	return &this
}

// GetBnsolAmount returns the BnsolAmount field value if set, zero value otherwise.
func (o *GetSolStakingAccountV1Resp) GetBnsolAmount() string {
	if o == nil || IsNil(o.BnsolAmount) {
		var ret string
		return ret
	}
	return *o.BnsolAmount
}

// GetBnsolAmountOk returns a tuple with the BnsolAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingAccountV1Resp) GetBnsolAmountOk() (*string, bool) {
	if o == nil || IsNil(o.BnsolAmount) {
		return nil, false
	}
	return o.BnsolAmount, true
}

// HasBnsolAmount returns a boolean if a field has been set.
func (o *GetSolStakingAccountV1Resp) HasBnsolAmount() bool {
	if o != nil && !IsNil(o.BnsolAmount) {
		return true
	}

	return false
}

// SetBnsolAmount gets a reference to the given string and assigns it to the BnsolAmount field.
func (o *GetSolStakingAccountV1Resp) SetBnsolAmount(v string) {
	o.BnsolAmount = &v
}

// GetHoldingInSOL returns the HoldingInSOL field value if set, zero value otherwise.
func (o *GetSolStakingAccountV1Resp) GetHoldingInSOL() string {
	if o == nil || IsNil(o.HoldingInSOL) {
		var ret string
		return ret
	}
	return *o.HoldingInSOL
}

// GetHoldingInSOLOk returns a tuple with the HoldingInSOL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingAccountV1Resp) GetHoldingInSOLOk() (*string, bool) {
	if o == nil || IsNil(o.HoldingInSOL) {
		return nil, false
	}
	return o.HoldingInSOL, true
}

// HasHoldingInSOL returns a boolean if a field has been set.
func (o *GetSolStakingAccountV1Resp) HasHoldingInSOL() bool {
	if o != nil && !IsNil(o.HoldingInSOL) {
		return true
	}

	return false
}

// SetHoldingInSOL gets a reference to the given string and assigns it to the HoldingInSOL field.
func (o *GetSolStakingAccountV1Resp) SetHoldingInSOL(v string) {
	o.HoldingInSOL = &v
}

// GetThirtyDaysProfitInSOL returns the ThirtyDaysProfitInSOL field value if set, zero value otherwise.
func (o *GetSolStakingAccountV1Resp) GetThirtyDaysProfitInSOL() string {
	if o == nil || IsNil(o.ThirtyDaysProfitInSOL) {
		var ret string
		return ret
	}
	return *o.ThirtyDaysProfitInSOL
}

// GetThirtyDaysProfitInSOLOk returns a tuple with the ThirtyDaysProfitInSOL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingAccountV1Resp) GetThirtyDaysProfitInSOLOk() (*string, bool) {
	if o == nil || IsNil(o.ThirtyDaysProfitInSOL) {
		return nil, false
	}
	return o.ThirtyDaysProfitInSOL, true
}

// HasThirtyDaysProfitInSOL returns a boolean if a field has been set.
func (o *GetSolStakingAccountV1Resp) HasThirtyDaysProfitInSOL() bool {
	if o != nil && !IsNil(o.ThirtyDaysProfitInSOL) {
		return true
	}

	return false
}

// SetThirtyDaysProfitInSOL gets a reference to the given string and assigns it to the ThirtyDaysProfitInSOL field.
func (o *GetSolStakingAccountV1Resp) SetThirtyDaysProfitInSOL(v string) {
	o.ThirtyDaysProfitInSOL = &v
}

func (o GetSolStakingAccountV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSolStakingAccountV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BnsolAmount) {
		toSerialize["bnsolAmount"] = o.BnsolAmount
	}
	if !IsNil(o.HoldingInSOL) {
		toSerialize["holdingInSOL"] = o.HoldingInSOL
	}
	if !IsNil(o.ThirtyDaysProfitInSOL) {
		toSerialize["thirtyDaysProfitInSOL"] = o.ThirtyDaysProfitInSOL
	}
	return toSerialize, nil
}

type NullableGetSolStakingAccountV1Resp struct {
	value *GetSolStakingAccountV1Resp
	isSet bool
}

func (v NullableGetSolStakingAccountV1Resp) Get() *GetSolStakingAccountV1Resp {
	return v.value
}

func (v *NullableGetSolStakingAccountV1Resp) Set(val *GetSolStakingAccountV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSolStakingAccountV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSolStakingAccountV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSolStakingAccountV1Resp(val *GetSolStakingAccountV1Resp) *NullableGetSolStakingAccountV1Resp {
	return &NullableGetSolStakingAccountV1Resp{value: val, isSet: true}
}

func (v NullableGetSolStakingAccountV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSolStakingAccountV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


