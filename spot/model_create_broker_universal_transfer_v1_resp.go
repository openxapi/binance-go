/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateBrokerUniversalTransferV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBrokerUniversalTransferV1Resp{}

// CreateBrokerUniversalTransferV1Resp struct for CreateBrokerUniversalTransferV1Resp
type CreateBrokerUniversalTransferV1Resp struct {
	ClientTranId *string `json:"clientTranId,omitempty"`
	TxnId *int64 `json:"txnId,omitempty"`
}

// NewCreateBrokerUniversalTransferV1Resp instantiates a new CreateBrokerUniversalTransferV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBrokerUniversalTransferV1Resp() *CreateBrokerUniversalTransferV1Resp {
	this := CreateBrokerUniversalTransferV1Resp{}
	return &this
}

// NewCreateBrokerUniversalTransferV1RespWithDefaults instantiates a new CreateBrokerUniversalTransferV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBrokerUniversalTransferV1RespWithDefaults() *CreateBrokerUniversalTransferV1Resp {
	this := CreateBrokerUniversalTransferV1Resp{}
	return &this
}

// GetClientTranId returns the ClientTranId field value if set, zero value otherwise.
func (o *CreateBrokerUniversalTransferV1Resp) GetClientTranId() string {
	if o == nil || IsNil(o.ClientTranId) {
		var ret string
		return ret
	}
	return *o.ClientTranId
}

// GetClientTranIdOk returns a tuple with the ClientTranId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerUniversalTransferV1Resp) GetClientTranIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientTranId) {
		return nil, false
	}
	return o.ClientTranId, true
}

// HasClientTranId returns a boolean if a field has been set.
func (o *CreateBrokerUniversalTransferV1Resp) HasClientTranId() bool {
	if o != nil && !IsNil(o.ClientTranId) {
		return true
	}

	return false
}

// SetClientTranId gets a reference to the given string and assigns it to the ClientTranId field.
func (o *CreateBrokerUniversalTransferV1Resp) SetClientTranId(v string) {
	o.ClientTranId = &v
}

// GetTxnId returns the TxnId field value if set, zero value otherwise.
func (o *CreateBrokerUniversalTransferV1Resp) GetTxnId() int64 {
	if o == nil || IsNil(o.TxnId) {
		var ret int64
		return ret
	}
	return *o.TxnId
}

// GetTxnIdOk returns a tuple with the TxnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerUniversalTransferV1Resp) GetTxnIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TxnId) {
		return nil, false
	}
	return o.TxnId, true
}

// HasTxnId returns a boolean if a field has been set.
func (o *CreateBrokerUniversalTransferV1Resp) HasTxnId() bool {
	if o != nil && !IsNil(o.TxnId) {
		return true
	}

	return false
}

// SetTxnId gets a reference to the given int64 and assigns it to the TxnId field.
func (o *CreateBrokerUniversalTransferV1Resp) SetTxnId(v int64) {
	o.TxnId = &v
}

func (o CreateBrokerUniversalTransferV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBrokerUniversalTransferV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientTranId) {
		toSerialize["clientTranId"] = o.ClientTranId
	}
	if !IsNil(o.TxnId) {
		toSerialize["txnId"] = o.TxnId
	}
	return toSerialize, nil
}

type NullableCreateBrokerUniversalTransferV1Resp struct {
	value *CreateBrokerUniversalTransferV1Resp
	isSet bool
}

func (v NullableCreateBrokerUniversalTransferV1Resp) Get() *CreateBrokerUniversalTransferV1Resp {
	return v.value
}

func (v *NullableCreateBrokerUniversalTransferV1Resp) Set(val *CreateBrokerUniversalTransferV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBrokerUniversalTransferV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBrokerUniversalTransferV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBrokerUniversalTransferV1Resp(val *CreateBrokerUniversalTransferV1Resp) *NullableCreateBrokerUniversalTransferV1Resp {
	return &NullableCreateBrokerUniversalTransferV1Resp{value: val, isSet: true}
}

func (v NullableCreateBrokerUniversalTransferV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBrokerUniversalTransferV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


