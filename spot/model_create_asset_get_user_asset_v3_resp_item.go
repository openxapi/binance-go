/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateAssetGetUserAssetV3RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAssetGetUserAssetV3RespItem{}

// CreateAssetGetUserAssetV3RespItem struct for CreateAssetGetUserAssetV3RespItem
type CreateAssetGetUserAssetV3RespItem struct {
	Asset *string `json:"asset,omitempty"`
	BtcValuation *string `json:"btcValuation,omitempty"`
	Free *string `json:"free,omitempty"`
	Freeze *string `json:"freeze,omitempty"`
	Ipoable *string `json:"ipoable,omitempty"`
	Locked *string `json:"locked,omitempty"`
	Withdrawing *string `json:"withdrawing,omitempty"`
}

// NewCreateAssetGetUserAssetV3RespItem instantiates a new CreateAssetGetUserAssetV3RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetGetUserAssetV3RespItem() *CreateAssetGetUserAssetV3RespItem {
	this := CreateAssetGetUserAssetV3RespItem{}
	return &this
}

// NewCreateAssetGetUserAssetV3RespItemWithDefaults instantiates a new CreateAssetGetUserAssetV3RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetGetUserAssetV3RespItemWithDefaults() *CreateAssetGetUserAssetV3RespItem {
	this := CreateAssetGetUserAssetV3RespItem{}
	return &this
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *CreateAssetGetUserAssetV3RespItem) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetGetUserAssetV3RespItem) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *CreateAssetGetUserAssetV3RespItem) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *CreateAssetGetUserAssetV3RespItem) SetAsset(v string) {
	o.Asset = &v
}

// GetBtcValuation returns the BtcValuation field value if set, zero value otherwise.
func (o *CreateAssetGetUserAssetV3RespItem) GetBtcValuation() string {
	if o == nil || IsNil(o.BtcValuation) {
		var ret string
		return ret
	}
	return *o.BtcValuation
}

// GetBtcValuationOk returns a tuple with the BtcValuation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetGetUserAssetV3RespItem) GetBtcValuationOk() (*string, bool) {
	if o == nil || IsNil(o.BtcValuation) {
		return nil, false
	}
	return o.BtcValuation, true
}

// HasBtcValuation returns a boolean if a field has been set.
func (o *CreateAssetGetUserAssetV3RespItem) HasBtcValuation() bool {
	if o != nil && !IsNil(o.BtcValuation) {
		return true
	}

	return false
}

// SetBtcValuation gets a reference to the given string and assigns it to the BtcValuation field.
func (o *CreateAssetGetUserAssetV3RespItem) SetBtcValuation(v string) {
	o.BtcValuation = &v
}

// GetFree returns the Free field value if set, zero value otherwise.
func (o *CreateAssetGetUserAssetV3RespItem) GetFree() string {
	if o == nil || IsNil(o.Free) {
		var ret string
		return ret
	}
	return *o.Free
}

// GetFreeOk returns a tuple with the Free field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetGetUserAssetV3RespItem) GetFreeOk() (*string, bool) {
	if o == nil || IsNil(o.Free) {
		return nil, false
	}
	return o.Free, true
}

// HasFree returns a boolean if a field has been set.
func (o *CreateAssetGetUserAssetV3RespItem) HasFree() bool {
	if o != nil && !IsNil(o.Free) {
		return true
	}

	return false
}

// SetFree gets a reference to the given string and assigns it to the Free field.
func (o *CreateAssetGetUserAssetV3RespItem) SetFree(v string) {
	o.Free = &v
}

// GetFreeze returns the Freeze field value if set, zero value otherwise.
func (o *CreateAssetGetUserAssetV3RespItem) GetFreeze() string {
	if o == nil || IsNil(o.Freeze) {
		var ret string
		return ret
	}
	return *o.Freeze
}

// GetFreezeOk returns a tuple with the Freeze field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetGetUserAssetV3RespItem) GetFreezeOk() (*string, bool) {
	if o == nil || IsNil(o.Freeze) {
		return nil, false
	}
	return o.Freeze, true
}

// HasFreeze returns a boolean if a field has been set.
func (o *CreateAssetGetUserAssetV3RespItem) HasFreeze() bool {
	if o != nil && !IsNil(o.Freeze) {
		return true
	}

	return false
}

// SetFreeze gets a reference to the given string and assigns it to the Freeze field.
func (o *CreateAssetGetUserAssetV3RespItem) SetFreeze(v string) {
	o.Freeze = &v
}

// GetIpoable returns the Ipoable field value if set, zero value otherwise.
func (o *CreateAssetGetUserAssetV3RespItem) GetIpoable() string {
	if o == nil || IsNil(o.Ipoable) {
		var ret string
		return ret
	}
	return *o.Ipoable
}

// GetIpoableOk returns a tuple with the Ipoable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetGetUserAssetV3RespItem) GetIpoableOk() (*string, bool) {
	if o == nil || IsNil(o.Ipoable) {
		return nil, false
	}
	return o.Ipoable, true
}

// HasIpoable returns a boolean if a field has been set.
func (o *CreateAssetGetUserAssetV3RespItem) HasIpoable() bool {
	if o != nil && !IsNil(o.Ipoable) {
		return true
	}

	return false
}

// SetIpoable gets a reference to the given string and assigns it to the Ipoable field.
func (o *CreateAssetGetUserAssetV3RespItem) SetIpoable(v string) {
	o.Ipoable = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *CreateAssetGetUserAssetV3RespItem) GetLocked() string {
	if o == nil || IsNil(o.Locked) {
		var ret string
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetGetUserAssetV3RespItem) GetLockedOk() (*string, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *CreateAssetGetUserAssetV3RespItem) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given string and assigns it to the Locked field.
func (o *CreateAssetGetUserAssetV3RespItem) SetLocked(v string) {
	o.Locked = &v
}

// GetWithdrawing returns the Withdrawing field value if set, zero value otherwise.
func (o *CreateAssetGetUserAssetV3RespItem) GetWithdrawing() string {
	if o == nil || IsNil(o.Withdrawing) {
		var ret string
		return ret
	}
	return *o.Withdrawing
}

// GetWithdrawingOk returns a tuple with the Withdrawing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetGetUserAssetV3RespItem) GetWithdrawingOk() (*string, bool) {
	if o == nil || IsNil(o.Withdrawing) {
		return nil, false
	}
	return o.Withdrawing, true
}

// HasWithdrawing returns a boolean if a field has been set.
func (o *CreateAssetGetUserAssetV3RespItem) HasWithdrawing() bool {
	if o != nil && !IsNil(o.Withdrawing) {
		return true
	}

	return false
}

// SetWithdrawing gets a reference to the given string and assigns it to the Withdrawing field.
func (o *CreateAssetGetUserAssetV3RespItem) SetWithdrawing(v string) {
	o.Withdrawing = &v
}

func (o CreateAssetGetUserAssetV3RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAssetGetUserAssetV3RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.BtcValuation) {
		toSerialize["btcValuation"] = o.BtcValuation
	}
	if !IsNil(o.Free) {
		toSerialize["free"] = o.Free
	}
	if !IsNil(o.Freeze) {
		toSerialize["freeze"] = o.Freeze
	}
	if !IsNil(o.Ipoable) {
		toSerialize["ipoable"] = o.Ipoable
	}
	if !IsNil(o.Locked) {
		toSerialize["locked"] = o.Locked
	}
	if !IsNil(o.Withdrawing) {
		toSerialize["withdrawing"] = o.Withdrawing
	}
	return toSerialize, nil
}

type NullableCreateAssetGetUserAssetV3RespItem struct {
	value *CreateAssetGetUserAssetV3RespItem
	isSet bool
}

func (v NullableCreateAssetGetUserAssetV3RespItem) Get() *CreateAssetGetUserAssetV3RespItem {
	return v.value
}

func (v *NullableCreateAssetGetUserAssetV3RespItem) Set(val *CreateAssetGetUserAssetV3RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetGetUserAssetV3RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetGetUserAssetV3RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetGetUserAssetV3RespItem(val *CreateAssetGetUserAssetV3RespItem) *NullableCreateAssetGetUserAssetV3RespItem {
	return &NullableCreateAssetGetUserAssetV3RespItem{value: val, isSet: true}
}

func (v NullableCreateAssetGetUserAssetV3RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetGetUserAssetV3RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


