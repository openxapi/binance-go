/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetBrokerSubAccountApiCommissionFuturesV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBrokerSubAccountApiCommissionFuturesV1RespItem{}

// GetBrokerSubAccountApiCommissionFuturesV1RespItem struct for GetBrokerSubAccountApiCommissionFuturesV1RespItem
type GetBrokerSubAccountApiCommissionFuturesV1RespItem struct {
	MakerCommission *int32 `json:"makerCommission,omitempty"`
	SubAccountId *int64 `json:"subAccountId,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	TakerCommission *int32 `json:"takerCommission,omitempty"`
}

// NewGetBrokerSubAccountApiCommissionFuturesV1RespItem instantiates a new GetBrokerSubAccountApiCommissionFuturesV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBrokerSubAccountApiCommissionFuturesV1RespItem() *GetBrokerSubAccountApiCommissionFuturesV1RespItem {
	this := GetBrokerSubAccountApiCommissionFuturesV1RespItem{}
	return &this
}

// NewGetBrokerSubAccountApiCommissionFuturesV1RespItemWithDefaults instantiates a new GetBrokerSubAccountApiCommissionFuturesV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBrokerSubAccountApiCommissionFuturesV1RespItemWithDefaults() *GetBrokerSubAccountApiCommissionFuturesV1RespItem {
	this := GetBrokerSubAccountApiCommissionFuturesV1RespItem{}
	return &this
}

// GetMakerCommission returns the MakerCommission field value if set, zero value otherwise.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) GetMakerCommission() int32 {
	if o == nil || IsNil(o.MakerCommission) {
		var ret int32
		return ret
	}
	return *o.MakerCommission
}

// GetMakerCommissionOk returns a tuple with the MakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) GetMakerCommissionOk() (*int32, bool) {
	if o == nil || IsNil(o.MakerCommission) {
		return nil, false
	}
	return o.MakerCommission, true
}

// HasMakerCommission returns a boolean if a field has been set.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) HasMakerCommission() bool {
	if o != nil && !IsNil(o.MakerCommission) {
		return true
	}

	return false
}

// SetMakerCommission gets a reference to the given int32 and assigns it to the MakerCommission field.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) SetMakerCommission(v int32) {
	o.MakerCommission = &v
}

// GetSubAccountId returns the SubAccountId field value if set, zero value otherwise.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) GetSubAccountId() int64 {
	if o == nil || IsNil(o.SubAccountId) {
		var ret int64
		return ret
	}
	return *o.SubAccountId
}

// GetSubAccountIdOk returns a tuple with the SubAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) GetSubAccountIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SubAccountId) {
		return nil, false
	}
	return o.SubAccountId, true
}

// HasSubAccountId returns a boolean if a field has been set.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) HasSubAccountId() bool {
	if o != nil && !IsNil(o.SubAccountId) {
		return true
	}

	return false
}

// SetSubAccountId gets a reference to the given int64 and assigns it to the SubAccountId field.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) SetSubAccountId(v int64) {
	o.SubAccountId = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTakerCommission returns the TakerCommission field value if set, zero value otherwise.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) GetTakerCommission() int32 {
	if o == nil || IsNil(o.TakerCommission) {
		var ret int32
		return ret
	}
	return *o.TakerCommission
}

// GetTakerCommissionOk returns a tuple with the TakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) GetTakerCommissionOk() (*int32, bool) {
	if o == nil || IsNil(o.TakerCommission) {
		return nil, false
	}
	return o.TakerCommission, true
}

// HasTakerCommission returns a boolean if a field has been set.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) HasTakerCommission() bool {
	if o != nil && !IsNil(o.TakerCommission) {
		return true
	}

	return false
}

// SetTakerCommission gets a reference to the given int32 and assigns it to the TakerCommission field.
func (o *GetBrokerSubAccountApiCommissionFuturesV1RespItem) SetTakerCommission(v int32) {
	o.TakerCommission = &v
}

func (o GetBrokerSubAccountApiCommissionFuturesV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBrokerSubAccountApiCommissionFuturesV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MakerCommission) {
		toSerialize["makerCommission"] = o.MakerCommission
	}
	if !IsNil(o.SubAccountId) {
		toSerialize["subAccountId"] = o.SubAccountId
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.TakerCommission) {
		toSerialize["takerCommission"] = o.TakerCommission
	}
	return toSerialize, nil
}

type NullableGetBrokerSubAccountApiCommissionFuturesV1RespItem struct {
	value *GetBrokerSubAccountApiCommissionFuturesV1RespItem
	isSet bool
}

func (v NullableGetBrokerSubAccountApiCommissionFuturesV1RespItem) Get() *GetBrokerSubAccountApiCommissionFuturesV1RespItem {
	return v.value
}

func (v *NullableGetBrokerSubAccountApiCommissionFuturesV1RespItem) Set(val *GetBrokerSubAccountApiCommissionFuturesV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBrokerSubAccountApiCommissionFuturesV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBrokerSubAccountApiCommissionFuturesV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBrokerSubAccountApiCommissionFuturesV1RespItem(val *GetBrokerSubAccountApiCommissionFuturesV1RespItem) *NullableGetBrokerSubAccountApiCommissionFuturesV1RespItem {
	return &NullableGetBrokerSubAccountApiCommissionFuturesV1RespItem{value: val, isSet: true}
}

func (v NullableGetBrokerSubAccountApiCommissionFuturesV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBrokerSubAccountApiCommissionFuturesV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


