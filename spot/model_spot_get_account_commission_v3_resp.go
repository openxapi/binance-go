/*
Binance Spot API

OpenAPI specification for Binance cryptocurrency exchange - Spot API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the SpotGetAccountCommissionV3Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotGetAccountCommissionV3Resp{}

// SpotGetAccountCommissionV3Resp struct for SpotGetAccountCommissionV3Resp
type SpotGetAccountCommissionV3Resp struct {
	Discount *SpotCreateOrderTestV3RespDiscount `json:"discount,omitempty"`
	StandardCommission *SpotGetAccountCommissionV3RespStandardCommission `json:"standardCommission,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	TaxCommission *SpotGetAccountCommissionV3RespStandardCommission `json:"taxCommission,omitempty"`
}

// NewSpotGetAccountCommissionV3Resp instantiates a new SpotGetAccountCommissionV3Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotGetAccountCommissionV3Resp() *SpotGetAccountCommissionV3Resp {
	this := SpotGetAccountCommissionV3Resp{}
	return &this
}

// NewSpotGetAccountCommissionV3RespWithDefaults instantiates a new SpotGetAccountCommissionV3Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotGetAccountCommissionV3RespWithDefaults() *SpotGetAccountCommissionV3Resp {
	this := SpotGetAccountCommissionV3Resp{}
	return &this
}

// GetDiscount returns the Discount field value if set, zero value otherwise.
func (o *SpotGetAccountCommissionV3Resp) GetDiscount() SpotCreateOrderTestV3RespDiscount {
	if o == nil || IsNil(o.Discount) {
		var ret SpotCreateOrderTestV3RespDiscount
		return ret
	}
	return *o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetAccountCommissionV3Resp) GetDiscountOk() (*SpotCreateOrderTestV3RespDiscount, bool) {
	if o == nil || IsNil(o.Discount) {
		return nil, false
	}
	return o.Discount, true
}

// HasDiscount returns a boolean if a field has been set.
func (o *SpotGetAccountCommissionV3Resp) HasDiscount() bool {
	if o != nil && !IsNil(o.Discount) {
		return true
	}

	return false
}

// SetDiscount gets a reference to the given SpotCreateOrderTestV3RespDiscount and assigns it to the Discount field.
func (o *SpotGetAccountCommissionV3Resp) SetDiscount(v SpotCreateOrderTestV3RespDiscount) {
	o.Discount = &v
}

// GetStandardCommission returns the StandardCommission field value if set, zero value otherwise.
func (o *SpotGetAccountCommissionV3Resp) GetStandardCommission() SpotGetAccountCommissionV3RespStandardCommission {
	if o == nil || IsNil(o.StandardCommission) {
		var ret SpotGetAccountCommissionV3RespStandardCommission
		return ret
	}
	return *o.StandardCommission
}

// GetStandardCommissionOk returns a tuple with the StandardCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetAccountCommissionV3Resp) GetStandardCommissionOk() (*SpotGetAccountCommissionV3RespStandardCommission, bool) {
	if o == nil || IsNil(o.StandardCommission) {
		return nil, false
	}
	return o.StandardCommission, true
}

// HasStandardCommission returns a boolean if a field has been set.
func (o *SpotGetAccountCommissionV3Resp) HasStandardCommission() bool {
	if o != nil && !IsNil(o.StandardCommission) {
		return true
	}

	return false
}

// SetStandardCommission gets a reference to the given SpotGetAccountCommissionV3RespStandardCommission and assigns it to the StandardCommission field.
func (o *SpotGetAccountCommissionV3Resp) SetStandardCommission(v SpotGetAccountCommissionV3RespStandardCommission) {
	o.StandardCommission = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *SpotGetAccountCommissionV3Resp) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetAccountCommissionV3Resp) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *SpotGetAccountCommissionV3Resp) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *SpotGetAccountCommissionV3Resp) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTaxCommission returns the TaxCommission field value if set, zero value otherwise.
func (o *SpotGetAccountCommissionV3Resp) GetTaxCommission() SpotGetAccountCommissionV3RespStandardCommission {
	if o == nil || IsNil(o.TaxCommission) {
		var ret SpotGetAccountCommissionV3RespStandardCommission
		return ret
	}
	return *o.TaxCommission
}

// GetTaxCommissionOk returns a tuple with the TaxCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetAccountCommissionV3Resp) GetTaxCommissionOk() (*SpotGetAccountCommissionV3RespStandardCommission, bool) {
	if o == nil || IsNil(o.TaxCommission) {
		return nil, false
	}
	return o.TaxCommission, true
}

// HasTaxCommission returns a boolean if a field has been set.
func (o *SpotGetAccountCommissionV3Resp) HasTaxCommission() bool {
	if o != nil && !IsNil(o.TaxCommission) {
		return true
	}

	return false
}

// SetTaxCommission gets a reference to the given SpotGetAccountCommissionV3RespStandardCommission and assigns it to the TaxCommission field.
func (o *SpotGetAccountCommissionV3Resp) SetTaxCommission(v SpotGetAccountCommissionV3RespStandardCommission) {
	o.TaxCommission = &v
}

func (o SpotGetAccountCommissionV3Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotGetAccountCommissionV3Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Discount) {
		toSerialize["discount"] = o.Discount
	}
	if !IsNil(o.StandardCommission) {
		toSerialize["standardCommission"] = o.StandardCommission
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.TaxCommission) {
		toSerialize["taxCommission"] = o.TaxCommission
	}
	return toSerialize, nil
}

type NullableSpotGetAccountCommissionV3Resp struct {
	value *SpotGetAccountCommissionV3Resp
	isSet bool
}

func (v NullableSpotGetAccountCommissionV3Resp) Get() *SpotGetAccountCommissionV3Resp {
	return v.value
}

func (v *NullableSpotGetAccountCommissionV3Resp) Set(val *SpotGetAccountCommissionV3Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotGetAccountCommissionV3Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotGetAccountCommissionV3Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotGetAccountCommissionV3Resp(val *SpotGetAccountCommissionV3Resp) *NullableSpotGetAccountCommissionV3Resp {
	return &NullableSpotGetAccountCommissionV3Resp{value: val, isSet: true}
}

func (v NullableSpotGetAccountCommissionV3Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotGetAccountCommissionV3Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


