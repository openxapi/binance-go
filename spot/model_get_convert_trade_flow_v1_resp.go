/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetConvertTradeFlowV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetConvertTradeFlowV1Resp{}

// GetConvertTradeFlowV1Resp struct for GetConvertTradeFlowV1Resp
type GetConvertTradeFlowV1Resp struct {
	EndTime *int64 `json:"endTime,omitempty"`
	Limit *int32 `json:"limit,omitempty"`
	List []GetConvertTradeFlowV1RespListInner `json:"list,omitempty"`
	MoreData *bool `json:"moreData,omitempty"`
	StartTime *int64 `json:"startTime,omitempty"`
}

// NewGetConvertTradeFlowV1Resp instantiates a new GetConvertTradeFlowV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConvertTradeFlowV1Resp() *GetConvertTradeFlowV1Resp {
	this := GetConvertTradeFlowV1Resp{}
	return &this
}

// NewGetConvertTradeFlowV1RespWithDefaults instantiates a new GetConvertTradeFlowV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConvertTradeFlowV1RespWithDefaults() *GetConvertTradeFlowV1Resp {
	this := GetConvertTradeFlowV1Resp{}
	return &this
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *GetConvertTradeFlowV1Resp) GetEndTime() int64 {
	if o == nil || IsNil(o.EndTime) {
		var ret int64
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConvertTradeFlowV1Resp) GetEndTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *GetConvertTradeFlowV1Resp) HasEndTime() bool {
	if o != nil && !IsNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given int64 and assigns it to the EndTime field.
func (o *GetConvertTradeFlowV1Resp) SetEndTime(v int64) {
	o.EndTime = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *GetConvertTradeFlowV1Resp) GetLimit() int32 {
	if o == nil || IsNil(o.Limit) {
		var ret int32
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConvertTradeFlowV1Resp) GetLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *GetConvertTradeFlowV1Resp) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int32 and assigns it to the Limit field.
func (o *GetConvertTradeFlowV1Resp) SetLimit(v int32) {
	o.Limit = &v
}

// GetList returns the List field value if set, zero value otherwise.
func (o *GetConvertTradeFlowV1Resp) GetList() []GetConvertTradeFlowV1RespListInner {
	if o == nil || IsNil(o.List) {
		var ret []GetConvertTradeFlowV1RespListInner
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConvertTradeFlowV1Resp) GetListOk() ([]GetConvertTradeFlowV1RespListInner, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *GetConvertTradeFlowV1Resp) HasList() bool {
	if o != nil && !IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given []GetConvertTradeFlowV1RespListInner and assigns it to the List field.
func (o *GetConvertTradeFlowV1Resp) SetList(v []GetConvertTradeFlowV1RespListInner) {
	o.List = v
}

// GetMoreData returns the MoreData field value if set, zero value otherwise.
func (o *GetConvertTradeFlowV1Resp) GetMoreData() bool {
	if o == nil || IsNil(o.MoreData) {
		var ret bool
		return ret
	}
	return *o.MoreData
}

// GetMoreDataOk returns a tuple with the MoreData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConvertTradeFlowV1Resp) GetMoreDataOk() (*bool, bool) {
	if o == nil || IsNil(o.MoreData) {
		return nil, false
	}
	return o.MoreData, true
}

// HasMoreData returns a boolean if a field has been set.
func (o *GetConvertTradeFlowV1Resp) HasMoreData() bool {
	if o != nil && !IsNil(o.MoreData) {
		return true
	}

	return false
}

// SetMoreData gets a reference to the given bool and assigns it to the MoreData field.
func (o *GetConvertTradeFlowV1Resp) SetMoreData(v bool) {
	o.MoreData = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *GetConvertTradeFlowV1Resp) GetStartTime() int64 {
	if o == nil || IsNil(o.StartTime) {
		var ret int64
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConvertTradeFlowV1Resp) GetStartTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *GetConvertTradeFlowV1Resp) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int64 and assigns it to the StartTime field.
func (o *GetConvertTradeFlowV1Resp) SetStartTime(v int64) {
	o.StartTime = &v
}

func (o GetConvertTradeFlowV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetConvertTradeFlowV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	if !IsNil(o.List) {
		toSerialize["list"] = o.List
	}
	if !IsNil(o.MoreData) {
		toSerialize["moreData"] = o.MoreData
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	return toSerialize, nil
}

type NullableGetConvertTradeFlowV1Resp struct {
	value *GetConvertTradeFlowV1Resp
	isSet bool
}

func (v NullableGetConvertTradeFlowV1Resp) Get() *GetConvertTradeFlowV1Resp {
	return v.value
}

func (v *NullableGetConvertTradeFlowV1Resp) Set(val *GetConvertTradeFlowV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConvertTradeFlowV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConvertTradeFlowV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConvertTradeFlowV1Resp(val *GetConvertTradeFlowV1Resp) *NullableGetConvertTradeFlowV1Resp {
	return &NullableGetConvertTradeFlowV1Resp{value: val, isSet: true}
}

func (v NullableGetConvertTradeFlowV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConvertTradeFlowV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


