/*
Binance USD-M Futures API

OpenAPI specification for Binance exchange - Umfutures API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package umfutures

import (
	"encoding/json"
)

// checks if the UmfuturesGetFuturesDataDeliveryPriceRespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UmfuturesGetFuturesDataDeliveryPriceRespItem{}

// UmfuturesGetFuturesDataDeliveryPriceRespItem struct for UmfuturesGetFuturesDataDeliveryPriceRespItem
type UmfuturesGetFuturesDataDeliveryPriceRespItem struct {
	DeliveryPrice *float32 `json:"deliveryPrice,omitempty"`
	DeliveryTime *int64 `json:"deliveryTime,omitempty"`
}

// NewUmfuturesGetFuturesDataDeliveryPriceRespItem instantiates a new UmfuturesGetFuturesDataDeliveryPriceRespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUmfuturesGetFuturesDataDeliveryPriceRespItem() *UmfuturesGetFuturesDataDeliveryPriceRespItem {
	this := UmfuturesGetFuturesDataDeliveryPriceRespItem{}
	return &this
}

// NewUmfuturesGetFuturesDataDeliveryPriceRespItemWithDefaults instantiates a new UmfuturesGetFuturesDataDeliveryPriceRespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUmfuturesGetFuturesDataDeliveryPriceRespItemWithDefaults() *UmfuturesGetFuturesDataDeliveryPriceRespItem {
	this := UmfuturesGetFuturesDataDeliveryPriceRespItem{}
	return &this
}

// GetDeliveryPrice returns the DeliveryPrice field value if set, zero value otherwise.
func (o *UmfuturesGetFuturesDataDeliveryPriceRespItem) GetDeliveryPrice() float32 {
	if o == nil || IsNil(o.DeliveryPrice) {
		var ret float32
		return ret
	}
	return *o.DeliveryPrice
}

// GetDeliveryPriceOk returns a tuple with the DeliveryPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetFuturesDataDeliveryPriceRespItem) GetDeliveryPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.DeliveryPrice) {
		return nil, false
	}
	return o.DeliveryPrice, true
}

// HasDeliveryPrice returns a boolean if a field has been set.
func (o *UmfuturesGetFuturesDataDeliveryPriceRespItem) HasDeliveryPrice() bool {
	if o != nil && !IsNil(o.DeliveryPrice) {
		return true
	}

	return false
}

// SetDeliveryPrice gets a reference to the given float32 and assigns it to the DeliveryPrice field.
func (o *UmfuturesGetFuturesDataDeliveryPriceRespItem) SetDeliveryPrice(v float32) {
	o.DeliveryPrice = &v
}

// GetDeliveryTime returns the DeliveryTime field value if set, zero value otherwise.
func (o *UmfuturesGetFuturesDataDeliveryPriceRespItem) GetDeliveryTime() int64 {
	if o == nil || IsNil(o.DeliveryTime) {
		var ret int64
		return ret
	}
	return *o.DeliveryTime
}

// GetDeliveryTimeOk returns a tuple with the DeliveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetFuturesDataDeliveryPriceRespItem) GetDeliveryTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.DeliveryTime) {
		return nil, false
	}
	return o.DeliveryTime, true
}

// HasDeliveryTime returns a boolean if a field has been set.
func (o *UmfuturesGetFuturesDataDeliveryPriceRespItem) HasDeliveryTime() bool {
	if o != nil && !IsNil(o.DeliveryTime) {
		return true
	}

	return false
}

// SetDeliveryTime gets a reference to the given int64 and assigns it to the DeliveryTime field.
func (o *UmfuturesGetFuturesDataDeliveryPriceRespItem) SetDeliveryTime(v int64) {
	o.DeliveryTime = &v
}

func (o UmfuturesGetFuturesDataDeliveryPriceRespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UmfuturesGetFuturesDataDeliveryPriceRespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeliveryPrice) {
		toSerialize["deliveryPrice"] = o.DeliveryPrice
	}
	if !IsNil(o.DeliveryTime) {
		toSerialize["deliveryTime"] = o.DeliveryTime
	}
	return toSerialize, nil
}

type NullableUmfuturesGetFuturesDataDeliveryPriceRespItem struct {
	value *UmfuturesGetFuturesDataDeliveryPriceRespItem
	isSet bool
}

func (v NullableUmfuturesGetFuturesDataDeliveryPriceRespItem) Get() *UmfuturesGetFuturesDataDeliveryPriceRespItem {
	return v.value
}

func (v *NullableUmfuturesGetFuturesDataDeliveryPriceRespItem) Set(val *UmfuturesGetFuturesDataDeliveryPriceRespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableUmfuturesGetFuturesDataDeliveryPriceRespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableUmfuturesGetFuturesDataDeliveryPriceRespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUmfuturesGetFuturesDataDeliveryPriceRespItem(val *UmfuturesGetFuturesDataDeliveryPriceRespItem) *NullableUmfuturesGetFuturesDataDeliveryPriceRespItem {
	return &NullableUmfuturesGetFuturesDataDeliveryPriceRespItem{value: val, isSet: true}
}

func (v NullableUmfuturesGetFuturesDataDeliveryPriceRespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUmfuturesGetFuturesDataDeliveryPriceRespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


