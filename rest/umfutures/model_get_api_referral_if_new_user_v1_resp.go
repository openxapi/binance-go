/*
Binance USD-M Futures API

OpenAPI specification for Binance exchange - Umfutures API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package umfutures

import (
	"encoding/json"
)

// checks if the GetApiReferralIfNewUserV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApiReferralIfNewUserV1Resp{}

// GetApiReferralIfNewUserV1Resp struct for GetApiReferralIfNewUserV1Resp
type GetApiReferralIfNewUserV1Resp struct {
	BrokerId *string `json:"brokerId,omitempty"`
	IfNewUser *bool `json:"ifNewUser,omitempty"`
	RebateWorking *bool `json:"rebateWorking,omitempty"`
}

// NewGetApiReferralIfNewUserV1Resp instantiates a new GetApiReferralIfNewUserV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApiReferralIfNewUserV1Resp() *GetApiReferralIfNewUserV1Resp {
	this := GetApiReferralIfNewUserV1Resp{}
	return &this
}

// NewGetApiReferralIfNewUserV1RespWithDefaults instantiates a new GetApiReferralIfNewUserV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApiReferralIfNewUserV1RespWithDefaults() *GetApiReferralIfNewUserV1Resp {
	this := GetApiReferralIfNewUserV1Resp{}
	return &this
}

// GetBrokerId returns the BrokerId field value if set, zero value otherwise.
func (o *GetApiReferralIfNewUserV1Resp) GetBrokerId() string {
	if o == nil || IsNil(o.BrokerId) {
		var ret string
		return ret
	}
	return *o.BrokerId
}

// GetBrokerIdOk returns a tuple with the BrokerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiReferralIfNewUserV1Resp) GetBrokerIdOk() (*string, bool) {
	if o == nil || IsNil(o.BrokerId) {
		return nil, false
	}
	return o.BrokerId, true
}

// HasBrokerId returns a boolean if a field has been set.
func (o *GetApiReferralIfNewUserV1Resp) HasBrokerId() bool {
	if o != nil && !IsNil(o.BrokerId) {
		return true
	}

	return false
}

// SetBrokerId gets a reference to the given string and assigns it to the BrokerId field.
func (o *GetApiReferralIfNewUserV1Resp) SetBrokerId(v string) {
	o.BrokerId = &v
}

// GetIfNewUser returns the IfNewUser field value if set, zero value otherwise.
func (o *GetApiReferralIfNewUserV1Resp) GetIfNewUser() bool {
	if o == nil || IsNil(o.IfNewUser) {
		var ret bool
		return ret
	}
	return *o.IfNewUser
}

// GetIfNewUserOk returns a tuple with the IfNewUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiReferralIfNewUserV1Resp) GetIfNewUserOk() (*bool, bool) {
	if o == nil || IsNil(o.IfNewUser) {
		return nil, false
	}
	return o.IfNewUser, true
}

// HasIfNewUser returns a boolean if a field has been set.
func (o *GetApiReferralIfNewUserV1Resp) HasIfNewUser() bool {
	if o != nil && !IsNil(o.IfNewUser) {
		return true
	}

	return false
}

// SetIfNewUser gets a reference to the given bool and assigns it to the IfNewUser field.
func (o *GetApiReferralIfNewUserV1Resp) SetIfNewUser(v bool) {
	o.IfNewUser = &v
}

// GetRebateWorking returns the RebateWorking field value if set, zero value otherwise.
func (o *GetApiReferralIfNewUserV1Resp) GetRebateWorking() bool {
	if o == nil || IsNil(o.RebateWorking) {
		var ret bool
		return ret
	}
	return *o.RebateWorking
}

// GetRebateWorkingOk returns a tuple with the RebateWorking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiReferralIfNewUserV1Resp) GetRebateWorkingOk() (*bool, bool) {
	if o == nil || IsNil(o.RebateWorking) {
		return nil, false
	}
	return o.RebateWorking, true
}

// HasRebateWorking returns a boolean if a field has been set.
func (o *GetApiReferralIfNewUserV1Resp) HasRebateWorking() bool {
	if o != nil && !IsNil(o.RebateWorking) {
		return true
	}

	return false
}

// SetRebateWorking gets a reference to the given bool and assigns it to the RebateWorking field.
func (o *GetApiReferralIfNewUserV1Resp) SetRebateWorking(v bool) {
	o.RebateWorking = &v
}

func (o GetApiReferralIfNewUserV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApiReferralIfNewUserV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BrokerId) {
		toSerialize["brokerId"] = o.BrokerId
	}
	if !IsNil(o.IfNewUser) {
		toSerialize["ifNewUser"] = o.IfNewUser
	}
	if !IsNil(o.RebateWorking) {
		toSerialize["rebateWorking"] = o.RebateWorking
	}
	return toSerialize, nil
}

type NullableGetApiReferralIfNewUserV1Resp struct {
	value *GetApiReferralIfNewUserV1Resp
	isSet bool
}

func (v NullableGetApiReferralIfNewUserV1Resp) Get() *GetApiReferralIfNewUserV1Resp {
	return v.value
}

func (v *NullableGetApiReferralIfNewUserV1Resp) Set(val *GetApiReferralIfNewUserV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApiReferralIfNewUserV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApiReferralIfNewUserV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApiReferralIfNewUserV1Resp(val *GetApiReferralIfNewUserV1Resp) *NullableGetApiReferralIfNewUserV1Resp {
	return &NullableGetApiReferralIfNewUserV1Resp{value: val, isSet: true}
}

func (v NullableGetApiReferralIfNewUserV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApiReferralIfNewUserV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


