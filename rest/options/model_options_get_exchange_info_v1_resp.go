/*
Binance Options API

OpenAPI specification for Binance exchange - Options API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the OptionsGetExchangeInfoV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionsGetExchangeInfoV1Resp{}

// OptionsGetExchangeInfoV1Resp struct for OptionsGetExchangeInfoV1Resp
type OptionsGetExchangeInfoV1Resp struct {
	OptionAssets []OptionsGetExchangeInfoV1RespOptionAssetsInner `json:"optionAssets,omitempty"`
	OptionContracts []OptionsGetExchangeInfoV1RespOptionContractsInner `json:"optionContracts,omitempty"`
	OptionSymbols []OptionsGetExchangeInfoV1RespOptionSymbolsInner `json:"optionSymbols,omitempty"`
	RateLimits []OptionsGetExchangeInfoV1RespRateLimitsInner `json:"rateLimits,omitempty"`
	ServerTime *int64 `json:"serverTime,omitempty"`
	Timezone *string `json:"timezone,omitempty"`
}

// NewOptionsGetExchangeInfoV1Resp instantiates a new OptionsGetExchangeInfoV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionsGetExchangeInfoV1Resp() *OptionsGetExchangeInfoV1Resp {
	this := OptionsGetExchangeInfoV1Resp{}
	return &this
}

// NewOptionsGetExchangeInfoV1RespWithDefaults instantiates a new OptionsGetExchangeInfoV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionsGetExchangeInfoV1RespWithDefaults() *OptionsGetExchangeInfoV1Resp {
	this := OptionsGetExchangeInfoV1Resp{}
	return &this
}

// GetOptionAssets returns the OptionAssets field value if set, zero value otherwise.
func (o *OptionsGetExchangeInfoV1Resp) GetOptionAssets() []OptionsGetExchangeInfoV1RespOptionAssetsInner {
	if o == nil || IsNil(o.OptionAssets) {
		var ret []OptionsGetExchangeInfoV1RespOptionAssetsInner
		return ret
	}
	return o.OptionAssets
}

// GetOptionAssetsOk returns a tuple with the OptionAssets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExchangeInfoV1Resp) GetOptionAssetsOk() ([]OptionsGetExchangeInfoV1RespOptionAssetsInner, bool) {
	if o == nil || IsNil(o.OptionAssets) {
		return nil, false
	}
	return o.OptionAssets, true
}

// HasOptionAssets returns a boolean if a field has been set.
func (o *OptionsGetExchangeInfoV1Resp) HasOptionAssets() bool {
	if o != nil && !IsNil(o.OptionAssets) {
		return true
	}

	return false
}

// SetOptionAssets gets a reference to the given []OptionsGetExchangeInfoV1RespOptionAssetsInner and assigns it to the OptionAssets field.
func (o *OptionsGetExchangeInfoV1Resp) SetOptionAssets(v []OptionsGetExchangeInfoV1RespOptionAssetsInner) {
	o.OptionAssets = v
}

// GetOptionContracts returns the OptionContracts field value if set, zero value otherwise.
func (o *OptionsGetExchangeInfoV1Resp) GetOptionContracts() []OptionsGetExchangeInfoV1RespOptionContractsInner {
	if o == nil || IsNil(o.OptionContracts) {
		var ret []OptionsGetExchangeInfoV1RespOptionContractsInner
		return ret
	}
	return o.OptionContracts
}

// GetOptionContractsOk returns a tuple with the OptionContracts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExchangeInfoV1Resp) GetOptionContractsOk() ([]OptionsGetExchangeInfoV1RespOptionContractsInner, bool) {
	if o == nil || IsNil(o.OptionContracts) {
		return nil, false
	}
	return o.OptionContracts, true
}

// HasOptionContracts returns a boolean if a field has been set.
func (o *OptionsGetExchangeInfoV1Resp) HasOptionContracts() bool {
	if o != nil && !IsNil(o.OptionContracts) {
		return true
	}

	return false
}

// SetOptionContracts gets a reference to the given []OptionsGetExchangeInfoV1RespOptionContractsInner and assigns it to the OptionContracts field.
func (o *OptionsGetExchangeInfoV1Resp) SetOptionContracts(v []OptionsGetExchangeInfoV1RespOptionContractsInner) {
	o.OptionContracts = v
}

// GetOptionSymbols returns the OptionSymbols field value if set, zero value otherwise.
func (o *OptionsGetExchangeInfoV1Resp) GetOptionSymbols() []OptionsGetExchangeInfoV1RespOptionSymbolsInner {
	if o == nil || IsNil(o.OptionSymbols) {
		var ret []OptionsGetExchangeInfoV1RespOptionSymbolsInner
		return ret
	}
	return o.OptionSymbols
}

// GetOptionSymbolsOk returns a tuple with the OptionSymbols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExchangeInfoV1Resp) GetOptionSymbolsOk() ([]OptionsGetExchangeInfoV1RespOptionSymbolsInner, bool) {
	if o == nil || IsNil(o.OptionSymbols) {
		return nil, false
	}
	return o.OptionSymbols, true
}

// HasOptionSymbols returns a boolean if a field has been set.
func (o *OptionsGetExchangeInfoV1Resp) HasOptionSymbols() bool {
	if o != nil && !IsNil(o.OptionSymbols) {
		return true
	}

	return false
}

// SetOptionSymbols gets a reference to the given []OptionsGetExchangeInfoV1RespOptionSymbolsInner and assigns it to the OptionSymbols field.
func (o *OptionsGetExchangeInfoV1Resp) SetOptionSymbols(v []OptionsGetExchangeInfoV1RespOptionSymbolsInner) {
	o.OptionSymbols = v
}

// GetRateLimits returns the RateLimits field value if set, zero value otherwise.
func (o *OptionsGetExchangeInfoV1Resp) GetRateLimits() []OptionsGetExchangeInfoV1RespRateLimitsInner {
	if o == nil || IsNil(o.RateLimits) {
		var ret []OptionsGetExchangeInfoV1RespRateLimitsInner
		return ret
	}
	return o.RateLimits
}

// GetRateLimitsOk returns a tuple with the RateLimits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExchangeInfoV1Resp) GetRateLimitsOk() ([]OptionsGetExchangeInfoV1RespRateLimitsInner, bool) {
	if o == nil || IsNil(o.RateLimits) {
		return nil, false
	}
	return o.RateLimits, true
}

// HasRateLimits returns a boolean if a field has been set.
func (o *OptionsGetExchangeInfoV1Resp) HasRateLimits() bool {
	if o != nil && !IsNil(o.RateLimits) {
		return true
	}

	return false
}

// SetRateLimits gets a reference to the given []OptionsGetExchangeInfoV1RespRateLimitsInner and assigns it to the RateLimits field.
func (o *OptionsGetExchangeInfoV1Resp) SetRateLimits(v []OptionsGetExchangeInfoV1RespRateLimitsInner) {
	o.RateLimits = v
}

// GetServerTime returns the ServerTime field value if set, zero value otherwise.
func (o *OptionsGetExchangeInfoV1Resp) GetServerTime() int64 {
	if o == nil || IsNil(o.ServerTime) {
		var ret int64
		return ret
	}
	return *o.ServerTime
}

// GetServerTimeOk returns a tuple with the ServerTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExchangeInfoV1Resp) GetServerTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.ServerTime) {
		return nil, false
	}
	return o.ServerTime, true
}

// HasServerTime returns a boolean if a field has been set.
func (o *OptionsGetExchangeInfoV1Resp) HasServerTime() bool {
	if o != nil && !IsNil(o.ServerTime) {
		return true
	}

	return false
}

// SetServerTime gets a reference to the given int64 and assigns it to the ServerTime field.
func (o *OptionsGetExchangeInfoV1Resp) SetServerTime(v int64) {
	o.ServerTime = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *OptionsGetExchangeInfoV1Resp) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExchangeInfoV1Resp) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *OptionsGetExchangeInfoV1Resp) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *OptionsGetExchangeInfoV1Resp) SetTimezone(v string) {
	o.Timezone = &v
}

func (o OptionsGetExchangeInfoV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionsGetExchangeInfoV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OptionAssets) {
		toSerialize["optionAssets"] = o.OptionAssets
	}
	if !IsNil(o.OptionContracts) {
		toSerialize["optionContracts"] = o.OptionContracts
	}
	if !IsNil(o.OptionSymbols) {
		toSerialize["optionSymbols"] = o.OptionSymbols
	}
	if !IsNil(o.RateLimits) {
		toSerialize["rateLimits"] = o.RateLimits
	}
	if !IsNil(o.ServerTime) {
		toSerialize["serverTime"] = o.ServerTime
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	return toSerialize, nil
}

type NullableOptionsGetExchangeInfoV1Resp struct {
	value *OptionsGetExchangeInfoV1Resp
	isSet bool
}

func (v NullableOptionsGetExchangeInfoV1Resp) Get() *OptionsGetExchangeInfoV1Resp {
	return v.value
}

func (v *NullableOptionsGetExchangeInfoV1Resp) Set(val *OptionsGetExchangeInfoV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionsGetExchangeInfoV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionsGetExchangeInfoV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionsGetExchangeInfoV1Resp(val *OptionsGetExchangeInfoV1Resp) *NullableOptionsGetExchangeInfoV1Resp {
	return &NullableOptionsGetExchangeInfoV1Resp{value: val, isSet: true}
}

func (v NullableOptionsGetExchangeInfoV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionsGetExchangeInfoV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


