/*
Binance Options API

OpenAPI specification for Binance exchange - Options API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the GetAccountV1RespAssetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAccountV1RespAssetInner{}

// GetAccountV1RespAssetInner struct for GetAccountV1RespAssetInner
type GetAccountV1RespAssetInner struct {
	Asset *string `json:"asset,omitempty"`
	Available *string `json:"available,omitempty"`
	Equity *string `json:"equity,omitempty"`
	Locked *string `json:"locked,omitempty"`
	MarginBalance *string `json:"marginBalance,omitempty"`
	UnrealizedPNL *string `json:"unrealizedPNL,omitempty"`
}

// NewGetAccountV1RespAssetInner instantiates a new GetAccountV1RespAssetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountV1RespAssetInner() *GetAccountV1RespAssetInner {
	this := GetAccountV1RespAssetInner{}
	return &this
}

// NewGetAccountV1RespAssetInnerWithDefaults instantiates a new GetAccountV1RespAssetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountV1RespAssetInnerWithDefaults() *GetAccountV1RespAssetInner {
	this := GetAccountV1RespAssetInner{}
	return &this
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *GetAccountV1RespAssetInner) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1RespAssetInner) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *GetAccountV1RespAssetInner) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *GetAccountV1RespAssetInner) SetAsset(v string) {
	o.Asset = &v
}

// GetAvailable returns the Available field value if set, zero value otherwise.
func (o *GetAccountV1RespAssetInner) GetAvailable() string {
	if o == nil || IsNil(o.Available) {
		var ret string
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1RespAssetInner) GetAvailableOk() (*string, bool) {
	if o == nil || IsNil(o.Available) {
		return nil, false
	}
	return o.Available, true
}

// HasAvailable returns a boolean if a field has been set.
func (o *GetAccountV1RespAssetInner) HasAvailable() bool {
	if o != nil && !IsNil(o.Available) {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given string and assigns it to the Available field.
func (o *GetAccountV1RespAssetInner) SetAvailable(v string) {
	o.Available = &v
}

// GetEquity returns the Equity field value if set, zero value otherwise.
func (o *GetAccountV1RespAssetInner) GetEquity() string {
	if o == nil || IsNil(o.Equity) {
		var ret string
		return ret
	}
	return *o.Equity
}

// GetEquityOk returns a tuple with the Equity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1RespAssetInner) GetEquityOk() (*string, bool) {
	if o == nil || IsNil(o.Equity) {
		return nil, false
	}
	return o.Equity, true
}

// HasEquity returns a boolean if a field has been set.
func (o *GetAccountV1RespAssetInner) HasEquity() bool {
	if o != nil && !IsNil(o.Equity) {
		return true
	}

	return false
}

// SetEquity gets a reference to the given string and assigns it to the Equity field.
func (o *GetAccountV1RespAssetInner) SetEquity(v string) {
	o.Equity = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *GetAccountV1RespAssetInner) GetLocked() string {
	if o == nil || IsNil(o.Locked) {
		var ret string
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1RespAssetInner) GetLockedOk() (*string, bool) {
	if o == nil || IsNil(o.Locked) {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *GetAccountV1RespAssetInner) HasLocked() bool {
	if o != nil && !IsNil(o.Locked) {
		return true
	}

	return false
}

// SetLocked gets a reference to the given string and assigns it to the Locked field.
func (o *GetAccountV1RespAssetInner) SetLocked(v string) {
	o.Locked = &v
}

// GetMarginBalance returns the MarginBalance field value if set, zero value otherwise.
func (o *GetAccountV1RespAssetInner) GetMarginBalance() string {
	if o == nil || IsNil(o.MarginBalance) {
		var ret string
		return ret
	}
	return *o.MarginBalance
}

// GetMarginBalanceOk returns a tuple with the MarginBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1RespAssetInner) GetMarginBalanceOk() (*string, bool) {
	if o == nil || IsNil(o.MarginBalance) {
		return nil, false
	}
	return o.MarginBalance, true
}

// HasMarginBalance returns a boolean if a field has been set.
func (o *GetAccountV1RespAssetInner) HasMarginBalance() bool {
	if o != nil && !IsNil(o.MarginBalance) {
		return true
	}

	return false
}

// SetMarginBalance gets a reference to the given string and assigns it to the MarginBalance field.
func (o *GetAccountV1RespAssetInner) SetMarginBalance(v string) {
	o.MarginBalance = &v
}

// GetUnrealizedPNL returns the UnrealizedPNL field value if set, zero value otherwise.
func (o *GetAccountV1RespAssetInner) GetUnrealizedPNL() string {
	if o == nil || IsNil(o.UnrealizedPNL) {
		var ret string
		return ret
	}
	return *o.UnrealizedPNL
}

// GetUnrealizedPNLOk returns a tuple with the UnrealizedPNL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1RespAssetInner) GetUnrealizedPNLOk() (*string, bool) {
	if o == nil || IsNil(o.UnrealizedPNL) {
		return nil, false
	}
	return o.UnrealizedPNL, true
}

// HasUnrealizedPNL returns a boolean if a field has been set.
func (o *GetAccountV1RespAssetInner) HasUnrealizedPNL() bool {
	if o != nil && !IsNil(o.UnrealizedPNL) {
		return true
	}

	return false
}

// SetUnrealizedPNL gets a reference to the given string and assigns it to the UnrealizedPNL field.
func (o *GetAccountV1RespAssetInner) SetUnrealizedPNL(v string) {
	o.UnrealizedPNL = &v
}

func (o GetAccountV1RespAssetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAccountV1RespAssetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.Available) {
		toSerialize["available"] = o.Available
	}
	if !IsNil(o.Equity) {
		toSerialize["equity"] = o.Equity
	}
	if !IsNil(o.Locked) {
		toSerialize["locked"] = o.Locked
	}
	if !IsNil(o.MarginBalance) {
		toSerialize["marginBalance"] = o.MarginBalance
	}
	if !IsNil(o.UnrealizedPNL) {
		toSerialize["unrealizedPNL"] = o.UnrealizedPNL
	}
	return toSerialize, nil
}

type NullableGetAccountV1RespAssetInner struct {
	value *GetAccountV1RespAssetInner
	isSet bool
}

func (v NullableGetAccountV1RespAssetInner) Get() *GetAccountV1RespAssetInner {
	return v.value
}

func (v *NullableGetAccountV1RespAssetInner) Set(val *GetAccountV1RespAssetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountV1RespAssetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountV1RespAssetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountV1RespAssetInner(val *GetAccountV1RespAssetInner) *NullableGetAccountV1RespAssetInner {
	return &NullableGetAccountV1RespAssetInner{value: val, isSet: true}
}

func (v NullableGetAccountV1RespAssetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountV1RespAssetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


