/*
Binance COIN-M Futures API

OpenAPI specification for Binance exchange - Cmfutures API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cmfutures

import (
	"encoding/json"
)

// checks if the GetConstituentsV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetConstituentsV1Resp{}

// GetConstituentsV1Resp struct for GetConstituentsV1Resp
type GetConstituentsV1Resp struct {
	Constituents []GetConstituentsV1RespConstituentsInner `json:"constituents,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	Time *int64 `json:"time,omitempty"`
}

// NewGetConstituentsV1Resp instantiates a new GetConstituentsV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConstituentsV1Resp() *GetConstituentsV1Resp {
	this := GetConstituentsV1Resp{}
	return &this
}

// NewGetConstituentsV1RespWithDefaults instantiates a new GetConstituentsV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConstituentsV1RespWithDefaults() *GetConstituentsV1Resp {
	this := GetConstituentsV1Resp{}
	return &this
}

// GetConstituents returns the Constituents field value if set, zero value otherwise.
func (o *GetConstituentsV1Resp) GetConstituents() []GetConstituentsV1RespConstituentsInner {
	if o == nil || IsNil(o.Constituents) {
		var ret []GetConstituentsV1RespConstituentsInner
		return ret
	}
	return o.Constituents
}

// GetConstituentsOk returns a tuple with the Constituents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConstituentsV1Resp) GetConstituentsOk() ([]GetConstituentsV1RespConstituentsInner, bool) {
	if o == nil || IsNil(o.Constituents) {
		return nil, false
	}
	return o.Constituents, true
}

// HasConstituents returns a boolean if a field has been set.
func (o *GetConstituentsV1Resp) HasConstituents() bool {
	if o != nil && !IsNil(o.Constituents) {
		return true
	}

	return false
}

// SetConstituents gets a reference to the given []GetConstituentsV1RespConstituentsInner and assigns it to the Constituents field.
func (o *GetConstituentsV1Resp) SetConstituents(v []GetConstituentsV1RespConstituentsInner) {
	o.Constituents = v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *GetConstituentsV1Resp) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConstituentsV1Resp) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *GetConstituentsV1Resp) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *GetConstituentsV1Resp) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetConstituentsV1Resp) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConstituentsV1Resp) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetConstituentsV1Resp) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetConstituentsV1Resp) SetTime(v int64) {
	o.Time = &v
}

func (o GetConstituentsV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetConstituentsV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Constituents) {
		toSerialize["constituents"] = o.Constituents
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableGetConstituentsV1Resp struct {
	value *GetConstituentsV1Resp
	isSet bool
}

func (v NullableGetConstituentsV1Resp) Get() *GetConstituentsV1Resp {
	return v.value
}

func (v *NullableGetConstituentsV1Resp) Set(val *GetConstituentsV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConstituentsV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConstituentsV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConstituentsV1Resp(val *GetConstituentsV1Resp) *NullableGetConstituentsV1Resp {
	return &NullableGetConstituentsV1Resp{value: val, isSet: true}
}

func (v NullableGetConstituentsV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConstituentsV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


