/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateSimpleEarnLockedSetAutoSubscribeV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSimpleEarnLockedSetAutoSubscribeV1Resp{}

// CreateSimpleEarnLockedSetAutoSubscribeV1Resp struct for CreateSimpleEarnLockedSetAutoSubscribeV1Resp
type CreateSimpleEarnLockedSetAutoSubscribeV1Resp struct {
	Success *bool `json:"success,omitempty"`
}

// NewCreateSimpleEarnLockedSetAutoSubscribeV1Resp instantiates a new CreateSimpleEarnLockedSetAutoSubscribeV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSimpleEarnLockedSetAutoSubscribeV1Resp() *CreateSimpleEarnLockedSetAutoSubscribeV1Resp {
	this := CreateSimpleEarnLockedSetAutoSubscribeV1Resp{}
	return &this
}

// NewCreateSimpleEarnLockedSetAutoSubscribeV1RespWithDefaults instantiates a new CreateSimpleEarnLockedSetAutoSubscribeV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSimpleEarnLockedSetAutoSubscribeV1RespWithDefaults() *CreateSimpleEarnLockedSetAutoSubscribeV1Resp {
	this := CreateSimpleEarnLockedSetAutoSubscribeV1Resp{}
	return &this
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *CreateSimpleEarnLockedSetAutoSubscribeV1Resp) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSimpleEarnLockedSetAutoSubscribeV1Resp) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *CreateSimpleEarnLockedSetAutoSubscribeV1Resp) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *CreateSimpleEarnLockedSetAutoSubscribeV1Resp) SetSuccess(v bool) {
	o.Success = &v
}

func (o CreateSimpleEarnLockedSetAutoSubscribeV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSimpleEarnLockedSetAutoSubscribeV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableCreateSimpleEarnLockedSetAutoSubscribeV1Resp struct {
	value *CreateSimpleEarnLockedSetAutoSubscribeV1Resp
	isSet bool
}

func (v NullableCreateSimpleEarnLockedSetAutoSubscribeV1Resp) Get() *CreateSimpleEarnLockedSetAutoSubscribeV1Resp {
	return v.value
}

func (v *NullableCreateSimpleEarnLockedSetAutoSubscribeV1Resp) Set(val *CreateSimpleEarnLockedSetAutoSubscribeV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSimpleEarnLockedSetAutoSubscribeV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSimpleEarnLockedSetAutoSubscribeV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSimpleEarnLockedSetAutoSubscribeV1Resp(val *CreateSimpleEarnLockedSetAutoSubscribeV1Resp) *NullableCreateSimpleEarnLockedSetAutoSubscribeV1Resp {
	return &NullableCreateSimpleEarnLockedSetAutoSubscribeV1Resp{value: val, isSet: true}
}

func (v NullableCreateSimpleEarnLockedSetAutoSubscribeV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSimpleEarnLockedSetAutoSubscribeV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


