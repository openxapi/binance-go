/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetRebateTaxQueryV1RespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRebateTaxQueryV1RespData{}

// GetRebateTaxQueryV1RespData struct for GetRebateTaxQueryV1RespData
type GetRebateTaxQueryV1RespData struct {
	Data []GetRebateTaxQueryV1RespDataDataInner `json:"data,omitempty"`
	Page *int32 `json:"page,omitempty"`
	TotalPageNum *int32 `json:"totalPageNum,omitempty"`
	TotalRecords *int32 `json:"totalRecords,omitempty"`
}

// NewGetRebateTaxQueryV1RespData instantiates a new GetRebateTaxQueryV1RespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRebateTaxQueryV1RespData() *GetRebateTaxQueryV1RespData {
	this := GetRebateTaxQueryV1RespData{}
	return &this
}

// NewGetRebateTaxQueryV1RespDataWithDefaults instantiates a new GetRebateTaxQueryV1RespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRebateTaxQueryV1RespDataWithDefaults() *GetRebateTaxQueryV1RespData {
	this := GetRebateTaxQueryV1RespData{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetRebateTaxQueryV1RespData) GetData() []GetRebateTaxQueryV1RespDataDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []GetRebateTaxQueryV1RespDataDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRebateTaxQueryV1RespData) GetDataOk() ([]GetRebateTaxQueryV1RespDataDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetRebateTaxQueryV1RespData) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []GetRebateTaxQueryV1RespDataDataInner and assigns it to the Data field.
func (o *GetRebateTaxQueryV1RespData) SetData(v []GetRebateTaxQueryV1RespDataDataInner) {
	o.Data = v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *GetRebateTaxQueryV1RespData) GetPage() int32 {
	if o == nil || IsNil(o.Page) {
		var ret int32
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRebateTaxQueryV1RespData) GetPageOk() (*int32, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *GetRebateTaxQueryV1RespData) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given int32 and assigns it to the Page field.
func (o *GetRebateTaxQueryV1RespData) SetPage(v int32) {
	o.Page = &v
}

// GetTotalPageNum returns the TotalPageNum field value if set, zero value otherwise.
func (o *GetRebateTaxQueryV1RespData) GetTotalPageNum() int32 {
	if o == nil || IsNil(o.TotalPageNum) {
		var ret int32
		return ret
	}
	return *o.TotalPageNum
}

// GetTotalPageNumOk returns a tuple with the TotalPageNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRebateTaxQueryV1RespData) GetTotalPageNumOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalPageNum) {
		return nil, false
	}
	return o.TotalPageNum, true
}

// HasTotalPageNum returns a boolean if a field has been set.
func (o *GetRebateTaxQueryV1RespData) HasTotalPageNum() bool {
	if o != nil && !IsNil(o.TotalPageNum) {
		return true
	}

	return false
}

// SetTotalPageNum gets a reference to the given int32 and assigns it to the TotalPageNum field.
func (o *GetRebateTaxQueryV1RespData) SetTotalPageNum(v int32) {
	o.TotalPageNum = &v
}

// GetTotalRecords returns the TotalRecords field value if set, zero value otherwise.
func (o *GetRebateTaxQueryV1RespData) GetTotalRecords() int32 {
	if o == nil || IsNil(o.TotalRecords) {
		var ret int32
		return ret
	}
	return *o.TotalRecords
}

// GetTotalRecordsOk returns a tuple with the TotalRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRebateTaxQueryV1RespData) GetTotalRecordsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalRecords) {
		return nil, false
	}
	return o.TotalRecords, true
}

// HasTotalRecords returns a boolean if a field has been set.
func (o *GetRebateTaxQueryV1RespData) HasTotalRecords() bool {
	if o != nil && !IsNil(o.TotalRecords) {
		return true
	}

	return false
}

// SetTotalRecords gets a reference to the given int32 and assigns it to the TotalRecords field.
func (o *GetRebateTaxQueryV1RespData) SetTotalRecords(v int32) {
	o.TotalRecords = &v
}

func (o GetRebateTaxQueryV1RespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRebateTaxQueryV1RespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	if !IsNil(o.TotalPageNum) {
		toSerialize["totalPageNum"] = o.TotalPageNum
	}
	if !IsNil(o.TotalRecords) {
		toSerialize["totalRecords"] = o.TotalRecords
	}
	return toSerialize, nil
}

type NullableGetRebateTaxQueryV1RespData struct {
	value *GetRebateTaxQueryV1RespData
	isSet bool
}

func (v NullableGetRebateTaxQueryV1RespData) Get() *GetRebateTaxQueryV1RespData {
	return v.value
}

func (v *NullableGetRebateTaxQueryV1RespData) Set(val *GetRebateTaxQueryV1RespData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRebateTaxQueryV1RespData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRebateTaxQueryV1RespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRebateTaxQueryV1RespData(val *GetRebateTaxQueryV1RespData) *NullableGetRebateTaxQueryV1RespData {
	return &NullableGetRebateTaxQueryV1RespData{value: val, isSet: true}
}

func (v NullableGetRebateTaxQueryV1RespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRebateTaxQueryV1RespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


