/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner{}

// GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner struct for GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner
type GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner struct {
	AlgoName *string `json:"algoName,omitempty"`
	Amount *float32 `json:"amount,omitempty"`
	CoinName *string `json:"coinName,omitempty"`
	Day *int32 `json:"day,omitempty"`
	HashRate *int32 `json:"hashRate,omitempty"`
	PoolUsername *string `json:"poolUsername,omitempty"`
	ToPoolUsername *string `json:"toPoolUsername,omitempty"`
}

// NewGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner instantiates a new GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner() *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner {
	this := GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner{}
	return &this
}

// NewGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInnerWithDefaults instantiates a new GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInnerWithDefaults() *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner {
	this := GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner{}
	return &this
}

// GetAlgoName returns the AlgoName field value if set, zero value otherwise.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetAlgoName() string {
	if o == nil || IsNil(o.AlgoName) {
		var ret string
		return ret
	}
	return *o.AlgoName
}

// GetAlgoNameOk returns a tuple with the AlgoName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetAlgoNameOk() (*string, bool) {
	if o == nil || IsNil(o.AlgoName) {
		return nil, false
	}
	return o.AlgoName, true
}

// HasAlgoName returns a boolean if a field has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) HasAlgoName() bool {
	if o != nil && !IsNil(o.AlgoName) {
		return true
	}

	return false
}

// SetAlgoName gets a reference to the given string and assigns it to the AlgoName field.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) SetAlgoName(v string) {
	o.AlgoName = &v
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) SetAmount(v float32) {
	o.Amount = &v
}

// GetCoinName returns the CoinName field value if set, zero value otherwise.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetCoinName() string {
	if o == nil || IsNil(o.CoinName) {
		var ret string
		return ret
	}
	return *o.CoinName
}

// GetCoinNameOk returns a tuple with the CoinName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetCoinNameOk() (*string, bool) {
	if o == nil || IsNil(o.CoinName) {
		return nil, false
	}
	return o.CoinName, true
}

// HasCoinName returns a boolean if a field has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) HasCoinName() bool {
	if o != nil && !IsNil(o.CoinName) {
		return true
	}

	return false
}

// SetCoinName gets a reference to the given string and assigns it to the CoinName field.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) SetCoinName(v string) {
	o.CoinName = &v
}

// GetDay returns the Day field value if set, zero value otherwise.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetDay() int32 {
	if o == nil || IsNil(o.Day) {
		var ret int32
		return ret
	}
	return *o.Day
}

// GetDayOk returns a tuple with the Day field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetDayOk() (*int32, bool) {
	if o == nil || IsNil(o.Day) {
		return nil, false
	}
	return o.Day, true
}

// HasDay returns a boolean if a field has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) HasDay() bool {
	if o != nil && !IsNil(o.Day) {
		return true
	}

	return false
}

// SetDay gets a reference to the given int32 and assigns it to the Day field.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) SetDay(v int32) {
	o.Day = &v
}

// GetHashRate returns the HashRate field value if set, zero value otherwise.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetHashRate() int32 {
	if o == nil || IsNil(o.HashRate) {
		var ret int32
		return ret
	}
	return *o.HashRate
}

// GetHashRateOk returns a tuple with the HashRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetHashRateOk() (*int32, bool) {
	if o == nil || IsNil(o.HashRate) {
		return nil, false
	}
	return o.HashRate, true
}

// HasHashRate returns a boolean if a field has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) HasHashRate() bool {
	if o != nil && !IsNil(o.HashRate) {
		return true
	}

	return false
}

// SetHashRate gets a reference to the given int32 and assigns it to the HashRate field.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) SetHashRate(v int32) {
	o.HashRate = &v
}

// GetPoolUsername returns the PoolUsername field value if set, zero value otherwise.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetPoolUsername() string {
	if o == nil || IsNil(o.PoolUsername) {
		var ret string
		return ret
	}
	return *o.PoolUsername
}

// GetPoolUsernameOk returns a tuple with the PoolUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetPoolUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.PoolUsername) {
		return nil, false
	}
	return o.PoolUsername, true
}

// HasPoolUsername returns a boolean if a field has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) HasPoolUsername() bool {
	if o != nil && !IsNil(o.PoolUsername) {
		return true
	}

	return false
}

// SetPoolUsername gets a reference to the given string and assigns it to the PoolUsername field.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) SetPoolUsername(v string) {
	o.PoolUsername = &v
}

// GetToPoolUsername returns the ToPoolUsername field value if set, zero value otherwise.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetToPoolUsername() string {
	if o == nil || IsNil(o.ToPoolUsername) {
		var ret string
		return ret
	}
	return *o.ToPoolUsername
}

// GetToPoolUsernameOk returns a tuple with the ToPoolUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) GetToPoolUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.ToPoolUsername) {
		return nil, false
	}
	return o.ToPoolUsername, true
}

// HasToPoolUsername returns a boolean if a field has been set.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) HasToPoolUsername() bool {
	if o != nil && !IsNil(o.ToPoolUsername) {
		return true
	}

	return false
}

// SetToPoolUsername gets a reference to the given string and assigns it to the ToPoolUsername field.
func (o *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) SetToPoolUsername(v string) {
	o.ToPoolUsername = &v
}

func (o GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlgoName) {
		toSerialize["algoName"] = o.AlgoName
	}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CoinName) {
		toSerialize["coinName"] = o.CoinName
	}
	if !IsNil(o.Day) {
		toSerialize["day"] = o.Day
	}
	if !IsNil(o.HashRate) {
		toSerialize["hashRate"] = o.HashRate
	}
	if !IsNil(o.PoolUsername) {
		toSerialize["poolUsername"] = o.PoolUsername
	}
	if !IsNil(o.ToPoolUsername) {
		toSerialize["toPoolUsername"] = o.ToPoolUsername
	}
	return toSerialize, nil
}

type NullableGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner struct {
	value *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner
	isSet bool
}

func (v NullableGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) Get() *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner {
	return v.value
}

func (v *NullableGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) Set(val *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner(val *GetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) *NullableGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner {
	return &NullableGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner{value: val, isSet: true}
}

func (v NullableGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMiningHashTransferProfitDetailsV1RespDataProfitTransferDetailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


