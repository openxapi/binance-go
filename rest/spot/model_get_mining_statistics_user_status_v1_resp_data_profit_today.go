/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetMiningStatisticsUserStatusV1RespDataProfitToday type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMiningStatisticsUserStatusV1RespDataProfitToday{}

// GetMiningStatisticsUserStatusV1RespDataProfitToday struct for GetMiningStatisticsUserStatusV1RespDataProfitToday
type GetMiningStatisticsUserStatusV1RespDataProfitToday struct {
	BCH *string `json:"BCH,omitempty"`
	BSV *string `json:"BSV,omitempty"`
	BTC *string `json:"BTC,omitempty"`
}

// NewGetMiningStatisticsUserStatusV1RespDataProfitToday instantiates a new GetMiningStatisticsUserStatusV1RespDataProfitToday object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMiningStatisticsUserStatusV1RespDataProfitToday() *GetMiningStatisticsUserStatusV1RespDataProfitToday {
	this := GetMiningStatisticsUserStatusV1RespDataProfitToday{}
	return &this
}

// NewGetMiningStatisticsUserStatusV1RespDataProfitTodayWithDefaults instantiates a new GetMiningStatisticsUserStatusV1RespDataProfitToday object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMiningStatisticsUserStatusV1RespDataProfitTodayWithDefaults() *GetMiningStatisticsUserStatusV1RespDataProfitToday {
	this := GetMiningStatisticsUserStatusV1RespDataProfitToday{}
	return &this
}

// GetBCH returns the BCH field value if set, zero value otherwise.
func (o *GetMiningStatisticsUserStatusV1RespDataProfitToday) GetBCH() string {
	if o == nil || IsNil(o.BCH) {
		var ret string
		return ret
	}
	return *o.BCH
}

// GetBCHOk returns a tuple with the BCH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningStatisticsUserStatusV1RespDataProfitToday) GetBCHOk() (*string, bool) {
	if o == nil || IsNil(o.BCH) {
		return nil, false
	}
	return o.BCH, true
}

// HasBCH returns a boolean if a field has been set.
func (o *GetMiningStatisticsUserStatusV1RespDataProfitToday) HasBCH() bool {
	if o != nil && !IsNil(o.BCH) {
		return true
	}

	return false
}

// SetBCH gets a reference to the given string and assigns it to the BCH field.
func (o *GetMiningStatisticsUserStatusV1RespDataProfitToday) SetBCH(v string) {
	o.BCH = &v
}

// GetBSV returns the BSV field value if set, zero value otherwise.
func (o *GetMiningStatisticsUserStatusV1RespDataProfitToday) GetBSV() string {
	if o == nil || IsNil(o.BSV) {
		var ret string
		return ret
	}
	return *o.BSV
}

// GetBSVOk returns a tuple with the BSV field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningStatisticsUserStatusV1RespDataProfitToday) GetBSVOk() (*string, bool) {
	if o == nil || IsNil(o.BSV) {
		return nil, false
	}
	return o.BSV, true
}

// HasBSV returns a boolean if a field has been set.
func (o *GetMiningStatisticsUserStatusV1RespDataProfitToday) HasBSV() bool {
	if o != nil && !IsNil(o.BSV) {
		return true
	}

	return false
}

// SetBSV gets a reference to the given string and assigns it to the BSV field.
func (o *GetMiningStatisticsUserStatusV1RespDataProfitToday) SetBSV(v string) {
	o.BSV = &v
}

// GetBTC returns the BTC field value if set, zero value otherwise.
func (o *GetMiningStatisticsUserStatusV1RespDataProfitToday) GetBTC() string {
	if o == nil || IsNil(o.BTC) {
		var ret string
		return ret
	}
	return *o.BTC
}

// GetBTCOk returns a tuple with the BTC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningStatisticsUserStatusV1RespDataProfitToday) GetBTCOk() (*string, bool) {
	if o == nil || IsNil(o.BTC) {
		return nil, false
	}
	return o.BTC, true
}

// HasBTC returns a boolean if a field has been set.
func (o *GetMiningStatisticsUserStatusV1RespDataProfitToday) HasBTC() bool {
	if o != nil && !IsNil(o.BTC) {
		return true
	}

	return false
}

// SetBTC gets a reference to the given string and assigns it to the BTC field.
func (o *GetMiningStatisticsUserStatusV1RespDataProfitToday) SetBTC(v string) {
	o.BTC = &v
}

func (o GetMiningStatisticsUserStatusV1RespDataProfitToday) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMiningStatisticsUserStatusV1RespDataProfitToday) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BCH) {
		toSerialize["BCH"] = o.BCH
	}
	if !IsNil(o.BSV) {
		toSerialize["BSV"] = o.BSV
	}
	if !IsNil(o.BTC) {
		toSerialize["BTC"] = o.BTC
	}
	return toSerialize, nil
}

type NullableGetMiningStatisticsUserStatusV1RespDataProfitToday struct {
	value *GetMiningStatisticsUserStatusV1RespDataProfitToday
	isSet bool
}

func (v NullableGetMiningStatisticsUserStatusV1RespDataProfitToday) Get() *GetMiningStatisticsUserStatusV1RespDataProfitToday {
	return v.value
}

func (v *NullableGetMiningStatisticsUserStatusV1RespDataProfitToday) Set(val *GetMiningStatisticsUserStatusV1RespDataProfitToday) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMiningStatisticsUserStatusV1RespDataProfitToday) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMiningStatisticsUserStatusV1RespDataProfitToday) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMiningStatisticsUserStatusV1RespDataProfitToday(val *GetMiningStatisticsUserStatusV1RespDataProfitToday) *NullableGetMiningStatisticsUserStatusV1RespDataProfitToday {
	return &NullableGetMiningStatisticsUserStatusV1RespDataProfitToday{value: val, isSet: true}
}

func (v NullableGetMiningStatisticsUserStatusV1RespDataProfitToday) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMiningStatisticsUserStatusV1RespDataProfitToday) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


