/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateBrokerTransferFuturesV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBrokerTransferFuturesV1Resp{}

// CreateBrokerTransferFuturesV1Resp struct for CreateBrokerTransferFuturesV1Resp
type CreateBrokerTransferFuturesV1Resp struct {
	ClientTranId *string `json:"clientTranId,omitempty"`
	Success *bool `json:"success,omitempty"`
	TxnId *string `json:"txnId,omitempty"`
}

// NewCreateBrokerTransferFuturesV1Resp instantiates a new CreateBrokerTransferFuturesV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBrokerTransferFuturesV1Resp() *CreateBrokerTransferFuturesV1Resp {
	this := CreateBrokerTransferFuturesV1Resp{}
	return &this
}

// NewCreateBrokerTransferFuturesV1RespWithDefaults instantiates a new CreateBrokerTransferFuturesV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBrokerTransferFuturesV1RespWithDefaults() *CreateBrokerTransferFuturesV1Resp {
	this := CreateBrokerTransferFuturesV1Resp{}
	return &this
}

// GetClientTranId returns the ClientTranId field value if set, zero value otherwise.
func (o *CreateBrokerTransferFuturesV1Resp) GetClientTranId() string {
	if o == nil || IsNil(o.ClientTranId) {
		var ret string
		return ret
	}
	return *o.ClientTranId
}

// GetClientTranIdOk returns a tuple with the ClientTranId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerTransferFuturesV1Resp) GetClientTranIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientTranId) {
		return nil, false
	}
	return o.ClientTranId, true
}

// HasClientTranId returns a boolean if a field has been set.
func (o *CreateBrokerTransferFuturesV1Resp) HasClientTranId() bool {
	if o != nil && !IsNil(o.ClientTranId) {
		return true
	}

	return false
}

// SetClientTranId gets a reference to the given string and assigns it to the ClientTranId field.
func (o *CreateBrokerTransferFuturesV1Resp) SetClientTranId(v string) {
	o.ClientTranId = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *CreateBrokerTransferFuturesV1Resp) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerTransferFuturesV1Resp) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *CreateBrokerTransferFuturesV1Resp) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *CreateBrokerTransferFuturesV1Resp) SetSuccess(v bool) {
	o.Success = &v
}

// GetTxnId returns the TxnId field value if set, zero value otherwise.
func (o *CreateBrokerTransferFuturesV1Resp) GetTxnId() string {
	if o == nil || IsNil(o.TxnId) {
		var ret string
		return ret
	}
	return *o.TxnId
}

// GetTxnIdOk returns a tuple with the TxnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBrokerTransferFuturesV1Resp) GetTxnIdOk() (*string, bool) {
	if o == nil || IsNil(o.TxnId) {
		return nil, false
	}
	return o.TxnId, true
}

// HasTxnId returns a boolean if a field has been set.
func (o *CreateBrokerTransferFuturesV1Resp) HasTxnId() bool {
	if o != nil && !IsNil(o.TxnId) {
		return true
	}

	return false
}

// SetTxnId gets a reference to the given string and assigns it to the TxnId field.
func (o *CreateBrokerTransferFuturesV1Resp) SetTxnId(v string) {
	o.TxnId = &v
}

func (o CreateBrokerTransferFuturesV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBrokerTransferFuturesV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientTranId) {
		toSerialize["clientTranId"] = o.ClientTranId
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.TxnId) {
		toSerialize["txnId"] = o.TxnId
	}
	return toSerialize, nil
}

type NullableCreateBrokerTransferFuturesV1Resp struct {
	value *CreateBrokerTransferFuturesV1Resp
	isSet bool
}

func (v NullableCreateBrokerTransferFuturesV1Resp) Get() *CreateBrokerTransferFuturesV1Resp {
	return v.value
}

func (v *NullableCreateBrokerTransferFuturesV1Resp) Set(val *CreateBrokerTransferFuturesV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBrokerTransferFuturesV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBrokerTransferFuturesV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBrokerTransferFuturesV1Resp(val *CreateBrokerTransferFuturesV1Resp) *NullableCreateBrokerTransferFuturesV1Resp {
	return &NullableCreateBrokerTransferFuturesV1Resp{value: val, isSet: true}
}

func (v NullableCreateBrokerTransferFuturesV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBrokerTransferFuturesV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


