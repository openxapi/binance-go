/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetBrokerInfoV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBrokerInfoV1Resp{}

// GetBrokerInfoV1Resp struct for GetBrokerInfoV1Resp
type GetBrokerInfoV1Resp struct {
	MaxMakerCommission *float32 `json:"maxMakerCommission,omitempty"`
	MaxSubAccountQty *int32 `json:"maxSubAccountQty,omitempty"`
	MaxTakerCommission *float32 `json:"maxTakerCommission,omitempty"`
	MinMakerCommission *float32 `json:"minMakerCommission,omitempty"`
	MinTakerCommission *float32 `json:"minTakerCommission,omitempty"`
	SubAccountQty *int32 `json:"subAccountQty,omitempty"`
}

// NewGetBrokerInfoV1Resp instantiates a new GetBrokerInfoV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBrokerInfoV1Resp() *GetBrokerInfoV1Resp {
	this := GetBrokerInfoV1Resp{}
	return &this
}

// NewGetBrokerInfoV1RespWithDefaults instantiates a new GetBrokerInfoV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBrokerInfoV1RespWithDefaults() *GetBrokerInfoV1Resp {
	this := GetBrokerInfoV1Resp{}
	return &this
}

// GetMaxMakerCommission returns the MaxMakerCommission field value if set, zero value otherwise.
func (o *GetBrokerInfoV1Resp) GetMaxMakerCommission() float32 {
	if o == nil || IsNil(o.MaxMakerCommission) {
		var ret float32
		return ret
	}
	return *o.MaxMakerCommission
}

// GetMaxMakerCommissionOk returns a tuple with the MaxMakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerInfoV1Resp) GetMaxMakerCommissionOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxMakerCommission) {
		return nil, false
	}
	return o.MaxMakerCommission, true
}

// HasMaxMakerCommission returns a boolean if a field has been set.
func (o *GetBrokerInfoV1Resp) HasMaxMakerCommission() bool {
	if o != nil && !IsNil(o.MaxMakerCommission) {
		return true
	}

	return false
}

// SetMaxMakerCommission gets a reference to the given float32 and assigns it to the MaxMakerCommission field.
func (o *GetBrokerInfoV1Resp) SetMaxMakerCommission(v float32) {
	o.MaxMakerCommission = &v
}

// GetMaxSubAccountQty returns the MaxSubAccountQty field value if set, zero value otherwise.
func (o *GetBrokerInfoV1Resp) GetMaxSubAccountQty() int32 {
	if o == nil || IsNil(o.MaxSubAccountQty) {
		var ret int32
		return ret
	}
	return *o.MaxSubAccountQty
}

// GetMaxSubAccountQtyOk returns a tuple with the MaxSubAccountQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerInfoV1Resp) GetMaxSubAccountQtyOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSubAccountQty) {
		return nil, false
	}
	return o.MaxSubAccountQty, true
}

// HasMaxSubAccountQty returns a boolean if a field has been set.
func (o *GetBrokerInfoV1Resp) HasMaxSubAccountQty() bool {
	if o != nil && !IsNil(o.MaxSubAccountQty) {
		return true
	}

	return false
}

// SetMaxSubAccountQty gets a reference to the given int32 and assigns it to the MaxSubAccountQty field.
func (o *GetBrokerInfoV1Resp) SetMaxSubAccountQty(v int32) {
	o.MaxSubAccountQty = &v
}

// GetMaxTakerCommission returns the MaxTakerCommission field value if set, zero value otherwise.
func (o *GetBrokerInfoV1Resp) GetMaxTakerCommission() float32 {
	if o == nil || IsNil(o.MaxTakerCommission) {
		var ret float32
		return ret
	}
	return *o.MaxTakerCommission
}

// GetMaxTakerCommissionOk returns a tuple with the MaxTakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerInfoV1Resp) GetMaxTakerCommissionOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxTakerCommission) {
		return nil, false
	}
	return o.MaxTakerCommission, true
}

// HasMaxTakerCommission returns a boolean if a field has been set.
func (o *GetBrokerInfoV1Resp) HasMaxTakerCommission() bool {
	if o != nil && !IsNil(o.MaxTakerCommission) {
		return true
	}

	return false
}

// SetMaxTakerCommission gets a reference to the given float32 and assigns it to the MaxTakerCommission field.
func (o *GetBrokerInfoV1Resp) SetMaxTakerCommission(v float32) {
	o.MaxTakerCommission = &v
}

// GetMinMakerCommission returns the MinMakerCommission field value if set, zero value otherwise.
func (o *GetBrokerInfoV1Resp) GetMinMakerCommission() float32 {
	if o == nil || IsNil(o.MinMakerCommission) {
		var ret float32
		return ret
	}
	return *o.MinMakerCommission
}

// GetMinMakerCommissionOk returns a tuple with the MinMakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerInfoV1Resp) GetMinMakerCommissionOk() (*float32, bool) {
	if o == nil || IsNil(o.MinMakerCommission) {
		return nil, false
	}
	return o.MinMakerCommission, true
}

// HasMinMakerCommission returns a boolean if a field has been set.
func (o *GetBrokerInfoV1Resp) HasMinMakerCommission() bool {
	if o != nil && !IsNil(o.MinMakerCommission) {
		return true
	}

	return false
}

// SetMinMakerCommission gets a reference to the given float32 and assigns it to the MinMakerCommission field.
func (o *GetBrokerInfoV1Resp) SetMinMakerCommission(v float32) {
	o.MinMakerCommission = &v
}

// GetMinTakerCommission returns the MinTakerCommission field value if set, zero value otherwise.
func (o *GetBrokerInfoV1Resp) GetMinTakerCommission() float32 {
	if o == nil || IsNil(o.MinTakerCommission) {
		var ret float32
		return ret
	}
	return *o.MinTakerCommission
}

// GetMinTakerCommissionOk returns a tuple with the MinTakerCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerInfoV1Resp) GetMinTakerCommissionOk() (*float32, bool) {
	if o == nil || IsNil(o.MinTakerCommission) {
		return nil, false
	}
	return o.MinTakerCommission, true
}

// HasMinTakerCommission returns a boolean if a field has been set.
func (o *GetBrokerInfoV1Resp) HasMinTakerCommission() bool {
	if o != nil && !IsNil(o.MinTakerCommission) {
		return true
	}

	return false
}

// SetMinTakerCommission gets a reference to the given float32 and assigns it to the MinTakerCommission field.
func (o *GetBrokerInfoV1Resp) SetMinTakerCommission(v float32) {
	o.MinTakerCommission = &v
}

// GetSubAccountQty returns the SubAccountQty field value if set, zero value otherwise.
func (o *GetBrokerInfoV1Resp) GetSubAccountQty() int32 {
	if o == nil || IsNil(o.SubAccountQty) {
		var ret int32
		return ret
	}
	return *o.SubAccountQty
}

// GetSubAccountQtyOk returns a tuple with the SubAccountQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBrokerInfoV1Resp) GetSubAccountQtyOk() (*int32, bool) {
	if o == nil || IsNil(o.SubAccountQty) {
		return nil, false
	}
	return o.SubAccountQty, true
}

// HasSubAccountQty returns a boolean if a field has been set.
func (o *GetBrokerInfoV1Resp) HasSubAccountQty() bool {
	if o != nil && !IsNil(o.SubAccountQty) {
		return true
	}

	return false
}

// SetSubAccountQty gets a reference to the given int32 and assigns it to the SubAccountQty field.
func (o *GetBrokerInfoV1Resp) SetSubAccountQty(v int32) {
	o.SubAccountQty = &v
}

func (o GetBrokerInfoV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBrokerInfoV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxMakerCommission) {
		toSerialize["maxMakerCommission"] = o.MaxMakerCommission
	}
	if !IsNil(o.MaxSubAccountQty) {
		toSerialize["maxSubAccountQty"] = o.MaxSubAccountQty
	}
	if !IsNil(o.MaxTakerCommission) {
		toSerialize["maxTakerCommission"] = o.MaxTakerCommission
	}
	if !IsNil(o.MinMakerCommission) {
		toSerialize["minMakerCommission"] = o.MinMakerCommission
	}
	if !IsNil(o.MinTakerCommission) {
		toSerialize["minTakerCommission"] = o.MinTakerCommission
	}
	if !IsNil(o.SubAccountQty) {
		toSerialize["subAccountQty"] = o.SubAccountQty
	}
	return toSerialize, nil
}

type NullableGetBrokerInfoV1Resp struct {
	value *GetBrokerInfoV1Resp
	isSet bool
}

func (v NullableGetBrokerInfoV1Resp) Get() *GetBrokerInfoV1Resp {
	return v.value
}

func (v *NullableGetBrokerInfoV1Resp) Set(val *GetBrokerInfoV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBrokerInfoV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBrokerInfoV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBrokerInfoV1Resp(val *GetBrokerInfoV1Resp) *NullableGetBrokerInfoV1Resp {
	return &NullableGetBrokerInfoV1Resp{value: val, isSet: true}
}

func (v NullableGetBrokerInfoV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBrokerInfoV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


