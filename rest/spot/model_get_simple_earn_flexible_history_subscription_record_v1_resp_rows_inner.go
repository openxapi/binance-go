/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner{}

// GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner struct for GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner
type GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner struct {
	Amount *string `json:"amount,omitempty"`
	AmtFromFunding *string `json:"amtFromFunding,omitempty"`
	AmtFromSpot *string `json:"amtFromSpot,omitempty"`
	Asset *string `json:"asset,omitempty"`
	ProductId *string `json:"productId,omitempty"`
	PurchaseId *int64 `json:"purchaseId,omitempty"`
	SourceAccount *string `json:"sourceAccount,omitempty"`
	Status *string `json:"status,omitempty"`
	Time *int64 `json:"time,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner instantiates a new GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner() *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner {
	this := GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner{}
	return &this
}

// NewGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInnerWithDefaults instantiates a new GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInnerWithDefaults() *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner {
	this := GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) SetAmount(v string) {
	o.Amount = &v
}

// GetAmtFromFunding returns the AmtFromFunding field value if set, zero value otherwise.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetAmtFromFunding() string {
	if o == nil || IsNil(o.AmtFromFunding) {
		var ret string
		return ret
	}
	return *o.AmtFromFunding
}

// GetAmtFromFundingOk returns a tuple with the AmtFromFunding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetAmtFromFundingOk() (*string, bool) {
	if o == nil || IsNil(o.AmtFromFunding) {
		return nil, false
	}
	return o.AmtFromFunding, true
}

// HasAmtFromFunding returns a boolean if a field has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) HasAmtFromFunding() bool {
	if o != nil && !IsNil(o.AmtFromFunding) {
		return true
	}

	return false
}

// SetAmtFromFunding gets a reference to the given string and assigns it to the AmtFromFunding field.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) SetAmtFromFunding(v string) {
	o.AmtFromFunding = &v
}

// GetAmtFromSpot returns the AmtFromSpot field value if set, zero value otherwise.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetAmtFromSpot() string {
	if o == nil || IsNil(o.AmtFromSpot) {
		var ret string
		return ret
	}
	return *o.AmtFromSpot
}

// GetAmtFromSpotOk returns a tuple with the AmtFromSpot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetAmtFromSpotOk() (*string, bool) {
	if o == nil || IsNil(o.AmtFromSpot) {
		return nil, false
	}
	return o.AmtFromSpot, true
}

// HasAmtFromSpot returns a boolean if a field has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) HasAmtFromSpot() bool {
	if o != nil && !IsNil(o.AmtFromSpot) {
		return true
	}

	return false
}

// SetAmtFromSpot gets a reference to the given string and assigns it to the AmtFromSpot field.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) SetAmtFromSpot(v string) {
	o.AmtFromSpot = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) SetAsset(v string) {
	o.Asset = &v
}

// GetProductId returns the ProductId field value if set, zero value otherwise.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetProductId() string {
	if o == nil || IsNil(o.ProductId) {
		var ret string
		return ret
	}
	return *o.ProductId
}

// GetProductIdOk returns a tuple with the ProductId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetProductIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProductId) {
		return nil, false
	}
	return o.ProductId, true
}

// HasProductId returns a boolean if a field has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) HasProductId() bool {
	if o != nil && !IsNil(o.ProductId) {
		return true
	}

	return false
}

// SetProductId gets a reference to the given string and assigns it to the ProductId field.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) SetProductId(v string) {
	o.ProductId = &v
}

// GetPurchaseId returns the PurchaseId field value if set, zero value otherwise.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetPurchaseId() int64 {
	if o == nil || IsNil(o.PurchaseId) {
		var ret int64
		return ret
	}
	return *o.PurchaseId
}

// GetPurchaseIdOk returns a tuple with the PurchaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetPurchaseIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PurchaseId) {
		return nil, false
	}
	return o.PurchaseId, true
}

// HasPurchaseId returns a boolean if a field has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) HasPurchaseId() bool {
	if o != nil && !IsNil(o.PurchaseId) {
		return true
	}

	return false
}

// SetPurchaseId gets a reference to the given int64 and assigns it to the PurchaseId field.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) SetPurchaseId(v int64) {
	o.PurchaseId = &v
}

// GetSourceAccount returns the SourceAccount field value if set, zero value otherwise.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetSourceAccount() string {
	if o == nil || IsNil(o.SourceAccount) {
		var ret string
		return ret
	}
	return *o.SourceAccount
}

// GetSourceAccountOk returns a tuple with the SourceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetSourceAccountOk() (*string, bool) {
	if o == nil || IsNil(o.SourceAccount) {
		return nil, false
	}
	return o.SourceAccount, true
}

// HasSourceAccount returns a boolean if a field has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) HasSourceAccount() bool {
	if o != nil && !IsNil(o.SourceAccount) {
		return true
	}

	return false
}

// SetSourceAccount gets a reference to the given string and assigns it to the SourceAccount field.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) SetSourceAccount(v string) {
	o.SourceAccount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) SetStatus(v string) {
	o.Status = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) SetTime(v int64) {
	o.Time = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) SetType(v string) {
	o.Type = &v
}

func (o GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.AmtFromFunding) {
		toSerialize["amtFromFunding"] = o.AmtFromFunding
	}
	if !IsNil(o.AmtFromSpot) {
		toSerialize["amtFromSpot"] = o.AmtFromSpot
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.ProductId) {
		toSerialize["productId"] = o.ProductId
	}
	if !IsNil(o.PurchaseId) {
		toSerialize["purchaseId"] = o.PurchaseId
	}
	if !IsNil(o.SourceAccount) {
		toSerialize["sourceAccount"] = o.SourceAccount
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner struct {
	value *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner
	isSet bool
}

func (v NullableGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) Get() *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner {
	return v.value
}

func (v *NullableGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) Set(val *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner(val *GetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) *NullableGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner {
	return &NullableGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner{value: val, isSet: true}
}

func (v NullableGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSimpleEarnFlexibleHistorySubscriptionRecordV1RespRowsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


