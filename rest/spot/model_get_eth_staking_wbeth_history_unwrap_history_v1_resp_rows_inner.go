/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner{}

// GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner struct for GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner
type GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner struct {
	ExchangeRate *string `json:"exchangeRate,omitempty"`
	FromAmount *string `json:"fromAmount,omitempty"`
	FromAsset *string `json:"fromAsset,omitempty"`
	Status *string `json:"status,omitempty"`
	Time *int64 `json:"time,omitempty"`
	ToAmount *string `json:"toAmount,omitempty"`
	ToAsset *string `json:"toAsset,omitempty"`
}

// NewGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner instantiates a new GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner() *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner {
	this := GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner{}
	return &this
}

// NewGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInnerWithDefaults instantiates a new GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInnerWithDefaults() *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner {
	this := GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner{}
	return &this
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetExchangeRate() string {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret string
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetExchangeRateOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given string and assigns it to the ExchangeRate field.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) SetExchangeRate(v string) {
	o.ExchangeRate = &v
}

// GetFromAmount returns the FromAmount field value if set, zero value otherwise.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetFromAmount() string {
	if o == nil || IsNil(o.FromAmount) {
		var ret string
		return ret
	}
	return *o.FromAmount
}

// GetFromAmountOk returns a tuple with the FromAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetFromAmountOk() (*string, bool) {
	if o == nil || IsNil(o.FromAmount) {
		return nil, false
	}
	return o.FromAmount, true
}

// HasFromAmount returns a boolean if a field has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) HasFromAmount() bool {
	if o != nil && !IsNil(o.FromAmount) {
		return true
	}

	return false
}

// SetFromAmount gets a reference to the given string and assigns it to the FromAmount field.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) SetFromAmount(v string) {
	o.FromAmount = &v
}

// GetFromAsset returns the FromAsset field value if set, zero value otherwise.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetFromAsset() string {
	if o == nil || IsNil(o.FromAsset) {
		var ret string
		return ret
	}
	return *o.FromAsset
}

// GetFromAssetOk returns a tuple with the FromAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetFromAssetOk() (*string, bool) {
	if o == nil || IsNil(o.FromAsset) {
		return nil, false
	}
	return o.FromAsset, true
}

// HasFromAsset returns a boolean if a field has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) HasFromAsset() bool {
	if o != nil && !IsNil(o.FromAsset) {
		return true
	}

	return false
}

// SetFromAsset gets a reference to the given string and assigns it to the FromAsset field.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) SetFromAsset(v string) {
	o.FromAsset = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) SetStatus(v string) {
	o.Status = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) SetTime(v int64) {
	o.Time = &v
}

// GetToAmount returns the ToAmount field value if set, zero value otherwise.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetToAmount() string {
	if o == nil || IsNil(o.ToAmount) {
		var ret string
		return ret
	}
	return *o.ToAmount
}

// GetToAmountOk returns a tuple with the ToAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetToAmountOk() (*string, bool) {
	if o == nil || IsNil(o.ToAmount) {
		return nil, false
	}
	return o.ToAmount, true
}

// HasToAmount returns a boolean if a field has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) HasToAmount() bool {
	if o != nil && !IsNil(o.ToAmount) {
		return true
	}

	return false
}

// SetToAmount gets a reference to the given string and assigns it to the ToAmount field.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) SetToAmount(v string) {
	o.ToAmount = &v
}

// GetToAsset returns the ToAsset field value if set, zero value otherwise.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetToAsset() string {
	if o == nil || IsNil(o.ToAsset) {
		var ret string
		return ret
	}
	return *o.ToAsset
}

// GetToAssetOk returns a tuple with the ToAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) GetToAssetOk() (*string, bool) {
	if o == nil || IsNil(o.ToAsset) {
		return nil, false
	}
	return o.ToAsset, true
}

// HasToAsset returns a boolean if a field has been set.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) HasToAsset() bool {
	if o != nil && !IsNil(o.ToAsset) {
		return true
	}

	return false
}

// SetToAsset gets a reference to the given string and assigns it to the ToAsset field.
func (o *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) SetToAsset(v string) {
	o.ToAsset = &v
}

func (o GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.FromAmount) {
		toSerialize["fromAmount"] = o.FromAmount
	}
	if !IsNil(o.FromAsset) {
		toSerialize["fromAsset"] = o.FromAsset
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.ToAmount) {
		toSerialize["toAmount"] = o.ToAmount
	}
	if !IsNil(o.ToAsset) {
		toSerialize["toAsset"] = o.ToAsset
	}
	return toSerialize, nil
}

type NullableGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner struct {
	value *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner
	isSet bool
}

func (v NullableGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) Get() *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner {
	return v.value
}

func (v *NullableGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) Set(val *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner(val *GetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) *NullableGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner {
	return &NullableGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner{value: val, isSet: true}
}

func (v NullableGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEthStakingWbethHistoryUnwrapHistoryV1RespRowsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


