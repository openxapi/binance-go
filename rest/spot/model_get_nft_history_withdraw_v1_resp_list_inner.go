/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetNftHistoryWithdrawV1RespListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNftHistoryWithdrawV1RespListInner{}

// GetNftHistoryWithdrawV1RespListInner struct for GetNftHistoryWithdrawV1RespListInner
type GetNftHistoryWithdrawV1RespListInner struct {
	ContractAdrress *string `json:"contractAdrress,omitempty"`
	Fee *float32 `json:"fee,omitempty"`
	FeeAsset *string `json:"feeAsset,omitempty"`
	Network *string `json:"network,omitempty"`
	Timestamp *int64 `json:"timestamp,omitempty"`
	TokenId *string `json:"tokenId,omitempty"`
	TxID *string `json:"txID,omitempty"`
}

// NewGetNftHistoryWithdrawV1RespListInner instantiates a new GetNftHistoryWithdrawV1RespListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNftHistoryWithdrawV1RespListInner() *GetNftHistoryWithdrawV1RespListInner {
	this := GetNftHistoryWithdrawV1RespListInner{}
	return &this
}

// NewGetNftHistoryWithdrawV1RespListInnerWithDefaults instantiates a new GetNftHistoryWithdrawV1RespListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNftHistoryWithdrawV1RespListInnerWithDefaults() *GetNftHistoryWithdrawV1RespListInner {
	this := GetNftHistoryWithdrawV1RespListInner{}
	return &this
}

// GetContractAdrress returns the ContractAdrress field value if set, zero value otherwise.
func (o *GetNftHistoryWithdrawV1RespListInner) GetContractAdrress() string {
	if o == nil || IsNil(o.ContractAdrress) {
		var ret string
		return ret
	}
	return *o.ContractAdrress
}

// GetContractAdrressOk returns a tuple with the ContractAdrress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) GetContractAdrressOk() (*string, bool) {
	if o == nil || IsNil(o.ContractAdrress) {
		return nil, false
	}
	return o.ContractAdrress, true
}

// HasContractAdrress returns a boolean if a field has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) HasContractAdrress() bool {
	if o != nil && !IsNil(o.ContractAdrress) {
		return true
	}

	return false
}

// SetContractAdrress gets a reference to the given string and assigns it to the ContractAdrress field.
func (o *GetNftHistoryWithdrawV1RespListInner) SetContractAdrress(v string) {
	o.ContractAdrress = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *GetNftHistoryWithdrawV1RespListInner) GetFee() float32 {
	if o == nil || IsNil(o.Fee) {
		var ret float32
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) GetFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given float32 and assigns it to the Fee field.
func (o *GetNftHistoryWithdrawV1RespListInner) SetFee(v float32) {
	o.Fee = &v
}

// GetFeeAsset returns the FeeAsset field value if set, zero value otherwise.
func (o *GetNftHistoryWithdrawV1RespListInner) GetFeeAsset() string {
	if o == nil || IsNil(o.FeeAsset) {
		var ret string
		return ret
	}
	return *o.FeeAsset
}

// GetFeeAssetOk returns a tuple with the FeeAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) GetFeeAssetOk() (*string, bool) {
	if o == nil || IsNil(o.FeeAsset) {
		return nil, false
	}
	return o.FeeAsset, true
}

// HasFeeAsset returns a boolean if a field has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) HasFeeAsset() bool {
	if o != nil && !IsNil(o.FeeAsset) {
		return true
	}

	return false
}

// SetFeeAsset gets a reference to the given string and assigns it to the FeeAsset field.
func (o *GetNftHistoryWithdrawV1RespListInner) SetFeeAsset(v string) {
	o.FeeAsset = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *GetNftHistoryWithdrawV1RespListInner) GetNetwork() string {
	if o == nil || IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) GetNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *GetNftHistoryWithdrawV1RespListInner) SetNetwork(v string) {
	o.Network = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *GetNftHistoryWithdrawV1RespListInner) GetTimestamp() int64 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) GetTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *GetNftHistoryWithdrawV1RespListInner) SetTimestamp(v int64) {
	o.Timestamp = &v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *GetNftHistoryWithdrawV1RespListInner) GetTokenId() string {
	if o == nil || IsNil(o.TokenId) {
		var ret string
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) GetTokenIdOk() (*string, bool) {
	if o == nil || IsNil(o.TokenId) {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) HasTokenId() bool {
	if o != nil && !IsNil(o.TokenId) {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given string and assigns it to the TokenId field.
func (o *GetNftHistoryWithdrawV1RespListInner) SetTokenId(v string) {
	o.TokenId = &v
}

// GetTxID returns the TxID field value if set, zero value otherwise.
func (o *GetNftHistoryWithdrawV1RespListInner) GetTxID() string {
	if o == nil || IsNil(o.TxID) {
		var ret string
		return ret
	}
	return *o.TxID
}

// GetTxIDOk returns a tuple with the TxID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) GetTxIDOk() (*string, bool) {
	if o == nil || IsNil(o.TxID) {
		return nil, false
	}
	return o.TxID, true
}

// HasTxID returns a boolean if a field has been set.
func (o *GetNftHistoryWithdrawV1RespListInner) HasTxID() bool {
	if o != nil && !IsNil(o.TxID) {
		return true
	}

	return false
}

// SetTxID gets a reference to the given string and assigns it to the TxID field.
func (o *GetNftHistoryWithdrawV1RespListInner) SetTxID(v string) {
	o.TxID = &v
}

func (o GetNftHistoryWithdrawV1RespListInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNftHistoryWithdrawV1RespListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractAdrress) {
		toSerialize["contractAdrress"] = o.ContractAdrress
	}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !IsNil(o.FeeAsset) {
		toSerialize["feeAsset"] = o.FeeAsset
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.TokenId) {
		toSerialize["tokenId"] = o.TokenId
	}
	if !IsNil(o.TxID) {
		toSerialize["txID"] = o.TxID
	}
	return toSerialize, nil
}

type NullableGetNftHistoryWithdrawV1RespListInner struct {
	value *GetNftHistoryWithdrawV1RespListInner
	isSet bool
}

func (v NullableGetNftHistoryWithdrawV1RespListInner) Get() *GetNftHistoryWithdrawV1RespListInner {
	return v.value
}

func (v *NullableGetNftHistoryWithdrawV1RespListInner) Set(val *GetNftHistoryWithdrawV1RespListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNftHistoryWithdrawV1RespListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNftHistoryWithdrawV1RespListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNftHistoryWithdrawV1RespListInner(val *GetNftHistoryWithdrawV1RespListInner) *NullableGetNftHistoryWithdrawV1RespListInner {
	return &NullableGetNftHistoryWithdrawV1RespListInner{value: val, isSet: true}
}

func (v NullableGetNftHistoryWithdrawV1RespListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNftHistoryWithdrawV1RespListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


