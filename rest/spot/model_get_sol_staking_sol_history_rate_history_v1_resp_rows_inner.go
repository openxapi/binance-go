/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetSolStakingSolHistoryRateHistoryV1RespRowsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSolStakingSolHistoryRateHistoryV1RespRowsInner{}

// GetSolStakingSolHistoryRateHistoryV1RespRowsInner struct for GetSolStakingSolHistoryRateHistoryV1RespRowsInner
type GetSolStakingSolHistoryRateHistoryV1RespRowsInner struct {
	AnnualPercentageRate *string `json:"annualPercentageRate,omitempty"`
	BoostRewards []GetSolStakingSolHistoryRateHistoryV1RespRowsInnerBoostRewardsInner `json:"boostRewards,omitempty"`
	ExchangeRate *string `json:"exchangeRate,omitempty"`
	Time *int64 `json:"time,omitempty"`
}

// NewGetSolStakingSolHistoryRateHistoryV1RespRowsInner instantiates a new GetSolStakingSolHistoryRateHistoryV1RespRowsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSolStakingSolHistoryRateHistoryV1RespRowsInner() *GetSolStakingSolHistoryRateHistoryV1RespRowsInner {
	this := GetSolStakingSolHistoryRateHistoryV1RespRowsInner{}
	return &this
}

// NewGetSolStakingSolHistoryRateHistoryV1RespRowsInnerWithDefaults instantiates a new GetSolStakingSolHistoryRateHistoryV1RespRowsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSolStakingSolHistoryRateHistoryV1RespRowsInnerWithDefaults() *GetSolStakingSolHistoryRateHistoryV1RespRowsInner {
	this := GetSolStakingSolHistoryRateHistoryV1RespRowsInner{}
	return &this
}

// GetAnnualPercentageRate returns the AnnualPercentageRate field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) GetAnnualPercentageRate() string {
	if o == nil || IsNil(o.AnnualPercentageRate) {
		var ret string
		return ret
	}
	return *o.AnnualPercentageRate
}

// GetAnnualPercentageRateOk returns a tuple with the AnnualPercentageRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) GetAnnualPercentageRateOk() (*string, bool) {
	if o == nil || IsNil(o.AnnualPercentageRate) {
		return nil, false
	}
	return o.AnnualPercentageRate, true
}

// HasAnnualPercentageRate returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) HasAnnualPercentageRate() bool {
	if o != nil && !IsNil(o.AnnualPercentageRate) {
		return true
	}

	return false
}

// SetAnnualPercentageRate gets a reference to the given string and assigns it to the AnnualPercentageRate field.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) SetAnnualPercentageRate(v string) {
	o.AnnualPercentageRate = &v
}

// GetBoostRewards returns the BoostRewards field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) GetBoostRewards() []GetSolStakingSolHistoryRateHistoryV1RespRowsInnerBoostRewardsInner {
	if o == nil || IsNil(o.BoostRewards) {
		var ret []GetSolStakingSolHistoryRateHistoryV1RespRowsInnerBoostRewardsInner
		return ret
	}
	return o.BoostRewards
}

// GetBoostRewardsOk returns a tuple with the BoostRewards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) GetBoostRewardsOk() ([]GetSolStakingSolHistoryRateHistoryV1RespRowsInnerBoostRewardsInner, bool) {
	if o == nil || IsNil(o.BoostRewards) {
		return nil, false
	}
	return o.BoostRewards, true
}

// HasBoostRewards returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) HasBoostRewards() bool {
	if o != nil && !IsNil(o.BoostRewards) {
		return true
	}

	return false
}

// SetBoostRewards gets a reference to the given []GetSolStakingSolHistoryRateHistoryV1RespRowsInnerBoostRewardsInner and assigns it to the BoostRewards field.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) SetBoostRewards(v []GetSolStakingSolHistoryRateHistoryV1RespRowsInnerBoostRewardsInner) {
	o.BoostRewards = v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) GetExchangeRate() string {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret string
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) GetExchangeRateOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given string and assigns it to the ExchangeRate field.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) SetExchangeRate(v string) {
	o.ExchangeRate = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) SetTime(v int64) {
	o.Time = &v
}

func (o GetSolStakingSolHistoryRateHistoryV1RespRowsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSolStakingSolHistoryRateHistoryV1RespRowsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AnnualPercentageRate) {
		toSerialize["annualPercentageRate"] = o.AnnualPercentageRate
	}
	if !IsNil(o.BoostRewards) {
		toSerialize["boostRewards"] = o.BoostRewards
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableGetSolStakingSolHistoryRateHistoryV1RespRowsInner struct {
	value *GetSolStakingSolHistoryRateHistoryV1RespRowsInner
	isSet bool
}

func (v NullableGetSolStakingSolHistoryRateHistoryV1RespRowsInner) Get() *GetSolStakingSolHistoryRateHistoryV1RespRowsInner {
	return v.value
}

func (v *NullableGetSolStakingSolHistoryRateHistoryV1RespRowsInner) Set(val *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSolStakingSolHistoryRateHistoryV1RespRowsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSolStakingSolHistoryRateHistoryV1RespRowsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSolStakingSolHistoryRateHistoryV1RespRowsInner(val *GetSolStakingSolHistoryRateHistoryV1RespRowsInner) *NullableGetSolStakingSolHistoryRateHistoryV1RespRowsInner {
	return &NullableGetSolStakingSolHistoryRateHistoryV1RespRowsInner{value: val, isSet: true}
}

func (v NullableGetSolStakingSolHistoryRateHistoryV1RespRowsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSolStakingSolHistoryRateHistoryV1RespRowsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


