/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner{}

// GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner struct for GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner
type GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner struct {
	Amount *string `json:"amount,omitempty"`
	Asset *string `json:"asset,omitempty"`
	DeliverDate *string `json:"deliverDate,omitempty"`
	EstExtraRewardAmt *string `json:"estExtraRewardAmt,omitempty"`
	ExtraRewardAsset *string `json:"extraRewardAsset,omitempty"`
	IsComplete *bool `json:"isComplete,omitempty"`
	LockPeriod *string `json:"lockPeriod,omitempty"`
	LossAmount *string `json:"lossAmount,omitempty"`
	OriginalAmount *string `json:"originalAmount,omitempty"`
	PositionId *int64 `json:"positionId,omitempty"`
	RedeemId *int64 `json:"redeemId,omitempty"`
	RewardAmt *string `json:"rewardAmt,omitempty"`
	RewardAsset *string `json:"rewardAsset,omitempty"`
	Status *string `json:"status,omitempty"`
	Time *int64 `json:"time,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner instantiates a new GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner() *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner {
	this := GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner{}
	return &this
}

// NewGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInnerWithDefaults instantiates a new GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInnerWithDefaults() *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner {
	this := GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetAmount(v string) {
	o.Amount = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetAsset(v string) {
	o.Asset = &v
}

// GetDeliverDate returns the DeliverDate field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetDeliverDate() string {
	if o == nil || IsNil(o.DeliverDate) {
		var ret string
		return ret
	}
	return *o.DeliverDate
}

// GetDeliverDateOk returns a tuple with the DeliverDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetDeliverDateOk() (*string, bool) {
	if o == nil || IsNil(o.DeliverDate) {
		return nil, false
	}
	return o.DeliverDate, true
}

// HasDeliverDate returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasDeliverDate() bool {
	if o != nil && !IsNil(o.DeliverDate) {
		return true
	}

	return false
}

// SetDeliverDate gets a reference to the given string and assigns it to the DeliverDate field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetDeliverDate(v string) {
	o.DeliverDate = &v
}

// GetEstExtraRewardAmt returns the EstExtraRewardAmt field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetEstExtraRewardAmt() string {
	if o == nil || IsNil(o.EstExtraRewardAmt) {
		var ret string
		return ret
	}
	return *o.EstExtraRewardAmt
}

// GetEstExtraRewardAmtOk returns a tuple with the EstExtraRewardAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetEstExtraRewardAmtOk() (*string, bool) {
	if o == nil || IsNil(o.EstExtraRewardAmt) {
		return nil, false
	}
	return o.EstExtraRewardAmt, true
}

// HasEstExtraRewardAmt returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasEstExtraRewardAmt() bool {
	if o != nil && !IsNil(o.EstExtraRewardAmt) {
		return true
	}

	return false
}

// SetEstExtraRewardAmt gets a reference to the given string and assigns it to the EstExtraRewardAmt field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetEstExtraRewardAmt(v string) {
	o.EstExtraRewardAmt = &v
}

// GetExtraRewardAsset returns the ExtraRewardAsset field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetExtraRewardAsset() string {
	if o == nil || IsNil(o.ExtraRewardAsset) {
		var ret string
		return ret
	}
	return *o.ExtraRewardAsset
}

// GetExtraRewardAssetOk returns a tuple with the ExtraRewardAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetExtraRewardAssetOk() (*string, bool) {
	if o == nil || IsNil(o.ExtraRewardAsset) {
		return nil, false
	}
	return o.ExtraRewardAsset, true
}

// HasExtraRewardAsset returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasExtraRewardAsset() bool {
	if o != nil && !IsNil(o.ExtraRewardAsset) {
		return true
	}

	return false
}

// SetExtraRewardAsset gets a reference to the given string and assigns it to the ExtraRewardAsset field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetExtraRewardAsset(v string) {
	o.ExtraRewardAsset = &v
}

// GetIsComplete returns the IsComplete field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetIsComplete() bool {
	if o == nil || IsNil(o.IsComplete) {
		var ret bool
		return ret
	}
	return *o.IsComplete
}

// GetIsCompleteOk returns a tuple with the IsComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetIsCompleteOk() (*bool, bool) {
	if o == nil || IsNil(o.IsComplete) {
		return nil, false
	}
	return o.IsComplete, true
}

// HasIsComplete returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasIsComplete() bool {
	if o != nil && !IsNil(o.IsComplete) {
		return true
	}

	return false
}

// SetIsComplete gets a reference to the given bool and assigns it to the IsComplete field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetIsComplete(v bool) {
	o.IsComplete = &v
}

// GetLockPeriod returns the LockPeriod field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetLockPeriod() string {
	if o == nil || IsNil(o.LockPeriod) {
		var ret string
		return ret
	}
	return *o.LockPeriod
}

// GetLockPeriodOk returns a tuple with the LockPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetLockPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.LockPeriod) {
		return nil, false
	}
	return o.LockPeriod, true
}

// HasLockPeriod returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasLockPeriod() bool {
	if o != nil && !IsNil(o.LockPeriod) {
		return true
	}

	return false
}

// SetLockPeriod gets a reference to the given string and assigns it to the LockPeriod field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetLockPeriod(v string) {
	o.LockPeriod = &v
}

// GetLossAmount returns the LossAmount field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetLossAmount() string {
	if o == nil || IsNil(o.LossAmount) {
		var ret string
		return ret
	}
	return *o.LossAmount
}

// GetLossAmountOk returns a tuple with the LossAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetLossAmountOk() (*string, bool) {
	if o == nil || IsNil(o.LossAmount) {
		return nil, false
	}
	return o.LossAmount, true
}

// HasLossAmount returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasLossAmount() bool {
	if o != nil && !IsNil(o.LossAmount) {
		return true
	}

	return false
}

// SetLossAmount gets a reference to the given string and assigns it to the LossAmount field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetLossAmount(v string) {
	o.LossAmount = &v
}

// GetOriginalAmount returns the OriginalAmount field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetOriginalAmount() string {
	if o == nil || IsNil(o.OriginalAmount) {
		var ret string
		return ret
	}
	return *o.OriginalAmount
}

// GetOriginalAmountOk returns a tuple with the OriginalAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetOriginalAmountOk() (*string, bool) {
	if o == nil || IsNil(o.OriginalAmount) {
		return nil, false
	}
	return o.OriginalAmount, true
}

// HasOriginalAmount returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasOriginalAmount() bool {
	if o != nil && !IsNil(o.OriginalAmount) {
		return true
	}

	return false
}

// SetOriginalAmount gets a reference to the given string and assigns it to the OriginalAmount field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetOriginalAmount(v string) {
	o.OriginalAmount = &v
}

// GetPositionId returns the PositionId field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetPositionId() int64 {
	if o == nil || IsNil(o.PositionId) {
		var ret int64
		return ret
	}
	return *o.PositionId
}

// GetPositionIdOk returns a tuple with the PositionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetPositionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PositionId) {
		return nil, false
	}
	return o.PositionId, true
}

// HasPositionId returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasPositionId() bool {
	if o != nil && !IsNil(o.PositionId) {
		return true
	}

	return false
}

// SetPositionId gets a reference to the given int64 and assigns it to the PositionId field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetPositionId(v int64) {
	o.PositionId = &v
}

// GetRedeemId returns the RedeemId field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetRedeemId() int64 {
	if o == nil || IsNil(o.RedeemId) {
		var ret int64
		return ret
	}
	return *o.RedeemId
}

// GetRedeemIdOk returns a tuple with the RedeemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetRedeemIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RedeemId) {
		return nil, false
	}
	return o.RedeemId, true
}

// HasRedeemId returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasRedeemId() bool {
	if o != nil && !IsNil(o.RedeemId) {
		return true
	}

	return false
}

// SetRedeemId gets a reference to the given int64 and assigns it to the RedeemId field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetRedeemId(v int64) {
	o.RedeemId = &v
}

// GetRewardAmt returns the RewardAmt field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetRewardAmt() string {
	if o == nil || IsNil(o.RewardAmt) {
		var ret string
		return ret
	}
	return *o.RewardAmt
}

// GetRewardAmtOk returns a tuple with the RewardAmt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetRewardAmtOk() (*string, bool) {
	if o == nil || IsNil(o.RewardAmt) {
		return nil, false
	}
	return o.RewardAmt, true
}

// HasRewardAmt returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasRewardAmt() bool {
	if o != nil && !IsNil(o.RewardAmt) {
		return true
	}

	return false
}

// SetRewardAmt gets a reference to the given string and assigns it to the RewardAmt field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetRewardAmt(v string) {
	o.RewardAmt = &v
}

// GetRewardAsset returns the RewardAsset field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetRewardAsset() string {
	if o == nil || IsNil(o.RewardAsset) {
		var ret string
		return ret
	}
	return *o.RewardAsset
}

// GetRewardAssetOk returns a tuple with the RewardAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetRewardAssetOk() (*string, bool) {
	if o == nil || IsNil(o.RewardAsset) {
		return nil, false
	}
	return o.RewardAsset, true
}

// HasRewardAsset returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasRewardAsset() bool {
	if o != nil && !IsNil(o.RewardAsset) {
		return true
	}

	return false
}

// SetRewardAsset gets a reference to the given string and assigns it to the RewardAsset field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetRewardAsset(v string) {
	o.RewardAsset = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetStatus(v string) {
	o.Status = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetTime(v int64) {
	o.Time = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) SetType(v string) {
	o.Type = &v
}

func (o GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.DeliverDate) {
		toSerialize["deliverDate"] = o.DeliverDate
	}
	if !IsNil(o.EstExtraRewardAmt) {
		toSerialize["estExtraRewardAmt"] = o.EstExtraRewardAmt
	}
	if !IsNil(o.ExtraRewardAsset) {
		toSerialize["extraRewardAsset"] = o.ExtraRewardAsset
	}
	if !IsNil(o.IsComplete) {
		toSerialize["isComplete"] = o.IsComplete
	}
	if !IsNil(o.LockPeriod) {
		toSerialize["lockPeriod"] = o.LockPeriod
	}
	if !IsNil(o.LossAmount) {
		toSerialize["lossAmount"] = o.LossAmount
	}
	if !IsNil(o.OriginalAmount) {
		toSerialize["originalAmount"] = o.OriginalAmount
	}
	if !IsNil(o.PositionId) {
		toSerialize["positionId"] = o.PositionId
	}
	if !IsNil(o.RedeemId) {
		toSerialize["redeemId"] = o.RedeemId
	}
	if !IsNil(o.RewardAmt) {
		toSerialize["rewardAmt"] = o.RewardAmt
	}
	if !IsNil(o.RewardAsset) {
		toSerialize["rewardAsset"] = o.RewardAsset
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner struct {
	value *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner
	isSet bool
}

func (v NullableGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) Get() *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner {
	return v.value
}

func (v *NullableGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) Set(val *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner(val *GetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) *NullableGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner {
	return &NullableGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner{value: val, isSet: true}
}

func (v NullableGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSimpleEarnLockedHistoryRedemptionRecordV1RespRowsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


