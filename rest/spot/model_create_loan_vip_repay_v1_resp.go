/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateLoanVipRepayV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateLoanVipRepayV1Resp{}

// CreateLoanVipRepayV1Resp struct for CreateLoanVipRepayV1Resp
type CreateLoanVipRepayV1Resp struct {
	CollateralCoin *string `json:"collateralCoin,omitempty"`
	CurrentLTV *string `json:"currentLTV,omitempty"`
	LoanCoin *string `json:"loanCoin,omitempty"`
	RemainingInterest *string `json:"remainingInterest,omitempty"`
	RemainingPrincipal *string `json:"remainingPrincipal,omitempty"`
	RepayAmount *string `json:"repayAmount,omitempty"`
	RepayStatus *string `json:"repayStatus,omitempty"`
}

// NewCreateLoanVipRepayV1Resp instantiates a new CreateLoanVipRepayV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLoanVipRepayV1Resp() *CreateLoanVipRepayV1Resp {
	this := CreateLoanVipRepayV1Resp{}
	return &this
}

// NewCreateLoanVipRepayV1RespWithDefaults instantiates a new CreateLoanVipRepayV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLoanVipRepayV1RespWithDefaults() *CreateLoanVipRepayV1Resp {
	this := CreateLoanVipRepayV1Resp{}
	return &this
}

// GetCollateralCoin returns the CollateralCoin field value if set, zero value otherwise.
func (o *CreateLoanVipRepayV1Resp) GetCollateralCoin() string {
	if o == nil || IsNil(o.CollateralCoin) {
		var ret string
		return ret
	}
	return *o.CollateralCoin
}

// GetCollateralCoinOk returns a tuple with the CollateralCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoanVipRepayV1Resp) GetCollateralCoinOk() (*string, bool) {
	if o == nil || IsNil(o.CollateralCoin) {
		return nil, false
	}
	return o.CollateralCoin, true
}

// HasCollateralCoin returns a boolean if a field has been set.
func (o *CreateLoanVipRepayV1Resp) HasCollateralCoin() bool {
	if o != nil && !IsNil(o.CollateralCoin) {
		return true
	}

	return false
}

// SetCollateralCoin gets a reference to the given string and assigns it to the CollateralCoin field.
func (o *CreateLoanVipRepayV1Resp) SetCollateralCoin(v string) {
	o.CollateralCoin = &v
}

// GetCurrentLTV returns the CurrentLTV field value if set, zero value otherwise.
func (o *CreateLoanVipRepayV1Resp) GetCurrentLTV() string {
	if o == nil || IsNil(o.CurrentLTV) {
		var ret string
		return ret
	}
	return *o.CurrentLTV
}

// GetCurrentLTVOk returns a tuple with the CurrentLTV field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoanVipRepayV1Resp) GetCurrentLTVOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentLTV) {
		return nil, false
	}
	return o.CurrentLTV, true
}

// HasCurrentLTV returns a boolean if a field has been set.
func (o *CreateLoanVipRepayV1Resp) HasCurrentLTV() bool {
	if o != nil && !IsNil(o.CurrentLTV) {
		return true
	}

	return false
}

// SetCurrentLTV gets a reference to the given string and assigns it to the CurrentLTV field.
func (o *CreateLoanVipRepayV1Resp) SetCurrentLTV(v string) {
	o.CurrentLTV = &v
}

// GetLoanCoin returns the LoanCoin field value if set, zero value otherwise.
func (o *CreateLoanVipRepayV1Resp) GetLoanCoin() string {
	if o == nil || IsNil(o.LoanCoin) {
		var ret string
		return ret
	}
	return *o.LoanCoin
}

// GetLoanCoinOk returns a tuple with the LoanCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoanVipRepayV1Resp) GetLoanCoinOk() (*string, bool) {
	if o == nil || IsNil(o.LoanCoin) {
		return nil, false
	}
	return o.LoanCoin, true
}

// HasLoanCoin returns a boolean if a field has been set.
func (o *CreateLoanVipRepayV1Resp) HasLoanCoin() bool {
	if o != nil && !IsNil(o.LoanCoin) {
		return true
	}

	return false
}

// SetLoanCoin gets a reference to the given string and assigns it to the LoanCoin field.
func (o *CreateLoanVipRepayV1Resp) SetLoanCoin(v string) {
	o.LoanCoin = &v
}

// GetRemainingInterest returns the RemainingInterest field value if set, zero value otherwise.
func (o *CreateLoanVipRepayV1Resp) GetRemainingInterest() string {
	if o == nil || IsNil(o.RemainingInterest) {
		var ret string
		return ret
	}
	return *o.RemainingInterest
}

// GetRemainingInterestOk returns a tuple with the RemainingInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoanVipRepayV1Resp) GetRemainingInterestOk() (*string, bool) {
	if o == nil || IsNil(o.RemainingInterest) {
		return nil, false
	}
	return o.RemainingInterest, true
}

// HasRemainingInterest returns a boolean if a field has been set.
func (o *CreateLoanVipRepayV1Resp) HasRemainingInterest() bool {
	if o != nil && !IsNil(o.RemainingInterest) {
		return true
	}

	return false
}

// SetRemainingInterest gets a reference to the given string and assigns it to the RemainingInterest field.
func (o *CreateLoanVipRepayV1Resp) SetRemainingInterest(v string) {
	o.RemainingInterest = &v
}

// GetRemainingPrincipal returns the RemainingPrincipal field value if set, zero value otherwise.
func (o *CreateLoanVipRepayV1Resp) GetRemainingPrincipal() string {
	if o == nil || IsNil(o.RemainingPrincipal) {
		var ret string
		return ret
	}
	return *o.RemainingPrincipal
}

// GetRemainingPrincipalOk returns a tuple with the RemainingPrincipal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoanVipRepayV1Resp) GetRemainingPrincipalOk() (*string, bool) {
	if o == nil || IsNil(o.RemainingPrincipal) {
		return nil, false
	}
	return o.RemainingPrincipal, true
}

// HasRemainingPrincipal returns a boolean if a field has been set.
func (o *CreateLoanVipRepayV1Resp) HasRemainingPrincipal() bool {
	if o != nil && !IsNil(o.RemainingPrincipal) {
		return true
	}

	return false
}

// SetRemainingPrincipal gets a reference to the given string and assigns it to the RemainingPrincipal field.
func (o *CreateLoanVipRepayV1Resp) SetRemainingPrincipal(v string) {
	o.RemainingPrincipal = &v
}

// GetRepayAmount returns the RepayAmount field value if set, zero value otherwise.
func (o *CreateLoanVipRepayV1Resp) GetRepayAmount() string {
	if o == nil || IsNil(o.RepayAmount) {
		var ret string
		return ret
	}
	return *o.RepayAmount
}

// GetRepayAmountOk returns a tuple with the RepayAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoanVipRepayV1Resp) GetRepayAmountOk() (*string, bool) {
	if o == nil || IsNil(o.RepayAmount) {
		return nil, false
	}
	return o.RepayAmount, true
}

// HasRepayAmount returns a boolean if a field has been set.
func (o *CreateLoanVipRepayV1Resp) HasRepayAmount() bool {
	if o != nil && !IsNil(o.RepayAmount) {
		return true
	}

	return false
}

// SetRepayAmount gets a reference to the given string and assigns it to the RepayAmount field.
func (o *CreateLoanVipRepayV1Resp) SetRepayAmount(v string) {
	o.RepayAmount = &v
}

// GetRepayStatus returns the RepayStatus field value if set, zero value otherwise.
func (o *CreateLoanVipRepayV1Resp) GetRepayStatus() string {
	if o == nil || IsNil(o.RepayStatus) {
		var ret string
		return ret
	}
	return *o.RepayStatus
}

// GetRepayStatusOk returns a tuple with the RepayStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLoanVipRepayV1Resp) GetRepayStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RepayStatus) {
		return nil, false
	}
	return o.RepayStatus, true
}

// HasRepayStatus returns a boolean if a field has been set.
func (o *CreateLoanVipRepayV1Resp) HasRepayStatus() bool {
	if o != nil && !IsNil(o.RepayStatus) {
		return true
	}

	return false
}

// SetRepayStatus gets a reference to the given string and assigns it to the RepayStatus field.
func (o *CreateLoanVipRepayV1Resp) SetRepayStatus(v string) {
	o.RepayStatus = &v
}

func (o CreateLoanVipRepayV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateLoanVipRepayV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CollateralCoin) {
		toSerialize["collateralCoin"] = o.CollateralCoin
	}
	if !IsNil(o.CurrentLTV) {
		toSerialize["currentLTV"] = o.CurrentLTV
	}
	if !IsNil(o.LoanCoin) {
		toSerialize["loanCoin"] = o.LoanCoin
	}
	if !IsNil(o.RemainingInterest) {
		toSerialize["remainingInterest"] = o.RemainingInterest
	}
	if !IsNil(o.RemainingPrincipal) {
		toSerialize["remainingPrincipal"] = o.RemainingPrincipal
	}
	if !IsNil(o.RepayAmount) {
		toSerialize["repayAmount"] = o.RepayAmount
	}
	if !IsNil(o.RepayStatus) {
		toSerialize["repayStatus"] = o.RepayStatus
	}
	return toSerialize, nil
}

type NullableCreateLoanVipRepayV1Resp struct {
	value *CreateLoanVipRepayV1Resp
	isSet bool
}

func (v NullableCreateLoanVipRepayV1Resp) Get() *CreateLoanVipRepayV1Resp {
	return v.value
}

func (v *NullableCreateLoanVipRepayV1Resp) Set(val *CreateLoanVipRepayV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLoanVipRepayV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLoanVipRepayV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLoanVipRepayV1Resp(val *CreateLoanVipRepayV1Resp) *NullableCreateLoanVipRepayV1Resp {
	return &NullableCreateLoanVipRepayV1Resp{value: val, isSet: true}
}

func (v NullableCreateLoanVipRepayV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLoanVipRepayV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


