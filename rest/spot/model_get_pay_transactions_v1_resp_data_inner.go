/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetPayTransactionsV1RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPayTransactionsV1RespDataInner{}

// GetPayTransactionsV1RespDataInner struct for GetPayTransactionsV1RespDataInner
type GetPayTransactionsV1RespDataInner struct {
	Amount *string `json:"amount,omitempty"`
	Currency *string `json:"currency,omitempty"`
	FundsDetail []GetPayTransactionsV1RespDataInnerFundsDetailInner `json:"fundsDetail,omitempty"`
	OrderType *string `json:"orderType,omitempty"`
	PayerInfo *GetPayTransactionsV1RespDataInnerPayerInfo `json:"payerInfo,omitempty"`
	ReceiverInfo *GetPayTransactionsV1RespDataInnerReceiverInfo `json:"receiverInfo,omitempty"`
	TransactionId *string `json:"transactionId,omitempty"`
	TransactionTime *int64 `json:"transactionTime,omitempty"`
	WalletType *int32 `json:"walletType,omitempty"`
	WalletTypes []int32 `json:"walletTypes,omitempty"`
}

// NewGetPayTransactionsV1RespDataInner instantiates a new GetPayTransactionsV1RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPayTransactionsV1RespDataInner() *GetPayTransactionsV1RespDataInner {
	this := GetPayTransactionsV1RespDataInner{}
	return &this
}

// NewGetPayTransactionsV1RespDataInnerWithDefaults instantiates a new GetPayTransactionsV1RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPayTransactionsV1RespDataInnerWithDefaults() *GetPayTransactionsV1RespDataInner {
	this := GetPayTransactionsV1RespDataInner{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetPayTransactionsV1RespDataInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayTransactionsV1RespDataInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetPayTransactionsV1RespDataInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *GetPayTransactionsV1RespDataInner) SetAmount(v string) {
	o.Amount = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *GetPayTransactionsV1RespDataInner) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayTransactionsV1RespDataInner) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *GetPayTransactionsV1RespDataInner) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *GetPayTransactionsV1RespDataInner) SetCurrency(v string) {
	o.Currency = &v
}

// GetFundsDetail returns the FundsDetail field value if set, zero value otherwise.
func (o *GetPayTransactionsV1RespDataInner) GetFundsDetail() []GetPayTransactionsV1RespDataInnerFundsDetailInner {
	if o == nil || IsNil(o.FundsDetail) {
		var ret []GetPayTransactionsV1RespDataInnerFundsDetailInner
		return ret
	}
	return o.FundsDetail
}

// GetFundsDetailOk returns a tuple with the FundsDetail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayTransactionsV1RespDataInner) GetFundsDetailOk() ([]GetPayTransactionsV1RespDataInnerFundsDetailInner, bool) {
	if o == nil || IsNil(o.FundsDetail) {
		return nil, false
	}
	return o.FundsDetail, true
}

// HasFundsDetail returns a boolean if a field has been set.
func (o *GetPayTransactionsV1RespDataInner) HasFundsDetail() bool {
	if o != nil && !IsNil(o.FundsDetail) {
		return true
	}

	return false
}

// SetFundsDetail gets a reference to the given []GetPayTransactionsV1RespDataInnerFundsDetailInner and assigns it to the FundsDetail field.
func (o *GetPayTransactionsV1RespDataInner) SetFundsDetail(v []GetPayTransactionsV1RespDataInnerFundsDetailInner) {
	o.FundsDetail = v
}

// GetOrderType returns the OrderType field value if set, zero value otherwise.
func (o *GetPayTransactionsV1RespDataInner) GetOrderType() string {
	if o == nil || IsNil(o.OrderType) {
		var ret string
		return ret
	}
	return *o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayTransactionsV1RespDataInner) GetOrderTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OrderType) {
		return nil, false
	}
	return o.OrderType, true
}

// HasOrderType returns a boolean if a field has been set.
func (o *GetPayTransactionsV1RespDataInner) HasOrderType() bool {
	if o != nil && !IsNil(o.OrderType) {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given string and assigns it to the OrderType field.
func (o *GetPayTransactionsV1RespDataInner) SetOrderType(v string) {
	o.OrderType = &v
}

// GetPayerInfo returns the PayerInfo field value if set, zero value otherwise.
func (o *GetPayTransactionsV1RespDataInner) GetPayerInfo() GetPayTransactionsV1RespDataInnerPayerInfo {
	if o == nil || IsNil(o.PayerInfo) {
		var ret GetPayTransactionsV1RespDataInnerPayerInfo
		return ret
	}
	return *o.PayerInfo
}

// GetPayerInfoOk returns a tuple with the PayerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayTransactionsV1RespDataInner) GetPayerInfoOk() (*GetPayTransactionsV1RespDataInnerPayerInfo, bool) {
	if o == nil || IsNil(o.PayerInfo) {
		return nil, false
	}
	return o.PayerInfo, true
}

// HasPayerInfo returns a boolean if a field has been set.
func (o *GetPayTransactionsV1RespDataInner) HasPayerInfo() bool {
	if o != nil && !IsNil(o.PayerInfo) {
		return true
	}

	return false
}

// SetPayerInfo gets a reference to the given GetPayTransactionsV1RespDataInnerPayerInfo and assigns it to the PayerInfo field.
func (o *GetPayTransactionsV1RespDataInner) SetPayerInfo(v GetPayTransactionsV1RespDataInnerPayerInfo) {
	o.PayerInfo = &v
}

// GetReceiverInfo returns the ReceiverInfo field value if set, zero value otherwise.
func (o *GetPayTransactionsV1RespDataInner) GetReceiverInfo() GetPayTransactionsV1RespDataInnerReceiverInfo {
	if o == nil || IsNil(o.ReceiverInfo) {
		var ret GetPayTransactionsV1RespDataInnerReceiverInfo
		return ret
	}
	return *o.ReceiverInfo
}

// GetReceiverInfoOk returns a tuple with the ReceiverInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayTransactionsV1RespDataInner) GetReceiverInfoOk() (*GetPayTransactionsV1RespDataInnerReceiverInfo, bool) {
	if o == nil || IsNil(o.ReceiverInfo) {
		return nil, false
	}
	return o.ReceiverInfo, true
}

// HasReceiverInfo returns a boolean if a field has been set.
func (o *GetPayTransactionsV1RespDataInner) HasReceiverInfo() bool {
	if o != nil && !IsNil(o.ReceiverInfo) {
		return true
	}

	return false
}

// SetReceiverInfo gets a reference to the given GetPayTransactionsV1RespDataInnerReceiverInfo and assigns it to the ReceiverInfo field.
func (o *GetPayTransactionsV1RespDataInner) SetReceiverInfo(v GetPayTransactionsV1RespDataInnerReceiverInfo) {
	o.ReceiverInfo = &v
}

// GetTransactionId returns the TransactionId field value if set, zero value otherwise.
func (o *GetPayTransactionsV1RespDataInner) GetTransactionId() string {
	if o == nil || IsNil(o.TransactionId) {
		var ret string
		return ret
	}
	return *o.TransactionId
}

// GetTransactionIdOk returns a tuple with the TransactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayTransactionsV1RespDataInner) GetTransactionIdOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionId) {
		return nil, false
	}
	return o.TransactionId, true
}

// HasTransactionId returns a boolean if a field has been set.
func (o *GetPayTransactionsV1RespDataInner) HasTransactionId() bool {
	if o != nil && !IsNil(o.TransactionId) {
		return true
	}

	return false
}

// SetTransactionId gets a reference to the given string and assigns it to the TransactionId field.
func (o *GetPayTransactionsV1RespDataInner) SetTransactionId(v string) {
	o.TransactionId = &v
}

// GetTransactionTime returns the TransactionTime field value if set, zero value otherwise.
func (o *GetPayTransactionsV1RespDataInner) GetTransactionTime() int64 {
	if o == nil || IsNil(o.TransactionTime) {
		var ret int64
		return ret
	}
	return *o.TransactionTime
}

// GetTransactionTimeOk returns a tuple with the TransactionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayTransactionsV1RespDataInner) GetTransactionTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.TransactionTime) {
		return nil, false
	}
	return o.TransactionTime, true
}

// HasTransactionTime returns a boolean if a field has been set.
func (o *GetPayTransactionsV1RespDataInner) HasTransactionTime() bool {
	if o != nil && !IsNil(o.TransactionTime) {
		return true
	}

	return false
}

// SetTransactionTime gets a reference to the given int64 and assigns it to the TransactionTime field.
func (o *GetPayTransactionsV1RespDataInner) SetTransactionTime(v int64) {
	o.TransactionTime = &v
}

// GetWalletType returns the WalletType field value if set, zero value otherwise.
func (o *GetPayTransactionsV1RespDataInner) GetWalletType() int32 {
	if o == nil || IsNil(o.WalletType) {
		var ret int32
		return ret
	}
	return *o.WalletType
}

// GetWalletTypeOk returns a tuple with the WalletType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayTransactionsV1RespDataInner) GetWalletTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.WalletType) {
		return nil, false
	}
	return o.WalletType, true
}

// HasWalletType returns a boolean if a field has been set.
func (o *GetPayTransactionsV1RespDataInner) HasWalletType() bool {
	if o != nil && !IsNil(o.WalletType) {
		return true
	}

	return false
}

// SetWalletType gets a reference to the given int32 and assigns it to the WalletType field.
func (o *GetPayTransactionsV1RespDataInner) SetWalletType(v int32) {
	o.WalletType = &v
}

// GetWalletTypes returns the WalletTypes field value if set, zero value otherwise.
func (o *GetPayTransactionsV1RespDataInner) GetWalletTypes() []int32 {
	if o == nil || IsNil(o.WalletTypes) {
		var ret []int32
		return ret
	}
	return o.WalletTypes
}

// GetWalletTypesOk returns a tuple with the WalletTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPayTransactionsV1RespDataInner) GetWalletTypesOk() ([]int32, bool) {
	if o == nil || IsNil(o.WalletTypes) {
		return nil, false
	}
	return o.WalletTypes, true
}

// HasWalletTypes returns a boolean if a field has been set.
func (o *GetPayTransactionsV1RespDataInner) HasWalletTypes() bool {
	if o != nil && !IsNil(o.WalletTypes) {
		return true
	}

	return false
}

// SetWalletTypes gets a reference to the given []int32 and assigns it to the WalletTypes field.
func (o *GetPayTransactionsV1RespDataInner) SetWalletTypes(v []int32) {
	o.WalletTypes = v
}

func (o GetPayTransactionsV1RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPayTransactionsV1RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.FundsDetail) {
		toSerialize["fundsDetail"] = o.FundsDetail
	}
	if !IsNil(o.OrderType) {
		toSerialize["orderType"] = o.OrderType
	}
	if !IsNil(o.PayerInfo) {
		toSerialize["payerInfo"] = o.PayerInfo
	}
	if !IsNil(o.ReceiverInfo) {
		toSerialize["receiverInfo"] = o.ReceiverInfo
	}
	if !IsNil(o.TransactionId) {
		toSerialize["transactionId"] = o.TransactionId
	}
	if !IsNil(o.TransactionTime) {
		toSerialize["transactionTime"] = o.TransactionTime
	}
	if !IsNil(o.WalletType) {
		toSerialize["walletType"] = o.WalletType
	}
	if !IsNil(o.WalletTypes) {
		toSerialize["walletTypes"] = o.WalletTypes
	}
	return toSerialize, nil
}

type NullableGetPayTransactionsV1RespDataInner struct {
	value *GetPayTransactionsV1RespDataInner
	isSet bool
}

func (v NullableGetPayTransactionsV1RespDataInner) Get() *GetPayTransactionsV1RespDataInner {
	return v.value
}

func (v *NullableGetPayTransactionsV1RespDataInner) Set(val *GetPayTransactionsV1RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPayTransactionsV1RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPayTransactionsV1RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPayTransactionsV1RespDataInner(val *GetPayTransactionsV1RespDataInner) *NullableGetPayTransactionsV1RespDataInner {
	return &NullableGetPayTransactionsV1RespDataInner{value: val, isSet: true}
}

func (v NullableGetPayTransactionsV1RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPayTransactionsV1RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


