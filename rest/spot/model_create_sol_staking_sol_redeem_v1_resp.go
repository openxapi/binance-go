/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the CreateSolStakingSolRedeemV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSolStakingSolRedeemV1Resp{}

// CreateSolStakingSolRedeemV1Resp struct for CreateSolStakingSolRedeemV1Resp
type CreateSolStakingSolRedeemV1Resp struct {
	ArrivalTime *int64 `json:"arrivalTime,omitempty"`
	ExchangeRate *string `json:"exchangeRate,omitempty"`
	SolAmount *string `json:"solAmount,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewCreateSolStakingSolRedeemV1Resp instantiates a new CreateSolStakingSolRedeemV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSolStakingSolRedeemV1Resp() *CreateSolStakingSolRedeemV1Resp {
	this := CreateSolStakingSolRedeemV1Resp{}
	return &this
}

// NewCreateSolStakingSolRedeemV1RespWithDefaults instantiates a new CreateSolStakingSolRedeemV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSolStakingSolRedeemV1RespWithDefaults() *CreateSolStakingSolRedeemV1Resp {
	this := CreateSolStakingSolRedeemV1Resp{}
	return &this
}

// GetArrivalTime returns the ArrivalTime field value if set, zero value otherwise.
func (o *CreateSolStakingSolRedeemV1Resp) GetArrivalTime() int64 {
	if o == nil || IsNil(o.ArrivalTime) {
		var ret int64
		return ret
	}
	return *o.ArrivalTime
}

// GetArrivalTimeOk returns a tuple with the ArrivalTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSolStakingSolRedeemV1Resp) GetArrivalTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.ArrivalTime) {
		return nil, false
	}
	return o.ArrivalTime, true
}

// HasArrivalTime returns a boolean if a field has been set.
func (o *CreateSolStakingSolRedeemV1Resp) HasArrivalTime() bool {
	if o != nil && !IsNil(o.ArrivalTime) {
		return true
	}

	return false
}

// SetArrivalTime gets a reference to the given int64 and assigns it to the ArrivalTime field.
func (o *CreateSolStakingSolRedeemV1Resp) SetArrivalTime(v int64) {
	o.ArrivalTime = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *CreateSolStakingSolRedeemV1Resp) GetExchangeRate() string {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret string
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSolStakingSolRedeemV1Resp) GetExchangeRateOk() (*string, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *CreateSolStakingSolRedeemV1Resp) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given string and assigns it to the ExchangeRate field.
func (o *CreateSolStakingSolRedeemV1Resp) SetExchangeRate(v string) {
	o.ExchangeRate = &v
}

// GetSolAmount returns the SolAmount field value if set, zero value otherwise.
func (o *CreateSolStakingSolRedeemV1Resp) GetSolAmount() string {
	if o == nil || IsNil(o.SolAmount) {
		var ret string
		return ret
	}
	return *o.SolAmount
}

// GetSolAmountOk returns a tuple with the SolAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSolStakingSolRedeemV1Resp) GetSolAmountOk() (*string, bool) {
	if o == nil || IsNil(o.SolAmount) {
		return nil, false
	}
	return o.SolAmount, true
}

// HasSolAmount returns a boolean if a field has been set.
func (o *CreateSolStakingSolRedeemV1Resp) HasSolAmount() bool {
	if o != nil && !IsNil(o.SolAmount) {
		return true
	}

	return false
}

// SetSolAmount gets a reference to the given string and assigns it to the SolAmount field.
func (o *CreateSolStakingSolRedeemV1Resp) SetSolAmount(v string) {
	o.SolAmount = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *CreateSolStakingSolRedeemV1Resp) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSolStakingSolRedeemV1Resp) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *CreateSolStakingSolRedeemV1Resp) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *CreateSolStakingSolRedeemV1Resp) SetSuccess(v bool) {
	o.Success = &v
}

func (o CreateSolStakingSolRedeemV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSolStakingSolRedeemV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ArrivalTime) {
		toSerialize["arrivalTime"] = o.ArrivalTime
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.SolAmount) {
		toSerialize["solAmount"] = o.SolAmount
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableCreateSolStakingSolRedeemV1Resp struct {
	value *CreateSolStakingSolRedeemV1Resp
	isSet bool
}

func (v NullableCreateSolStakingSolRedeemV1Resp) Get() *CreateSolStakingSolRedeemV1Resp {
	return v.value
}

func (v *NullableCreateSolStakingSolRedeemV1Resp) Set(val *CreateSolStakingSolRedeemV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSolStakingSolRedeemV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSolStakingSolRedeemV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSolStakingSolRedeemV1Resp(val *CreateSolStakingSolRedeemV1Resp) *NullableCreateSolStakingSolRedeemV1Resp {
	return &NullableCreateSolStakingSolRedeemV1Resp{value: val, isSet: true}
}

func (v NullableCreateSolStakingSolRedeemV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSolStakingSolRedeemV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


