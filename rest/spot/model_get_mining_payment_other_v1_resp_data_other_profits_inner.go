/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetMiningPaymentOtherV1RespDataOtherProfitsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMiningPaymentOtherV1RespDataOtherProfitsInner{}

// GetMiningPaymentOtherV1RespDataOtherProfitsInner struct for GetMiningPaymentOtherV1RespDataOtherProfitsInner
type GetMiningPaymentOtherV1RespDataOtherProfitsInner struct {
	CoinName *string `json:"coinName,omitempty"`
	ProfitAmount *float32 `json:"profitAmount,omitempty"`
	Status *int32 `json:"status,omitempty"`
	Time *int64 `json:"time,omitempty"`
	Type *int32 `json:"type,omitempty"`
}

// NewGetMiningPaymentOtherV1RespDataOtherProfitsInner instantiates a new GetMiningPaymentOtherV1RespDataOtherProfitsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMiningPaymentOtherV1RespDataOtherProfitsInner() *GetMiningPaymentOtherV1RespDataOtherProfitsInner {
	this := GetMiningPaymentOtherV1RespDataOtherProfitsInner{}
	return &this
}

// NewGetMiningPaymentOtherV1RespDataOtherProfitsInnerWithDefaults instantiates a new GetMiningPaymentOtherV1RespDataOtherProfitsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMiningPaymentOtherV1RespDataOtherProfitsInnerWithDefaults() *GetMiningPaymentOtherV1RespDataOtherProfitsInner {
	this := GetMiningPaymentOtherV1RespDataOtherProfitsInner{}
	return &this
}

// GetCoinName returns the CoinName field value if set, zero value otherwise.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) GetCoinName() string {
	if o == nil || IsNil(o.CoinName) {
		var ret string
		return ret
	}
	return *o.CoinName
}

// GetCoinNameOk returns a tuple with the CoinName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) GetCoinNameOk() (*string, bool) {
	if o == nil || IsNil(o.CoinName) {
		return nil, false
	}
	return o.CoinName, true
}

// HasCoinName returns a boolean if a field has been set.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) HasCoinName() bool {
	if o != nil && !IsNil(o.CoinName) {
		return true
	}

	return false
}

// SetCoinName gets a reference to the given string and assigns it to the CoinName field.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) SetCoinName(v string) {
	o.CoinName = &v
}

// GetProfitAmount returns the ProfitAmount field value if set, zero value otherwise.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) GetProfitAmount() float32 {
	if o == nil || IsNil(o.ProfitAmount) {
		var ret float32
		return ret
	}
	return *o.ProfitAmount
}

// GetProfitAmountOk returns a tuple with the ProfitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) GetProfitAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ProfitAmount) {
		return nil, false
	}
	return o.ProfitAmount, true
}

// HasProfitAmount returns a boolean if a field has been set.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) HasProfitAmount() bool {
	if o != nil && !IsNil(o.ProfitAmount) {
		return true
	}

	return false
}

// SetProfitAmount gets a reference to the given float32 and assigns it to the ProfitAmount field.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) SetProfitAmount(v float32) {
	o.ProfitAmount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) SetStatus(v int32) {
	o.Status = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) SetTime(v int64) {
	o.Time = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *GetMiningPaymentOtherV1RespDataOtherProfitsInner) SetType(v int32) {
	o.Type = &v
}

func (o GetMiningPaymentOtherV1RespDataOtherProfitsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMiningPaymentOtherV1RespDataOtherProfitsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CoinName) {
		toSerialize["coinName"] = o.CoinName
	}
	if !IsNil(o.ProfitAmount) {
		toSerialize["profitAmount"] = o.ProfitAmount
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetMiningPaymentOtherV1RespDataOtherProfitsInner struct {
	value *GetMiningPaymentOtherV1RespDataOtherProfitsInner
	isSet bool
}

func (v NullableGetMiningPaymentOtherV1RespDataOtherProfitsInner) Get() *GetMiningPaymentOtherV1RespDataOtherProfitsInner {
	return v.value
}

func (v *NullableGetMiningPaymentOtherV1RespDataOtherProfitsInner) Set(val *GetMiningPaymentOtherV1RespDataOtherProfitsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMiningPaymentOtherV1RespDataOtherProfitsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMiningPaymentOtherV1RespDataOtherProfitsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMiningPaymentOtherV1RespDataOtherProfitsInner(val *GetMiningPaymentOtherV1RespDataOtherProfitsInner) *NullableGetMiningPaymentOtherV1RespDataOtherProfitsInner {
	return &NullableGetMiningPaymentOtherV1RespDataOtherProfitsInner{value: val, isSet: true}
}

func (v NullableGetMiningPaymentOtherV1RespDataOtherProfitsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMiningPaymentOtherV1RespDataOtherProfitsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


