/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetRebateTaxQueryV1RespDataDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRebateTaxQueryV1RespDataDataInner{}

// GetRebateTaxQueryV1RespDataDataInner struct for GetRebateTaxQueryV1RespDataDataInner
type GetRebateTaxQueryV1RespDataDataInner struct {
	Amount *string `json:"amount,omitempty"`
	Asset *string `json:"asset,omitempty"`
	Type *int32 `json:"type,omitempty"`
	UpdateTime *int64 `json:"updateTime,omitempty"`
}

// NewGetRebateTaxQueryV1RespDataDataInner instantiates a new GetRebateTaxQueryV1RespDataDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRebateTaxQueryV1RespDataDataInner() *GetRebateTaxQueryV1RespDataDataInner {
	this := GetRebateTaxQueryV1RespDataDataInner{}
	return &this
}

// NewGetRebateTaxQueryV1RespDataDataInnerWithDefaults instantiates a new GetRebateTaxQueryV1RespDataDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRebateTaxQueryV1RespDataDataInnerWithDefaults() *GetRebateTaxQueryV1RespDataDataInner {
	this := GetRebateTaxQueryV1RespDataDataInner{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetRebateTaxQueryV1RespDataDataInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRebateTaxQueryV1RespDataDataInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetRebateTaxQueryV1RespDataDataInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *GetRebateTaxQueryV1RespDataDataInner) SetAmount(v string) {
	o.Amount = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *GetRebateTaxQueryV1RespDataDataInner) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRebateTaxQueryV1RespDataDataInner) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *GetRebateTaxQueryV1RespDataDataInner) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *GetRebateTaxQueryV1RespDataDataInner) SetAsset(v string) {
	o.Asset = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetRebateTaxQueryV1RespDataDataInner) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRebateTaxQueryV1RespDataDataInner) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetRebateTaxQueryV1RespDataDataInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *GetRebateTaxQueryV1RespDataDataInner) SetType(v int32) {
	o.Type = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *GetRebateTaxQueryV1RespDataDataInner) GetUpdateTime() int64 {
	if o == nil || IsNil(o.UpdateTime) {
		var ret int64
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRebateTaxQueryV1RespDataDataInner) GetUpdateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *GetRebateTaxQueryV1RespDataDataInner) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given int64 and assigns it to the UpdateTime field.
func (o *GetRebateTaxQueryV1RespDataDataInner) SetUpdateTime(v int64) {
	o.UpdateTime = &v
}

func (o GetRebateTaxQueryV1RespDataDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRebateTaxQueryV1RespDataDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return toSerialize, nil
}

type NullableGetRebateTaxQueryV1RespDataDataInner struct {
	value *GetRebateTaxQueryV1RespDataDataInner
	isSet bool
}

func (v NullableGetRebateTaxQueryV1RespDataDataInner) Get() *GetRebateTaxQueryV1RespDataDataInner {
	return v.value
}

func (v *NullableGetRebateTaxQueryV1RespDataDataInner) Set(val *GetRebateTaxQueryV1RespDataDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRebateTaxQueryV1RespDataDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRebateTaxQueryV1RespDataDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRebateTaxQueryV1RespDataDataInner(val *GetRebateTaxQueryV1RespDataDataInner) *NullableGetRebateTaxQueryV1RespDataDataInner {
	return &NullableGetRebateTaxQueryV1RespDataDataInner{value: val, isSet: true}
}

func (v NullableGetRebateTaxQueryV1RespDataDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRebateTaxQueryV1RespDataDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


