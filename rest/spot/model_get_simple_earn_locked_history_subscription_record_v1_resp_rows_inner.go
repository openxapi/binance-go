/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner{}

// GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner struct for GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner
type GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner struct {
	Amount *string `json:"amount,omitempty"`
	AmtFromFunding *string `json:"amtFromFunding,omitempty"`
	AmtFromSpot *string `json:"amtFromSpot,omitempty"`
	Asset *string `json:"asset,omitempty"`
	LockPeriod *string `json:"lockPeriod,omitempty"`
	PositionId *int64 `json:"positionId,omitempty"`
	ProjectId *string `json:"projectId,omitempty"`
	PurchaseId *string `json:"purchaseId,omitempty"`
	SourceAccount *string `json:"sourceAccount,omitempty"`
	Status *string `json:"status,omitempty"`
	Time *int64 `json:"time,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner instantiates a new GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner() *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner {
	this := GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner{}
	return &this
}

// NewGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInnerWithDefaults instantiates a new GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInnerWithDefaults() *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner {
	this := GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) SetAmount(v string) {
	o.Amount = &v
}

// GetAmtFromFunding returns the AmtFromFunding field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetAmtFromFunding() string {
	if o == nil || IsNil(o.AmtFromFunding) {
		var ret string
		return ret
	}
	return *o.AmtFromFunding
}

// GetAmtFromFundingOk returns a tuple with the AmtFromFunding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetAmtFromFundingOk() (*string, bool) {
	if o == nil || IsNil(o.AmtFromFunding) {
		return nil, false
	}
	return o.AmtFromFunding, true
}

// HasAmtFromFunding returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) HasAmtFromFunding() bool {
	if o != nil && !IsNil(o.AmtFromFunding) {
		return true
	}

	return false
}

// SetAmtFromFunding gets a reference to the given string and assigns it to the AmtFromFunding field.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) SetAmtFromFunding(v string) {
	o.AmtFromFunding = &v
}

// GetAmtFromSpot returns the AmtFromSpot field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetAmtFromSpot() string {
	if o == nil || IsNil(o.AmtFromSpot) {
		var ret string
		return ret
	}
	return *o.AmtFromSpot
}

// GetAmtFromSpotOk returns a tuple with the AmtFromSpot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetAmtFromSpotOk() (*string, bool) {
	if o == nil || IsNil(o.AmtFromSpot) {
		return nil, false
	}
	return o.AmtFromSpot, true
}

// HasAmtFromSpot returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) HasAmtFromSpot() bool {
	if o != nil && !IsNil(o.AmtFromSpot) {
		return true
	}

	return false
}

// SetAmtFromSpot gets a reference to the given string and assigns it to the AmtFromSpot field.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) SetAmtFromSpot(v string) {
	o.AmtFromSpot = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) SetAsset(v string) {
	o.Asset = &v
}

// GetLockPeriod returns the LockPeriod field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetLockPeriod() string {
	if o == nil || IsNil(o.LockPeriod) {
		var ret string
		return ret
	}
	return *o.LockPeriod
}

// GetLockPeriodOk returns a tuple with the LockPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetLockPeriodOk() (*string, bool) {
	if o == nil || IsNil(o.LockPeriod) {
		return nil, false
	}
	return o.LockPeriod, true
}

// HasLockPeriod returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) HasLockPeriod() bool {
	if o != nil && !IsNil(o.LockPeriod) {
		return true
	}

	return false
}

// SetLockPeriod gets a reference to the given string and assigns it to the LockPeriod field.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) SetLockPeriod(v string) {
	o.LockPeriod = &v
}

// GetPositionId returns the PositionId field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetPositionId() int64 {
	if o == nil || IsNil(o.PositionId) {
		var ret int64
		return ret
	}
	return *o.PositionId
}

// GetPositionIdOk returns a tuple with the PositionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetPositionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.PositionId) {
		return nil, false
	}
	return o.PositionId, true
}

// HasPositionId returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) HasPositionId() bool {
	if o != nil && !IsNil(o.PositionId) {
		return true
	}

	return false
}

// SetPositionId gets a reference to the given int64 and assigns it to the PositionId field.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) SetPositionId(v int64) {
	o.PositionId = &v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetProjectId() string {
	if o == nil || IsNil(o.ProjectId) {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetProjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProjectId) {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) HasProjectId() bool {
	if o != nil && !IsNil(o.ProjectId) {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetPurchaseId returns the PurchaseId field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetPurchaseId() string {
	if o == nil || IsNil(o.PurchaseId) {
		var ret string
		return ret
	}
	return *o.PurchaseId
}

// GetPurchaseIdOk returns a tuple with the PurchaseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetPurchaseIdOk() (*string, bool) {
	if o == nil || IsNil(o.PurchaseId) {
		return nil, false
	}
	return o.PurchaseId, true
}

// HasPurchaseId returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) HasPurchaseId() bool {
	if o != nil && !IsNil(o.PurchaseId) {
		return true
	}

	return false
}

// SetPurchaseId gets a reference to the given string and assigns it to the PurchaseId field.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) SetPurchaseId(v string) {
	o.PurchaseId = &v
}

// GetSourceAccount returns the SourceAccount field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetSourceAccount() string {
	if o == nil || IsNil(o.SourceAccount) {
		var ret string
		return ret
	}
	return *o.SourceAccount
}

// GetSourceAccountOk returns a tuple with the SourceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetSourceAccountOk() (*string, bool) {
	if o == nil || IsNil(o.SourceAccount) {
		return nil, false
	}
	return o.SourceAccount, true
}

// HasSourceAccount returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) HasSourceAccount() bool {
	if o != nil && !IsNil(o.SourceAccount) {
		return true
	}

	return false
}

// SetSourceAccount gets a reference to the given string and assigns it to the SourceAccount field.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) SetSourceAccount(v string) {
	o.SourceAccount = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) SetStatus(v string) {
	o.Status = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) SetTime(v int64) {
	o.Time = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) SetType(v string) {
	o.Type = &v
}

func (o GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.AmtFromFunding) {
		toSerialize["amtFromFunding"] = o.AmtFromFunding
	}
	if !IsNil(o.AmtFromSpot) {
		toSerialize["amtFromSpot"] = o.AmtFromSpot
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.LockPeriod) {
		toSerialize["lockPeriod"] = o.LockPeriod
	}
	if !IsNil(o.PositionId) {
		toSerialize["positionId"] = o.PositionId
	}
	if !IsNil(o.ProjectId) {
		toSerialize["projectId"] = o.ProjectId
	}
	if !IsNil(o.PurchaseId) {
		toSerialize["purchaseId"] = o.PurchaseId
	}
	if !IsNil(o.SourceAccount) {
		toSerialize["sourceAccount"] = o.SourceAccount
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner struct {
	value *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner
	isSet bool
}

func (v NullableGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) Get() *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner {
	return v.value
}

func (v *NullableGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) Set(val *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner(val *GetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) *NullableGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner {
	return &NullableGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner{value: val, isSet: true}
}

func (v NullableGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSimpleEarnLockedHistorySubscriptionRecordV1RespRowsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


