/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetSimpleEarnAccountV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSimpleEarnAccountV1Resp{}

// GetSimpleEarnAccountV1Resp struct for GetSimpleEarnAccountV1Resp
type GetSimpleEarnAccountV1Resp struct {
	TotalAmountInBTC *string `json:"totalAmountInBTC,omitempty"`
	TotalAmountInUSDT *string `json:"totalAmountInUSDT,omitempty"`
	TotalFlexibleAmountInBTC *string `json:"totalFlexibleAmountInBTC,omitempty"`
	TotalFlexibleAmountInUSDT *string `json:"totalFlexibleAmountInUSDT,omitempty"`
	TotalLockedInBTC *string `json:"totalLockedInBTC,omitempty"`
	TotalLockedInUSDT *string `json:"totalLockedInUSDT,omitempty"`
}

// NewGetSimpleEarnAccountV1Resp instantiates a new GetSimpleEarnAccountV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSimpleEarnAccountV1Resp() *GetSimpleEarnAccountV1Resp {
	this := GetSimpleEarnAccountV1Resp{}
	return &this
}

// NewGetSimpleEarnAccountV1RespWithDefaults instantiates a new GetSimpleEarnAccountV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSimpleEarnAccountV1RespWithDefaults() *GetSimpleEarnAccountV1Resp {
	this := GetSimpleEarnAccountV1Resp{}
	return &this
}

// GetTotalAmountInBTC returns the TotalAmountInBTC field value if set, zero value otherwise.
func (o *GetSimpleEarnAccountV1Resp) GetTotalAmountInBTC() string {
	if o == nil || IsNil(o.TotalAmountInBTC) {
		var ret string
		return ret
	}
	return *o.TotalAmountInBTC
}

// GetTotalAmountInBTCOk returns a tuple with the TotalAmountInBTC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnAccountV1Resp) GetTotalAmountInBTCOk() (*string, bool) {
	if o == nil || IsNil(o.TotalAmountInBTC) {
		return nil, false
	}
	return o.TotalAmountInBTC, true
}

// HasTotalAmountInBTC returns a boolean if a field has been set.
func (o *GetSimpleEarnAccountV1Resp) HasTotalAmountInBTC() bool {
	if o != nil && !IsNil(o.TotalAmountInBTC) {
		return true
	}

	return false
}

// SetTotalAmountInBTC gets a reference to the given string and assigns it to the TotalAmountInBTC field.
func (o *GetSimpleEarnAccountV1Resp) SetTotalAmountInBTC(v string) {
	o.TotalAmountInBTC = &v
}

// GetTotalAmountInUSDT returns the TotalAmountInUSDT field value if set, zero value otherwise.
func (o *GetSimpleEarnAccountV1Resp) GetTotalAmountInUSDT() string {
	if o == nil || IsNil(o.TotalAmountInUSDT) {
		var ret string
		return ret
	}
	return *o.TotalAmountInUSDT
}

// GetTotalAmountInUSDTOk returns a tuple with the TotalAmountInUSDT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnAccountV1Resp) GetTotalAmountInUSDTOk() (*string, bool) {
	if o == nil || IsNil(o.TotalAmountInUSDT) {
		return nil, false
	}
	return o.TotalAmountInUSDT, true
}

// HasTotalAmountInUSDT returns a boolean if a field has been set.
func (o *GetSimpleEarnAccountV1Resp) HasTotalAmountInUSDT() bool {
	if o != nil && !IsNil(o.TotalAmountInUSDT) {
		return true
	}

	return false
}

// SetTotalAmountInUSDT gets a reference to the given string and assigns it to the TotalAmountInUSDT field.
func (o *GetSimpleEarnAccountV1Resp) SetTotalAmountInUSDT(v string) {
	o.TotalAmountInUSDT = &v
}

// GetTotalFlexibleAmountInBTC returns the TotalFlexibleAmountInBTC field value if set, zero value otherwise.
func (o *GetSimpleEarnAccountV1Resp) GetTotalFlexibleAmountInBTC() string {
	if o == nil || IsNil(o.TotalFlexibleAmountInBTC) {
		var ret string
		return ret
	}
	return *o.TotalFlexibleAmountInBTC
}

// GetTotalFlexibleAmountInBTCOk returns a tuple with the TotalFlexibleAmountInBTC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnAccountV1Resp) GetTotalFlexibleAmountInBTCOk() (*string, bool) {
	if o == nil || IsNil(o.TotalFlexibleAmountInBTC) {
		return nil, false
	}
	return o.TotalFlexibleAmountInBTC, true
}

// HasTotalFlexibleAmountInBTC returns a boolean if a field has been set.
func (o *GetSimpleEarnAccountV1Resp) HasTotalFlexibleAmountInBTC() bool {
	if o != nil && !IsNil(o.TotalFlexibleAmountInBTC) {
		return true
	}

	return false
}

// SetTotalFlexibleAmountInBTC gets a reference to the given string and assigns it to the TotalFlexibleAmountInBTC field.
func (o *GetSimpleEarnAccountV1Resp) SetTotalFlexibleAmountInBTC(v string) {
	o.TotalFlexibleAmountInBTC = &v
}

// GetTotalFlexibleAmountInUSDT returns the TotalFlexibleAmountInUSDT field value if set, zero value otherwise.
func (o *GetSimpleEarnAccountV1Resp) GetTotalFlexibleAmountInUSDT() string {
	if o == nil || IsNil(o.TotalFlexibleAmountInUSDT) {
		var ret string
		return ret
	}
	return *o.TotalFlexibleAmountInUSDT
}

// GetTotalFlexibleAmountInUSDTOk returns a tuple with the TotalFlexibleAmountInUSDT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnAccountV1Resp) GetTotalFlexibleAmountInUSDTOk() (*string, bool) {
	if o == nil || IsNil(o.TotalFlexibleAmountInUSDT) {
		return nil, false
	}
	return o.TotalFlexibleAmountInUSDT, true
}

// HasTotalFlexibleAmountInUSDT returns a boolean if a field has been set.
func (o *GetSimpleEarnAccountV1Resp) HasTotalFlexibleAmountInUSDT() bool {
	if o != nil && !IsNil(o.TotalFlexibleAmountInUSDT) {
		return true
	}

	return false
}

// SetTotalFlexibleAmountInUSDT gets a reference to the given string and assigns it to the TotalFlexibleAmountInUSDT field.
func (o *GetSimpleEarnAccountV1Resp) SetTotalFlexibleAmountInUSDT(v string) {
	o.TotalFlexibleAmountInUSDT = &v
}

// GetTotalLockedInBTC returns the TotalLockedInBTC field value if set, zero value otherwise.
func (o *GetSimpleEarnAccountV1Resp) GetTotalLockedInBTC() string {
	if o == nil || IsNil(o.TotalLockedInBTC) {
		var ret string
		return ret
	}
	return *o.TotalLockedInBTC
}

// GetTotalLockedInBTCOk returns a tuple with the TotalLockedInBTC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnAccountV1Resp) GetTotalLockedInBTCOk() (*string, bool) {
	if o == nil || IsNil(o.TotalLockedInBTC) {
		return nil, false
	}
	return o.TotalLockedInBTC, true
}

// HasTotalLockedInBTC returns a boolean if a field has been set.
func (o *GetSimpleEarnAccountV1Resp) HasTotalLockedInBTC() bool {
	if o != nil && !IsNil(o.TotalLockedInBTC) {
		return true
	}

	return false
}

// SetTotalLockedInBTC gets a reference to the given string and assigns it to the TotalLockedInBTC field.
func (o *GetSimpleEarnAccountV1Resp) SetTotalLockedInBTC(v string) {
	o.TotalLockedInBTC = &v
}

// GetTotalLockedInUSDT returns the TotalLockedInUSDT field value if set, zero value otherwise.
func (o *GetSimpleEarnAccountV1Resp) GetTotalLockedInUSDT() string {
	if o == nil || IsNil(o.TotalLockedInUSDT) {
		var ret string
		return ret
	}
	return *o.TotalLockedInUSDT
}

// GetTotalLockedInUSDTOk returns a tuple with the TotalLockedInUSDT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSimpleEarnAccountV1Resp) GetTotalLockedInUSDTOk() (*string, bool) {
	if o == nil || IsNil(o.TotalLockedInUSDT) {
		return nil, false
	}
	return o.TotalLockedInUSDT, true
}

// HasTotalLockedInUSDT returns a boolean if a field has been set.
func (o *GetSimpleEarnAccountV1Resp) HasTotalLockedInUSDT() bool {
	if o != nil && !IsNil(o.TotalLockedInUSDT) {
		return true
	}

	return false
}

// SetTotalLockedInUSDT gets a reference to the given string and assigns it to the TotalLockedInUSDT field.
func (o *GetSimpleEarnAccountV1Resp) SetTotalLockedInUSDT(v string) {
	o.TotalLockedInUSDT = &v
}

func (o GetSimpleEarnAccountV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSimpleEarnAccountV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalAmountInBTC) {
		toSerialize["totalAmountInBTC"] = o.TotalAmountInBTC
	}
	if !IsNil(o.TotalAmountInUSDT) {
		toSerialize["totalAmountInUSDT"] = o.TotalAmountInUSDT
	}
	if !IsNil(o.TotalFlexibleAmountInBTC) {
		toSerialize["totalFlexibleAmountInBTC"] = o.TotalFlexibleAmountInBTC
	}
	if !IsNil(o.TotalFlexibleAmountInUSDT) {
		toSerialize["totalFlexibleAmountInUSDT"] = o.TotalFlexibleAmountInUSDT
	}
	if !IsNil(o.TotalLockedInBTC) {
		toSerialize["totalLockedInBTC"] = o.TotalLockedInBTC
	}
	if !IsNil(o.TotalLockedInUSDT) {
		toSerialize["totalLockedInUSDT"] = o.TotalLockedInUSDT
	}
	return toSerialize, nil
}

type NullableGetSimpleEarnAccountV1Resp struct {
	value *GetSimpleEarnAccountV1Resp
	isSet bool
}

func (v NullableGetSimpleEarnAccountV1Resp) Get() *GetSimpleEarnAccountV1Resp {
	return v.value
}

func (v *NullableGetSimpleEarnAccountV1Resp) Set(val *GetSimpleEarnAccountV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSimpleEarnAccountV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSimpleEarnAccountV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSimpleEarnAccountV1Resp(val *GetSimpleEarnAccountV1Resp) *NullableGetSimpleEarnAccountV1Resp {
	return &NullableGetSimpleEarnAccountV1Resp{value: val, isSet: true}
}

func (v NullableGetSimpleEarnAccountV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSimpleEarnAccountV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


