/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetDciProductListV1RespListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDciProductListV1RespListInner{}

// GetDciProductListV1RespListInner struct for GetDciProductListV1RespListInner
type GetDciProductListV1RespListInner struct {
	Apr *string `json:"apr,omitempty"`
	AutoCompoundPlanList []string `json:"autoCompoundPlanList,omitempty"`
	CanPurchase *bool `json:"canPurchase,omitempty"`
	CreateTimestamp *int64 `json:"createTimestamp,omitempty"`
	Duration *int32 `json:"duration,omitempty"`
	ExercisedCoin *string `json:"exercisedCoin,omitempty"`
	Id *string `json:"id,omitempty"`
	InvestCoin *string `json:"investCoin,omitempty"`
	IsAutoCompoundEnable *bool `json:"isAutoCompoundEnable,omitempty"`
	MaxAmount *string `json:"maxAmount,omitempty"`
	MinAmount *string `json:"minAmount,omitempty"`
	OptionType *string `json:"optionType,omitempty"`
	OrderId *int64 `json:"orderId,omitempty"`
	PurchaseDecimal *int32 `json:"purchaseDecimal,omitempty"`
	PurchaseEndTime *int64 `json:"purchaseEndTime,omitempty"`
	SettleDate *int64 `json:"settleDate,omitempty"`
	StrikePrice *string `json:"strikePrice,omitempty"`
}

// NewGetDciProductListV1RespListInner instantiates a new GetDciProductListV1RespListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDciProductListV1RespListInner() *GetDciProductListV1RespListInner {
	this := GetDciProductListV1RespListInner{}
	return &this
}

// NewGetDciProductListV1RespListInnerWithDefaults instantiates a new GetDciProductListV1RespListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDciProductListV1RespListInnerWithDefaults() *GetDciProductListV1RespListInner {
	this := GetDciProductListV1RespListInner{}
	return &this
}

// GetApr returns the Apr field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetApr() string {
	if o == nil || IsNil(o.Apr) {
		var ret string
		return ret
	}
	return *o.Apr
}

// GetAprOk returns a tuple with the Apr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetAprOk() (*string, bool) {
	if o == nil || IsNil(o.Apr) {
		return nil, false
	}
	return o.Apr, true
}

// HasApr returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasApr() bool {
	if o != nil && !IsNil(o.Apr) {
		return true
	}

	return false
}

// SetApr gets a reference to the given string and assigns it to the Apr field.
func (o *GetDciProductListV1RespListInner) SetApr(v string) {
	o.Apr = &v
}

// GetAutoCompoundPlanList returns the AutoCompoundPlanList field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetAutoCompoundPlanList() []string {
	if o == nil || IsNil(o.AutoCompoundPlanList) {
		var ret []string
		return ret
	}
	return o.AutoCompoundPlanList
}

// GetAutoCompoundPlanListOk returns a tuple with the AutoCompoundPlanList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetAutoCompoundPlanListOk() ([]string, bool) {
	if o == nil || IsNil(o.AutoCompoundPlanList) {
		return nil, false
	}
	return o.AutoCompoundPlanList, true
}

// HasAutoCompoundPlanList returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasAutoCompoundPlanList() bool {
	if o != nil && !IsNil(o.AutoCompoundPlanList) {
		return true
	}

	return false
}

// SetAutoCompoundPlanList gets a reference to the given []string and assigns it to the AutoCompoundPlanList field.
func (o *GetDciProductListV1RespListInner) SetAutoCompoundPlanList(v []string) {
	o.AutoCompoundPlanList = v
}

// GetCanPurchase returns the CanPurchase field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetCanPurchase() bool {
	if o == nil || IsNil(o.CanPurchase) {
		var ret bool
		return ret
	}
	return *o.CanPurchase
}

// GetCanPurchaseOk returns a tuple with the CanPurchase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetCanPurchaseOk() (*bool, bool) {
	if o == nil || IsNil(o.CanPurchase) {
		return nil, false
	}
	return o.CanPurchase, true
}

// HasCanPurchase returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasCanPurchase() bool {
	if o != nil && !IsNil(o.CanPurchase) {
		return true
	}

	return false
}

// SetCanPurchase gets a reference to the given bool and assigns it to the CanPurchase field.
func (o *GetDciProductListV1RespListInner) SetCanPurchase(v bool) {
	o.CanPurchase = &v
}

// GetCreateTimestamp returns the CreateTimestamp field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetCreateTimestamp() int64 {
	if o == nil || IsNil(o.CreateTimestamp) {
		var ret int64
		return ret
	}
	return *o.CreateTimestamp
}

// GetCreateTimestampOk returns a tuple with the CreateTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetCreateTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTimestamp) {
		return nil, false
	}
	return o.CreateTimestamp, true
}

// HasCreateTimestamp returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasCreateTimestamp() bool {
	if o != nil && !IsNil(o.CreateTimestamp) {
		return true
	}

	return false
}

// SetCreateTimestamp gets a reference to the given int64 and assigns it to the CreateTimestamp field.
func (o *GetDciProductListV1RespListInner) SetCreateTimestamp(v int64) {
	o.CreateTimestamp = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *GetDciProductListV1RespListInner) SetDuration(v int32) {
	o.Duration = &v
}

// GetExercisedCoin returns the ExercisedCoin field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetExercisedCoin() string {
	if o == nil || IsNil(o.ExercisedCoin) {
		var ret string
		return ret
	}
	return *o.ExercisedCoin
}

// GetExercisedCoinOk returns a tuple with the ExercisedCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetExercisedCoinOk() (*string, bool) {
	if o == nil || IsNil(o.ExercisedCoin) {
		return nil, false
	}
	return o.ExercisedCoin, true
}

// HasExercisedCoin returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasExercisedCoin() bool {
	if o != nil && !IsNil(o.ExercisedCoin) {
		return true
	}

	return false
}

// SetExercisedCoin gets a reference to the given string and assigns it to the ExercisedCoin field.
func (o *GetDciProductListV1RespListInner) SetExercisedCoin(v string) {
	o.ExercisedCoin = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetDciProductListV1RespListInner) SetId(v string) {
	o.Id = &v
}

// GetInvestCoin returns the InvestCoin field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetInvestCoin() string {
	if o == nil || IsNil(o.InvestCoin) {
		var ret string
		return ret
	}
	return *o.InvestCoin
}

// GetInvestCoinOk returns a tuple with the InvestCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetInvestCoinOk() (*string, bool) {
	if o == nil || IsNil(o.InvestCoin) {
		return nil, false
	}
	return o.InvestCoin, true
}

// HasInvestCoin returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasInvestCoin() bool {
	if o != nil && !IsNil(o.InvestCoin) {
		return true
	}

	return false
}

// SetInvestCoin gets a reference to the given string and assigns it to the InvestCoin field.
func (o *GetDciProductListV1RespListInner) SetInvestCoin(v string) {
	o.InvestCoin = &v
}

// GetIsAutoCompoundEnable returns the IsAutoCompoundEnable field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetIsAutoCompoundEnable() bool {
	if o == nil || IsNil(o.IsAutoCompoundEnable) {
		var ret bool
		return ret
	}
	return *o.IsAutoCompoundEnable
}

// GetIsAutoCompoundEnableOk returns a tuple with the IsAutoCompoundEnable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetIsAutoCompoundEnableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAutoCompoundEnable) {
		return nil, false
	}
	return o.IsAutoCompoundEnable, true
}

// HasIsAutoCompoundEnable returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasIsAutoCompoundEnable() bool {
	if o != nil && !IsNil(o.IsAutoCompoundEnable) {
		return true
	}

	return false
}

// SetIsAutoCompoundEnable gets a reference to the given bool and assigns it to the IsAutoCompoundEnable field.
func (o *GetDciProductListV1RespListInner) SetIsAutoCompoundEnable(v bool) {
	o.IsAutoCompoundEnable = &v
}

// GetMaxAmount returns the MaxAmount field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetMaxAmount() string {
	if o == nil || IsNil(o.MaxAmount) {
		var ret string
		return ret
	}
	return *o.MaxAmount
}

// GetMaxAmountOk returns a tuple with the MaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetMaxAmountOk() (*string, bool) {
	if o == nil || IsNil(o.MaxAmount) {
		return nil, false
	}
	return o.MaxAmount, true
}

// HasMaxAmount returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasMaxAmount() bool {
	if o != nil && !IsNil(o.MaxAmount) {
		return true
	}

	return false
}

// SetMaxAmount gets a reference to the given string and assigns it to the MaxAmount field.
func (o *GetDciProductListV1RespListInner) SetMaxAmount(v string) {
	o.MaxAmount = &v
}

// GetMinAmount returns the MinAmount field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetMinAmount() string {
	if o == nil || IsNil(o.MinAmount) {
		var ret string
		return ret
	}
	return *o.MinAmount
}

// GetMinAmountOk returns a tuple with the MinAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetMinAmountOk() (*string, bool) {
	if o == nil || IsNil(o.MinAmount) {
		return nil, false
	}
	return o.MinAmount, true
}

// HasMinAmount returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasMinAmount() bool {
	if o != nil && !IsNil(o.MinAmount) {
		return true
	}

	return false
}

// SetMinAmount gets a reference to the given string and assigns it to the MinAmount field.
func (o *GetDciProductListV1RespListInner) SetMinAmount(v string) {
	o.MinAmount = &v
}

// GetOptionType returns the OptionType field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetOptionType() string {
	if o == nil || IsNil(o.OptionType) {
		var ret string
		return ret
	}
	return *o.OptionType
}

// GetOptionTypeOk returns a tuple with the OptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetOptionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OptionType) {
		return nil, false
	}
	return o.OptionType, true
}

// HasOptionType returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasOptionType() bool {
	if o != nil && !IsNil(o.OptionType) {
		return true
	}

	return false
}

// SetOptionType gets a reference to the given string and assigns it to the OptionType field.
func (o *GetDciProductListV1RespListInner) SetOptionType(v string) {
	o.OptionType = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetOrderId() int64 {
	if o == nil || IsNil(o.OrderId) {
		var ret int64
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetOrderIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int64 and assigns it to the OrderId field.
func (o *GetDciProductListV1RespListInner) SetOrderId(v int64) {
	o.OrderId = &v
}

// GetPurchaseDecimal returns the PurchaseDecimal field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetPurchaseDecimal() int32 {
	if o == nil || IsNil(o.PurchaseDecimal) {
		var ret int32
		return ret
	}
	return *o.PurchaseDecimal
}

// GetPurchaseDecimalOk returns a tuple with the PurchaseDecimal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetPurchaseDecimalOk() (*int32, bool) {
	if o == nil || IsNil(o.PurchaseDecimal) {
		return nil, false
	}
	return o.PurchaseDecimal, true
}

// HasPurchaseDecimal returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasPurchaseDecimal() bool {
	if o != nil && !IsNil(o.PurchaseDecimal) {
		return true
	}

	return false
}

// SetPurchaseDecimal gets a reference to the given int32 and assigns it to the PurchaseDecimal field.
func (o *GetDciProductListV1RespListInner) SetPurchaseDecimal(v int32) {
	o.PurchaseDecimal = &v
}

// GetPurchaseEndTime returns the PurchaseEndTime field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetPurchaseEndTime() int64 {
	if o == nil || IsNil(o.PurchaseEndTime) {
		var ret int64
		return ret
	}
	return *o.PurchaseEndTime
}

// GetPurchaseEndTimeOk returns a tuple with the PurchaseEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetPurchaseEndTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.PurchaseEndTime) {
		return nil, false
	}
	return o.PurchaseEndTime, true
}

// HasPurchaseEndTime returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasPurchaseEndTime() bool {
	if o != nil && !IsNil(o.PurchaseEndTime) {
		return true
	}

	return false
}

// SetPurchaseEndTime gets a reference to the given int64 and assigns it to the PurchaseEndTime field.
func (o *GetDciProductListV1RespListInner) SetPurchaseEndTime(v int64) {
	o.PurchaseEndTime = &v
}

// GetSettleDate returns the SettleDate field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetSettleDate() int64 {
	if o == nil || IsNil(o.SettleDate) {
		var ret int64
		return ret
	}
	return *o.SettleDate
}

// GetSettleDateOk returns a tuple with the SettleDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetSettleDateOk() (*int64, bool) {
	if o == nil || IsNil(o.SettleDate) {
		return nil, false
	}
	return o.SettleDate, true
}

// HasSettleDate returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasSettleDate() bool {
	if o != nil && !IsNil(o.SettleDate) {
		return true
	}

	return false
}

// SetSettleDate gets a reference to the given int64 and assigns it to the SettleDate field.
func (o *GetDciProductListV1RespListInner) SetSettleDate(v int64) {
	o.SettleDate = &v
}

// GetStrikePrice returns the StrikePrice field value if set, zero value otherwise.
func (o *GetDciProductListV1RespListInner) GetStrikePrice() string {
	if o == nil || IsNil(o.StrikePrice) {
		var ret string
		return ret
	}
	return *o.StrikePrice
}

// GetStrikePriceOk returns a tuple with the StrikePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductListV1RespListInner) GetStrikePriceOk() (*string, bool) {
	if o == nil || IsNil(o.StrikePrice) {
		return nil, false
	}
	return o.StrikePrice, true
}

// HasStrikePrice returns a boolean if a field has been set.
func (o *GetDciProductListV1RespListInner) HasStrikePrice() bool {
	if o != nil && !IsNil(o.StrikePrice) {
		return true
	}

	return false
}

// SetStrikePrice gets a reference to the given string and assigns it to the StrikePrice field.
func (o *GetDciProductListV1RespListInner) SetStrikePrice(v string) {
	o.StrikePrice = &v
}

func (o GetDciProductListV1RespListInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDciProductListV1RespListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Apr) {
		toSerialize["apr"] = o.Apr
	}
	if !IsNil(o.AutoCompoundPlanList) {
		toSerialize["autoCompoundPlanList"] = o.AutoCompoundPlanList
	}
	if !IsNil(o.CanPurchase) {
		toSerialize["canPurchase"] = o.CanPurchase
	}
	if !IsNil(o.CreateTimestamp) {
		toSerialize["createTimestamp"] = o.CreateTimestamp
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.ExercisedCoin) {
		toSerialize["exercisedCoin"] = o.ExercisedCoin
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InvestCoin) {
		toSerialize["investCoin"] = o.InvestCoin
	}
	if !IsNil(o.IsAutoCompoundEnable) {
		toSerialize["isAutoCompoundEnable"] = o.IsAutoCompoundEnable
	}
	if !IsNil(o.MaxAmount) {
		toSerialize["maxAmount"] = o.MaxAmount
	}
	if !IsNil(o.MinAmount) {
		toSerialize["minAmount"] = o.MinAmount
	}
	if !IsNil(o.OptionType) {
		toSerialize["optionType"] = o.OptionType
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.PurchaseDecimal) {
		toSerialize["purchaseDecimal"] = o.PurchaseDecimal
	}
	if !IsNil(o.PurchaseEndTime) {
		toSerialize["purchaseEndTime"] = o.PurchaseEndTime
	}
	if !IsNil(o.SettleDate) {
		toSerialize["settleDate"] = o.SettleDate
	}
	if !IsNil(o.StrikePrice) {
		toSerialize["strikePrice"] = o.StrikePrice
	}
	return toSerialize, nil
}

type NullableGetDciProductListV1RespListInner struct {
	value *GetDciProductListV1RespListInner
	isSet bool
}

func (v NullableGetDciProductListV1RespListInner) Get() *GetDciProductListV1RespListInner {
	return v.value
}

func (v *NullableGetDciProductListV1RespListInner) Set(val *GetDciProductListV1RespListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDciProductListV1RespListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDciProductListV1RespListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDciProductListV1RespListInner(val *GetDciProductListV1RespListInner) *NullableGetDciProductListV1RespListInner {
	return &NullableGetDciProductListV1RespListInner{value: val, isSet: true}
}

func (v NullableGetDciProductListV1RespListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDciProductListV1RespListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


