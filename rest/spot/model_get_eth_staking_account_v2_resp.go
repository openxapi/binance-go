/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetEthStakingAccountV2Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetEthStakingAccountV2Resp{}

// GetEthStakingAccountV2Resp struct for GetEthStakingAccountV2Resp
type GetEthStakingAccountV2Resp struct {
	HoldingInETH *string `json:"holdingInETH,omitempty"`
	Holdings *GetEthStakingAccountV2RespHoldings `json:"holdings,omitempty"`
	Profit *GetEthStakingAccountV2RespProfit `json:"profit,omitempty"`
	ThirtyDaysProfitInETH *string `json:"thirtyDaysProfitInETH,omitempty"`
}

// NewGetEthStakingAccountV2Resp instantiates a new GetEthStakingAccountV2Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetEthStakingAccountV2Resp() *GetEthStakingAccountV2Resp {
	this := GetEthStakingAccountV2Resp{}
	return &this
}

// NewGetEthStakingAccountV2RespWithDefaults instantiates a new GetEthStakingAccountV2Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetEthStakingAccountV2RespWithDefaults() *GetEthStakingAccountV2Resp {
	this := GetEthStakingAccountV2Resp{}
	return &this
}

// GetHoldingInETH returns the HoldingInETH field value if set, zero value otherwise.
func (o *GetEthStakingAccountV2Resp) GetHoldingInETH() string {
	if o == nil || IsNil(o.HoldingInETH) {
		var ret string
		return ret
	}
	return *o.HoldingInETH
}

// GetHoldingInETHOk returns a tuple with the HoldingInETH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingAccountV2Resp) GetHoldingInETHOk() (*string, bool) {
	if o == nil || IsNil(o.HoldingInETH) {
		return nil, false
	}
	return o.HoldingInETH, true
}

// HasHoldingInETH returns a boolean if a field has been set.
func (o *GetEthStakingAccountV2Resp) HasHoldingInETH() bool {
	if o != nil && !IsNil(o.HoldingInETH) {
		return true
	}

	return false
}

// SetHoldingInETH gets a reference to the given string and assigns it to the HoldingInETH field.
func (o *GetEthStakingAccountV2Resp) SetHoldingInETH(v string) {
	o.HoldingInETH = &v
}

// GetHoldings returns the Holdings field value if set, zero value otherwise.
func (o *GetEthStakingAccountV2Resp) GetHoldings() GetEthStakingAccountV2RespHoldings {
	if o == nil || IsNil(o.Holdings) {
		var ret GetEthStakingAccountV2RespHoldings
		return ret
	}
	return *o.Holdings
}

// GetHoldingsOk returns a tuple with the Holdings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingAccountV2Resp) GetHoldingsOk() (*GetEthStakingAccountV2RespHoldings, bool) {
	if o == nil || IsNil(o.Holdings) {
		return nil, false
	}
	return o.Holdings, true
}

// HasHoldings returns a boolean if a field has been set.
func (o *GetEthStakingAccountV2Resp) HasHoldings() bool {
	if o != nil && !IsNil(o.Holdings) {
		return true
	}

	return false
}

// SetHoldings gets a reference to the given GetEthStakingAccountV2RespHoldings and assigns it to the Holdings field.
func (o *GetEthStakingAccountV2Resp) SetHoldings(v GetEthStakingAccountV2RespHoldings) {
	o.Holdings = &v
}

// GetProfit returns the Profit field value if set, zero value otherwise.
func (o *GetEthStakingAccountV2Resp) GetProfit() GetEthStakingAccountV2RespProfit {
	if o == nil || IsNil(o.Profit) {
		var ret GetEthStakingAccountV2RespProfit
		return ret
	}
	return *o.Profit
}

// GetProfitOk returns a tuple with the Profit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingAccountV2Resp) GetProfitOk() (*GetEthStakingAccountV2RespProfit, bool) {
	if o == nil || IsNil(o.Profit) {
		return nil, false
	}
	return o.Profit, true
}

// HasProfit returns a boolean if a field has been set.
func (o *GetEthStakingAccountV2Resp) HasProfit() bool {
	if o != nil && !IsNil(o.Profit) {
		return true
	}

	return false
}

// SetProfit gets a reference to the given GetEthStakingAccountV2RespProfit and assigns it to the Profit field.
func (o *GetEthStakingAccountV2Resp) SetProfit(v GetEthStakingAccountV2RespProfit) {
	o.Profit = &v
}

// GetThirtyDaysProfitInETH returns the ThirtyDaysProfitInETH field value if set, zero value otherwise.
func (o *GetEthStakingAccountV2Resp) GetThirtyDaysProfitInETH() string {
	if o == nil || IsNil(o.ThirtyDaysProfitInETH) {
		var ret string
		return ret
	}
	return *o.ThirtyDaysProfitInETH
}

// GetThirtyDaysProfitInETHOk returns a tuple with the ThirtyDaysProfitInETH field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetEthStakingAccountV2Resp) GetThirtyDaysProfitInETHOk() (*string, bool) {
	if o == nil || IsNil(o.ThirtyDaysProfitInETH) {
		return nil, false
	}
	return o.ThirtyDaysProfitInETH, true
}

// HasThirtyDaysProfitInETH returns a boolean if a field has been set.
func (o *GetEthStakingAccountV2Resp) HasThirtyDaysProfitInETH() bool {
	if o != nil && !IsNil(o.ThirtyDaysProfitInETH) {
		return true
	}

	return false
}

// SetThirtyDaysProfitInETH gets a reference to the given string and assigns it to the ThirtyDaysProfitInETH field.
func (o *GetEthStakingAccountV2Resp) SetThirtyDaysProfitInETH(v string) {
	o.ThirtyDaysProfitInETH = &v
}

func (o GetEthStakingAccountV2Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetEthStakingAccountV2Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HoldingInETH) {
		toSerialize["holdingInETH"] = o.HoldingInETH
	}
	if !IsNil(o.Holdings) {
		toSerialize["holdings"] = o.Holdings
	}
	if !IsNil(o.Profit) {
		toSerialize["profit"] = o.Profit
	}
	if !IsNil(o.ThirtyDaysProfitInETH) {
		toSerialize["thirtyDaysProfitInETH"] = o.ThirtyDaysProfitInETH
	}
	return toSerialize, nil
}

type NullableGetEthStakingAccountV2Resp struct {
	value *GetEthStakingAccountV2Resp
	isSet bool
}

func (v NullableGetEthStakingAccountV2Resp) Get() *GetEthStakingAccountV2Resp {
	return v.value
}

func (v *NullableGetEthStakingAccountV2Resp) Set(val *GetEthStakingAccountV2Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetEthStakingAccountV2Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetEthStakingAccountV2Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetEthStakingAccountV2Resp(val *GetEthStakingAccountV2Resp) *NullableGetEthStakingAccountV2Resp {
	return &NullableGetEthStakingAccountV2Resp{value: val, isSet: true}
}

func (v NullableGetEthStakingAccountV2Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetEthStakingAccountV2Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


