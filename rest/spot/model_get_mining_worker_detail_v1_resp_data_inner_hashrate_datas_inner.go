/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner{}

// GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner struct for GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner
type GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner struct {
	Hashrate *string `json:"hashrate,omitempty"`
	Reject *int32 `json:"reject,omitempty"`
	Time *int64 `json:"time,omitempty"`
}

// NewGetMiningWorkerDetailV1RespDataInnerHashrateDatasInner instantiates a new GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMiningWorkerDetailV1RespDataInnerHashrateDatasInner() *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner {
	this := GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner{}
	return &this
}

// NewGetMiningWorkerDetailV1RespDataInnerHashrateDatasInnerWithDefaults instantiates a new GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMiningWorkerDetailV1RespDataInnerHashrateDatasInnerWithDefaults() *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner {
	this := GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner{}
	return &this
}

// GetHashrate returns the Hashrate field value if set, zero value otherwise.
func (o *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) GetHashrate() string {
	if o == nil || IsNil(o.Hashrate) {
		var ret string
		return ret
	}
	return *o.Hashrate
}

// GetHashrateOk returns a tuple with the Hashrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) GetHashrateOk() (*string, bool) {
	if o == nil || IsNil(o.Hashrate) {
		return nil, false
	}
	return o.Hashrate, true
}

// HasHashrate returns a boolean if a field has been set.
func (o *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) HasHashrate() bool {
	if o != nil && !IsNil(o.Hashrate) {
		return true
	}

	return false
}

// SetHashrate gets a reference to the given string and assigns it to the Hashrate field.
func (o *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) SetHashrate(v string) {
	o.Hashrate = &v
}

// GetReject returns the Reject field value if set, zero value otherwise.
func (o *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) GetReject() int32 {
	if o == nil || IsNil(o.Reject) {
		var ret int32
		return ret
	}
	return *o.Reject
}

// GetRejectOk returns a tuple with the Reject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) GetRejectOk() (*int32, bool) {
	if o == nil || IsNil(o.Reject) {
		return nil, false
	}
	return o.Reject, true
}

// HasReject returns a boolean if a field has been set.
func (o *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) HasReject() bool {
	if o != nil && !IsNil(o.Reject) {
		return true
	}

	return false
}

// SetReject gets a reference to the given int32 and assigns it to the Reject field.
func (o *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) SetReject(v int32) {
	o.Reject = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) SetTime(v int64) {
	o.Time = &v
}

func (o GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hashrate) {
		toSerialize["hashrate"] = o.Hashrate
	}
	if !IsNil(o.Reject) {
		toSerialize["reject"] = o.Reject
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableGetMiningWorkerDetailV1RespDataInnerHashrateDatasInner struct {
	value *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner
	isSet bool
}

func (v NullableGetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) Get() *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner {
	return v.value
}

func (v *NullableGetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) Set(val *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMiningWorkerDetailV1RespDataInnerHashrateDatasInner(val *GetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) *NullableGetMiningWorkerDetailV1RespDataInnerHashrateDatasInner {
	return &NullableGetMiningWorkerDetailV1RespDataInnerHashrateDatasInner{value: val, isSet: true}
}

func (v NullableGetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMiningWorkerDetailV1RespDataInnerHashrateDatasInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


