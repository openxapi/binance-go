/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the SpotGetExchangeInfoV3RespSymbolsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpotGetExchangeInfoV3RespSymbolsInner{}

// SpotGetExchangeInfoV3RespSymbolsInner struct for SpotGetExchangeInfoV3RespSymbolsInner
type SpotGetExchangeInfoV3RespSymbolsInner struct {
	AllowTrailingStop *bool `json:"allowTrailingStop,omitempty"`
	AllowedSelfTradePreventionModes []string `json:"allowedSelfTradePreventionModes,omitempty"`
	BaseAsset *string `json:"baseAsset,omitempty"`
	BaseAssetPrecision *int32 `json:"baseAssetPrecision,omitempty"`
	BaseCommissionPrecision *int32 `json:"baseCommissionPrecision,omitempty"`
	CancelReplaceAllowed *bool `json:"cancelReplaceAllowed,omitempty"`
	DefaultSelfTradePreventionMode *string `json:"defaultSelfTradePreventionMode,omitempty"`
	Filters []SpotSymbolFilter `json:"filters,omitempty"`
	IcebergAllowed *bool `json:"icebergAllowed,omitempty"`
	IsMarginTradingAllowed *bool `json:"isMarginTradingAllowed,omitempty"`
	IsSpotTradingAllowed *bool `json:"isSpotTradingAllowed,omitempty"`
	OcoAllowed *bool `json:"ocoAllowed,omitempty"`
	OrderTypes []string `json:"orderTypes,omitempty"`
	OtoAllowed *bool `json:"otoAllowed,omitempty"`
	PermissionSets [][]string `json:"permissionSets,omitempty"`
	Permissions []string `json:"permissions,omitempty"`
	QuoteAsset *string `json:"quoteAsset,omitempty"`
	QuoteAssetPrecision *int32 `json:"quoteAssetPrecision,omitempty"`
	QuoteCommissionPrecision *int32 `json:"quoteCommissionPrecision,omitempty"`
	QuoteOrderQtyMarketAllowed *bool `json:"quoteOrderQtyMarketAllowed,omitempty"`
	QuotePrecision *int32 `json:"quotePrecision,omitempty"`
	Status *string `json:"status,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
}

// NewSpotGetExchangeInfoV3RespSymbolsInner instantiates a new SpotGetExchangeInfoV3RespSymbolsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpotGetExchangeInfoV3RespSymbolsInner() *SpotGetExchangeInfoV3RespSymbolsInner {
	this := SpotGetExchangeInfoV3RespSymbolsInner{}
	return &this
}

// NewSpotGetExchangeInfoV3RespSymbolsInnerWithDefaults instantiates a new SpotGetExchangeInfoV3RespSymbolsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpotGetExchangeInfoV3RespSymbolsInnerWithDefaults() *SpotGetExchangeInfoV3RespSymbolsInner {
	this := SpotGetExchangeInfoV3RespSymbolsInner{}
	return &this
}

// GetAllowTrailingStop returns the AllowTrailingStop field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetAllowTrailingStop() bool {
	if o == nil || IsNil(o.AllowTrailingStop) {
		var ret bool
		return ret
	}
	return *o.AllowTrailingStop
}

// GetAllowTrailingStopOk returns a tuple with the AllowTrailingStop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetAllowTrailingStopOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowTrailingStop) {
		return nil, false
	}
	return o.AllowTrailingStop, true
}

// HasAllowTrailingStop returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasAllowTrailingStop() bool {
	if o != nil && !IsNil(o.AllowTrailingStop) {
		return true
	}

	return false
}

// SetAllowTrailingStop gets a reference to the given bool and assigns it to the AllowTrailingStop field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetAllowTrailingStop(v bool) {
	o.AllowTrailingStop = &v
}

// GetAllowedSelfTradePreventionModes returns the AllowedSelfTradePreventionModes field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetAllowedSelfTradePreventionModes() []string {
	if o == nil || IsNil(o.AllowedSelfTradePreventionModes) {
		var ret []string
		return ret
	}
	return o.AllowedSelfTradePreventionModes
}

// GetAllowedSelfTradePreventionModesOk returns a tuple with the AllowedSelfTradePreventionModes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetAllowedSelfTradePreventionModesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedSelfTradePreventionModes) {
		return nil, false
	}
	return o.AllowedSelfTradePreventionModes, true
}

// HasAllowedSelfTradePreventionModes returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasAllowedSelfTradePreventionModes() bool {
	if o != nil && !IsNil(o.AllowedSelfTradePreventionModes) {
		return true
	}

	return false
}

// SetAllowedSelfTradePreventionModes gets a reference to the given []string and assigns it to the AllowedSelfTradePreventionModes field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetAllowedSelfTradePreventionModes(v []string) {
	o.AllowedSelfTradePreventionModes = v
}

// GetBaseAsset returns the BaseAsset field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetBaseAsset() string {
	if o == nil || IsNil(o.BaseAsset) {
		var ret string
		return ret
	}
	return *o.BaseAsset
}

// GetBaseAssetOk returns a tuple with the BaseAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetBaseAssetOk() (*string, bool) {
	if o == nil || IsNil(o.BaseAsset) {
		return nil, false
	}
	return o.BaseAsset, true
}

// HasBaseAsset returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasBaseAsset() bool {
	if o != nil && !IsNil(o.BaseAsset) {
		return true
	}

	return false
}

// SetBaseAsset gets a reference to the given string and assigns it to the BaseAsset field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetBaseAsset(v string) {
	o.BaseAsset = &v
}

// GetBaseAssetPrecision returns the BaseAssetPrecision field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetBaseAssetPrecision() int32 {
	if o == nil || IsNil(o.BaseAssetPrecision) {
		var ret int32
		return ret
	}
	return *o.BaseAssetPrecision
}

// GetBaseAssetPrecisionOk returns a tuple with the BaseAssetPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetBaseAssetPrecisionOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseAssetPrecision) {
		return nil, false
	}
	return o.BaseAssetPrecision, true
}

// HasBaseAssetPrecision returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasBaseAssetPrecision() bool {
	if o != nil && !IsNil(o.BaseAssetPrecision) {
		return true
	}

	return false
}

// SetBaseAssetPrecision gets a reference to the given int32 and assigns it to the BaseAssetPrecision field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetBaseAssetPrecision(v int32) {
	o.BaseAssetPrecision = &v
}

// GetBaseCommissionPrecision returns the BaseCommissionPrecision field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetBaseCommissionPrecision() int32 {
	if o == nil || IsNil(o.BaseCommissionPrecision) {
		var ret int32
		return ret
	}
	return *o.BaseCommissionPrecision
}

// GetBaseCommissionPrecisionOk returns a tuple with the BaseCommissionPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetBaseCommissionPrecisionOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseCommissionPrecision) {
		return nil, false
	}
	return o.BaseCommissionPrecision, true
}

// HasBaseCommissionPrecision returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasBaseCommissionPrecision() bool {
	if o != nil && !IsNil(o.BaseCommissionPrecision) {
		return true
	}

	return false
}

// SetBaseCommissionPrecision gets a reference to the given int32 and assigns it to the BaseCommissionPrecision field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetBaseCommissionPrecision(v int32) {
	o.BaseCommissionPrecision = &v
}

// GetCancelReplaceAllowed returns the CancelReplaceAllowed field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetCancelReplaceAllowed() bool {
	if o == nil || IsNil(o.CancelReplaceAllowed) {
		var ret bool
		return ret
	}
	return *o.CancelReplaceAllowed
}

// GetCancelReplaceAllowedOk returns a tuple with the CancelReplaceAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetCancelReplaceAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.CancelReplaceAllowed) {
		return nil, false
	}
	return o.CancelReplaceAllowed, true
}

// HasCancelReplaceAllowed returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasCancelReplaceAllowed() bool {
	if o != nil && !IsNil(o.CancelReplaceAllowed) {
		return true
	}

	return false
}

// SetCancelReplaceAllowed gets a reference to the given bool and assigns it to the CancelReplaceAllowed field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetCancelReplaceAllowed(v bool) {
	o.CancelReplaceAllowed = &v
}

// GetDefaultSelfTradePreventionMode returns the DefaultSelfTradePreventionMode field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetDefaultSelfTradePreventionMode() string {
	if o == nil || IsNil(o.DefaultSelfTradePreventionMode) {
		var ret string
		return ret
	}
	return *o.DefaultSelfTradePreventionMode
}

// GetDefaultSelfTradePreventionModeOk returns a tuple with the DefaultSelfTradePreventionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetDefaultSelfTradePreventionModeOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultSelfTradePreventionMode) {
		return nil, false
	}
	return o.DefaultSelfTradePreventionMode, true
}

// HasDefaultSelfTradePreventionMode returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasDefaultSelfTradePreventionMode() bool {
	if o != nil && !IsNil(o.DefaultSelfTradePreventionMode) {
		return true
	}

	return false
}

// SetDefaultSelfTradePreventionMode gets a reference to the given string and assigns it to the DefaultSelfTradePreventionMode field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetDefaultSelfTradePreventionMode(v string) {
	o.DefaultSelfTradePreventionMode = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetFilters() []SpotSymbolFilter {
	if o == nil || IsNil(o.Filters) {
		var ret []SpotSymbolFilter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetFiltersOk() ([]SpotSymbolFilter, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []SpotSymbolFilter and assigns it to the Filters field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetFilters(v []SpotSymbolFilter) {
	o.Filters = v
}

// GetIcebergAllowed returns the IcebergAllowed field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetIcebergAllowed() bool {
	if o == nil || IsNil(o.IcebergAllowed) {
		var ret bool
		return ret
	}
	return *o.IcebergAllowed
}

// GetIcebergAllowedOk returns a tuple with the IcebergAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetIcebergAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.IcebergAllowed) {
		return nil, false
	}
	return o.IcebergAllowed, true
}

// HasIcebergAllowed returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasIcebergAllowed() bool {
	if o != nil && !IsNil(o.IcebergAllowed) {
		return true
	}

	return false
}

// SetIcebergAllowed gets a reference to the given bool and assigns it to the IcebergAllowed field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetIcebergAllowed(v bool) {
	o.IcebergAllowed = &v
}

// GetIsMarginTradingAllowed returns the IsMarginTradingAllowed field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetIsMarginTradingAllowed() bool {
	if o == nil || IsNil(o.IsMarginTradingAllowed) {
		var ret bool
		return ret
	}
	return *o.IsMarginTradingAllowed
}

// GetIsMarginTradingAllowedOk returns a tuple with the IsMarginTradingAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetIsMarginTradingAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMarginTradingAllowed) {
		return nil, false
	}
	return o.IsMarginTradingAllowed, true
}

// HasIsMarginTradingAllowed returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasIsMarginTradingAllowed() bool {
	if o != nil && !IsNil(o.IsMarginTradingAllowed) {
		return true
	}

	return false
}

// SetIsMarginTradingAllowed gets a reference to the given bool and assigns it to the IsMarginTradingAllowed field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetIsMarginTradingAllowed(v bool) {
	o.IsMarginTradingAllowed = &v
}

// GetIsSpotTradingAllowed returns the IsSpotTradingAllowed field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetIsSpotTradingAllowed() bool {
	if o == nil || IsNil(o.IsSpotTradingAllowed) {
		var ret bool
		return ret
	}
	return *o.IsSpotTradingAllowed
}

// GetIsSpotTradingAllowedOk returns a tuple with the IsSpotTradingAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetIsSpotTradingAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsSpotTradingAllowed) {
		return nil, false
	}
	return o.IsSpotTradingAllowed, true
}

// HasIsSpotTradingAllowed returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasIsSpotTradingAllowed() bool {
	if o != nil && !IsNil(o.IsSpotTradingAllowed) {
		return true
	}

	return false
}

// SetIsSpotTradingAllowed gets a reference to the given bool and assigns it to the IsSpotTradingAllowed field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetIsSpotTradingAllowed(v bool) {
	o.IsSpotTradingAllowed = &v
}

// GetOcoAllowed returns the OcoAllowed field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetOcoAllowed() bool {
	if o == nil || IsNil(o.OcoAllowed) {
		var ret bool
		return ret
	}
	return *o.OcoAllowed
}

// GetOcoAllowedOk returns a tuple with the OcoAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetOcoAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.OcoAllowed) {
		return nil, false
	}
	return o.OcoAllowed, true
}

// HasOcoAllowed returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasOcoAllowed() bool {
	if o != nil && !IsNil(o.OcoAllowed) {
		return true
	}

	return false
}

// SetOcoAllowed gets a reference to the given bool and assigns it to the OcoAllowed field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetOcoAllowed(v bool) {
	o.OcoAllowed = &v
}

// GetOrderTypes returns the OrderTypes field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetOrderTypes() []string {
	if o == nil || IsNil(o.OrderTypes) {
		var ret []string
		return ret
	}
	return o.OrderTypes
}

// GetOrderTypesOk returns a tuple with the OrderTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetOrderTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.OrderTypes) {
		return nil, false
	}
	return o.OrderTypes, true
}

// HasOrderTypes returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasOrderTypes() bool {
	if o != nil && !IsNil(o.OrderTypes) {
		return true
	}

	return false
}

// SetOrderTypes gets a reference to the given []string and assigns it to the OrderTypes field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetOrderTypes(v []string) {
	o.OrderTypes = v
}

// GetOtoAllowed returns the OtoAllowed field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetOtoAllowed() bool {
	if o == nil || IsNil(o.OtoAllowed) {
		var ret bool
		return ret
	}
	return *o.OtoAllowed
}

// GetOtoAllowedOk returns a tuple with the OtoAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetOtoAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.OtoAllowed) {
		return nil, false
	}
	return o.OtoAllowed, true
}

// HasOtoAllowed returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasOtoAllowed() bool {
	if o != nil && !IsNil(o.OtoAllowed) {
		return true
	}

	return false
}

// SetOtoAllowed gets a reference to the given bool and assigns it to the OtoAllowed field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetOtoAllowed(v bool) {
	o.OtoAllowed = &v
}

// GetPermissionSets returns the PermissionSets field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetPermissionSets() [][]string {
	if o == nil || IsNil(o.PermissionSets) {
		var ret [][]string
		return ret
	}
	return o.PermissionSets
}

// GetPermissionSetsOk returns a tuple with the PermissionSets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetPermissionSetsOk() ([][]string, bool) {
	if o == nil || IsNil(o.PermissionSets) {
		return nil, false
	}
	return o.PermissionSets, true
}

// HasPermissionSets returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasPermissionSets() bool {
	if o != nil && !IsNil(o.PermissionSets) {
		return true
	}

	return false
}

// SetPermissionSets gets a reference to the given [][]string and assigns it to the PermissionSets field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetPermissionSets(v [][]string) {
	o.PermissionSets = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetPermissions() []string {
	if o == nil || IsNil(o.Permissions) {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetPermissionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasPermissions() bool {
	if o != nil && !IsNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetPermissions(v []string) {
	o.Permissions = v
}

// GetQuoteAsset returns the QuoteAsset field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetQuoteAsset() string {
	if o == nil || IsNil(o.QuoteAsset) {
		var ret string
		return ret
	}
	return *o.QuoteAsset
}

// GetQuoteAssetOk returns a tuple with the QuoteAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetQuoteAssetOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteAsset) {
		return nil, false
	}
	return o.QuoteAsset, true
}

// HasQuoteAsset returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasQuoteAsset() bool {
	if o != nil && !IsNil(o.QuoteAsset) {
		return true
	}

	return false
}

// SetQuoteAsset gets a reference to the given string and assigns it to the QuoteAsset field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetQuoteAsset(v string) {
	o.QuoteAsset = &v
}

// GetQuoteAssetPrecision returns the QuoteAssetPrecision field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetQuoteAssetPrecision() int32 {
	if o == nil || IsNil(o.QuoteAssetPrecision) {
		var ret int32
		return ret
	}
	return *o.QuoteAssetPrecision
}

// GetQuoteAssetPrecisionOk returns a tuple with the QuoteAssetPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetQuoteAssetPrecisionOk() (*int32, bool) {
	if o == nil || IsNil(o.QuoteAssetPrecision) {
		return nil, false
	}
	return o.QuoteAssetPrecision, true
}

// HasQuoteAssetPrecision returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasQuoteAssetPrecision() bool {
	if o != nil && !IsNil(o.QuoteAssetPrecision) {
		return true
	}

	return false
}

// SetQuoteAssetPrecision gets a reference to the given int32 and assigns it to the QuoteAssetPrecision field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetQuoteAssetPrecision(v int32) {
	o.QuoteAssetPrecision = &v
}

// GetQuoteCommissionPrecision returns the QuoteCommissionPrecision field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetQuoteCommissionPrecision() int32 {
	if o == nil || IsNil(o.QuoteCommissionPrecision) {
		var ret int32
		return ret
	}
	return *o.QuoteCommissionPrecision
}

// GetQuoteCommissionPrecisionOk returns a tuple with the QuoteCommissionPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetQuoteCommissionPrecisionOk() (*int32, bool) {
	if o == nil || IsNil(o.QuoteCommissionPrecision) {
		return nil, false
	}
	return o.QuoteCommissionPrecision, true
}

// HasQuoteCommissionPrecision returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasQuoteCommissionPrecision() bool {
	if o != nil && !IsNil(o.QuoteCommissionPrecision) {
		return true
	}

	return false
}

// SetQuoteCommissionPrecision gets a reference to the given int32 and assigns it to the QuoteCommissionPrecision field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetQuoteCommissionPrecision(v int32) {
	o.QuoteCommissionPrecision = &v
}

// GetQuoteOrderQtyMarketAllowed returns the QuoteOrderQtyMarketAllowed field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetQuoteOrderQtyMarketAllowed() bool {
	if o == nil || IsNil(o.QuoteOrderQtyMarketAllowed) {
		var ret bool
		return ret
	}
	return *o.QuoteOrderQtyMarketAllowed
}

// GetQuoteOrderQtyMarketAllowedOk returns a tuple with the QuoteOrderQtyMarketAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetQuoteOrderQtyMarketAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.QuoteOrderQtyMarketAllowed) {
		return nil, false
	}
	return o.QuoteOrderQtyMarketAllowed, true
}

// HasQuoteOrderQtyMarketAllowed returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasQuoteOrderQtyMarketAllowed() bool {
	if o != nil && !IsNil(o.QuoteOrderQtyMarketAllowed) {
		return true
	}

	return false
}

// SetQuoteOrderQtyMarketAllowed gets a reference to the given bool and assigns it to the QuoteOrderQtyMarketAllowed field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetQuoteOrderQtyMarketAllowed(v bool) {
	o.QuoteOrderQtyMarketAllowed = &v
}

// GetQuotePrecision returns the QuotePrecision field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetQuotePrecision() int32 {
	if o == nil || IsNil(o.QuotePrecision) {
		var ret int32
		return ret
	}
	return *o.QuotePrecision
}

// GetQuotePrecisionOk returns a tuple with the QuotePrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetQuotePrecisionOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotePrecision) {
		return nil, false
	}
	return o.QuotePrecision, true
}

// HasQuotePrecision returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasQuotePrecision() bool {
	if o != nil && !IsNil(o.QuotePrecision) {
		return true
	}

	return false
}

// SetQuotePrecision gets a reference to the given int32 and assigns it to the QuotePrecision field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetQuotePrecision(v int32) {
	o.QuotePrecision = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetStatus(v string) {
	o.Status = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *SpotGetExchangeInfoV3RespSymbolsInner) SetSymbol(v string) {
	o.Symbol = &v
}

func (o SpotGetExchangeInfoV3RespSymbolsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpotGetExchangeInfoV3RespSymbolsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowTrailingStop) {
		toSerialize["allowTrailingStop"] = o.AllowTrailingStop
	}
	if !IsNil(o.AllowedSelfTradePreventionModes) {
		toSerialize["allowedSelfTradePreventionModes"] = o.AllowedSelfTradePreventionModes
	}
	if !IsNil(o.BaseAsset) {
		toSerialize["baseAsset"] = o.BaseAsset
	}
	if !IsNil(o.BaseAssetPrecision) {
		toSerialize["baseAssetPrecision"] = o.BaseAssetPrecision
	}
	if !IsNil(o.BaseCommissionPrecision) {
		toSerialize["baseCommissionPrecision"] = o.BaseCommissionPrecision
	}
	if !IsNil(o.CancelReplaceAllowed) {
		toSerialize["cancelReplaceAllowed"] = o.CancelReplaceAllowed
	}
	if !IsNil(o.DefaultSelfTradePreventionMode) {
		toSerialize["defaultSelfTradePreventionMode"] = o.DefaultSelfTradePreventionMode
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.IcebergAllowed) {
		toSerialize["icebergAllowed"] = o.IcebergAllowed
	}
	if !IsNil(o.IsMarginTradingAllowed) {
		toSerialize["isMarginTradingAllowed"] = o.IsMarginTradingAllowed
	}
	if !IsNil(o.IsSpotTradingAllowed) {
		toSerialize["isSpotTradingAllowed"] = o.IsSpotTradingAllowed
	}
	if !IsNil(o.OcoAllowed) {
		toSerialize["ocoAllowed"] = o.OcoAllowed
	}
	if !IsNil(o.OrderTypes) {
		toSerialize["orderTypes"] = o.OrderTypes
	}
	if !IsNil(o.OtoAllowed) {
		toSerialize["otoAllowed"] = o.OtoAllowed
	}
	if !IsNil(o.PermissionSets) {
		toSerialize["permissionSets"] = o.PermissionSets
	}
	if !IsNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !IsNil(o.QuoteAsset) {
		toSerialize["quoteAsset"] = o.QuoteAsset
	}
	if !IsNil(o.QuoteAssetPrecision) {
		toSerialize["quoteAssetPrecision"] = o.QuoteAssetPrecision
	}
	if !IsNil(o.QuoteCommissionPrecision) {
		toSerialize["quoteCommissionPrecision"] = o.QuoteCommissionPrecision
	}
	if !IsNil(o.QuoteOrderQtyMarketAllowed) {
		toSerialize["quoteOrderQtyMarketAllowed"] = o.QuoteOrderQtyMarketAllowed
	}
	if !IsNil(o.QuotePrecision) {
		toSerialize["quotePrecision"] = o.QuotePrecision
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	return toSerialize, nil
}

type NullableSpotGetExchangeInfoV3RespSymbolsInner struct {
	value *SpotGetExchangeInfoV3RespSymbolsInner
	isSet bool
}

func (v NullableSpotGetExchangeInfoV3RespSymbolsInner) Get() *SpotGetExchangeInfoV3RespSymbolsInner {
	return v.value
}

func (v *NullableSpotGetExchangeInfoV3RespSymbolsInner) Set(val *SpotGetExchangeInfoV3RespSymbolsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSpotGetExchangeInfoV3RespSymbolsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSpotGetExchangeInfoV3RespSymbolsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpotGetExchangeInfoV3RespSymbolsInner(val *SpotGetExchangeInfoV3RespSymbolsInner) *NullableSpotGetExchangeInfoV3RespSymbolsInner {
	return &NullableSpotGetExchangeInfoV3RespSymbolsInner{value: val, isSet: true}
}

func (v NullableSpotGetExchangeInfoV3RespSymbolsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpotGetExchangeInfoV3RespSymbolsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


