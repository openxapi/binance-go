/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetNftHistoryTransactionsV1RespListInnerTokensInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNftHistoryTransactionsV1RespListInnerTokensInner{}

// GetNftHistoryTransactionsV1RespListInnerTokensInner struct for GetNftHistoryTransactionsV1RespListInnerTokensInner
type GetNftHistoryTransactionsV1RespListInnerTokensInner struct {
	ContractAddress *string `json:"contractAddress,omitempty"`
	Network *string `json:"network,omitempty"`
	TokenId *string `json:"tokenId,omitempty"`
}

// NewGetNftHistoryTransactionsV1RespListInnerTokensInner instantiates a new GetNftHistoryTransactionsV1RespListInnerTokensInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNftHistoryTransactionsV1RespListInnerTokensInner() *GetNftHistoryTransactionsV1RespListInnerTokensInner {
	this := GetNftHistoryTransactionsV1RespListInnerTokensInner{}
	return &this
}

// NewGetNftHistoryTransactionsV1RespListInnerTokensInnerWithDefaults instantiates a new GetNftHistoryTransactionsV1RespListInnerTokensInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNftHistoryTransactionsV1RespListInnerTokensInnerWithDefaults() *GetNftHistoryTransactionsV1RespListInnerTokensInner {
	this := GetNftHistoryTransactionsV1RespListInnerTokensInner{}
	return &this
}

// GetContractAddress returns the ContractAddress field value if set, zero value otherwise.
func (o *GetNftHistoryTransactionsV1RespListInnerTokensInner) GetContractAddress() string {
	if o == nil || IsNil(o.ContractAddress) {
		var ret string
		return ret
	}
	return *o.ContractAddress
}

// GetContractAddressOk returns a tuple with the ContractAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryTransactionsV1RespListInnerTokensInner) GetContractAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ContractAddress) {
		return nil, false
	}
	return o.ContractAddress, true
}

// HasContractAddress returns a boolean if a field has been set.
func (o *GetNftHistoryTransactionsV1RespListInnerTokensInner) HasContractAddress() bool {
	if o != nil && !IsNil(o.ContractAddress) {
		return true
	}

	return false
}

// SetContractAddress gets a reference to the given string and assigns it to the ContractAddress field.
func (o *GetNftHistoryTransactionsV1RespListInnerTokensInner) SetContractAddress(v string) {
	o.ContractAddress = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *GetNftHistoryTransactionsV1RespListInnerTokensInner) GetNetwork() string {
	if o == nil || IsNil(o.Network) {
		var ret string
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryTransactionsV1RespListInnerTokensInner) GetNetworkOk() (*string, bool) {
	if o == nil || IsNil(o.Network) {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *GetNftHistoryTransactionsV1RespListInnerTokensInner) HasNetwork() bool {
	if o != nil && !IsNil(o.Network) {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given string and assigns it to the Network field.
func (o *GetNftHistoryTransactionsV1RespListInnerTokensInner) SetNetwork(v string) {
	o.Network = &v
}

// GetTokenId returns the TokenId field value if set, zero value otherwise.
func (o *GetNftHistoryTransactionsV1RespListInnerTokensInner) GetTokenId() string {
	if o == nil || IsNil(o.TokenId) {
		var ret string
		return ret
	}
	return *o.TokenId
}

// GetTokenIdOk returns a tuple with the TokenId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetNftHistoryTransactionsV1RespListInnerTokensInner) GetTokenIdOk() (*string, bool) {
	if o == nil || IsNil(o.TokenId) {
		return nil, false
	}
	return o.TokenId, true
}

// HasTokenId returns a boolean if a field has been set.
func (o *GetNftHistoryTransactionsV1RespListInnerTokensInner) HasTokenId() bool {
	if o != nil && !IsNil(o.TokenId) {
		return true
	}

	return false
}

// SetTokenId gets a reference to the given string and assigns it to the TokenId field.
func (o *GetNftHistoryTransactionsV1RespListInnerTokensInner) SetTokenId(v string) {
	o.TokenId = &v
}

func (o GetNftHistoryTransactionsV1RespListInnerTokensInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNftHistoryTransactionsV1RespListInnerTokensInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractAddress) {
		toSerialize["contractAddress"] = o.ContractAddress
	}
	if !IsNil(o.Network) {
		toSerialize["network"] = o.Network
	}
	if !IsNil(o.TokenId) {
		toSerialize["tokenId"] = o.TokenId
	}
	return toSerialize, nil
}

type NullableGetNftHistoryTransactionsV1RespListInnerTokensInner struct {
	value *GetNftHistoryTransactionsV1RespListInnerTokensInner
	isSet bool
}

func (v NullableGetNftHistoryTransactionsV1RespListInnerTokensInner) Get() *GetNftHistoryTransactionsV1RespListInnerTokensInner {
	return v.value
}

func (v *NullableGetNftHistoryTransactionsV1RespListInnerTokensInner) Set(val *GetNftHistoryTransactionsV1RespListInnerTokensInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNftHistoryTransactionsV1RespListInnerTokensInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNftHistoryTransactionsV1RespListInnerTokensInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNftHistoryTransactionsV1RespListInnerTokensInner(val *GetNftHistoryTransactionsV1RespListInnerTokensInner) *NullableGetNftHistoryTransactionsV1RespListInnerTokensInner {
	return &NullableGetNftHistoryTransactionsV1RespListInnerTokensInner{value: val, isSet: true}
}

func (v NullableGetNftHistoryTransactionsV1RespListInnerTokensInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNftHistoryTransactionsV1RespListInnerTokensInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


