/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetLoanRepayHistoryV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLoanRepayHistoryV1Resp{}

// GetLoanRepayHistoryV1Resp struct for GetLoanRepayHistoryV1Resp
type GetLoanRepayHistoryV1Resp struct {
	Rows []GetLoanRepayHistoryV1RespRowsInner `json:"rows,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewGetLoanRepayHistoryV1Resp instantiates a new GetLoanRepayHistoryV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLoanRepayHistoryV1Resp() *GetLoanRepayHistoryV1Resp {
	this := GetLoanRepayHistoryV1Resp{}
	return &this
}

// NewGetLoanRepayHistoryV1RespWithDefaults instantiates a new GetLoanRepayHistoryV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLoanRepayHistoryV1RespWithDefaults() *GetLoanRepayHistoryV1Resp {
	this := GetLoanRepayHistoryV1Resp{}
	return &this
}

// GetRows returns the Rows field value if set, zero value otherwise.
func (o *GetLoanRepayHistoryV1Resp) GetRows() []GetLoanRepayHistoryV1RespRowsInner {
	if o == nil || IsNil(o.Rows) {
		var ret []GetLoanRepayHistoryV1RespRowsInner
		return ret
	}
	return o.Rows
}

// GetRowsOk returns a tuple with the Rows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoanRepayHistoryV1Resp) GetRowsOk() ([]GetLoanRepayHistoryV1RespRowsInner, bool) {
	if o == nil || IsNil(o.Rows) {
		return nil, false
	}
	return o.Rows, true
}

// HasRows returns a boolean if a field has been set.
func (o *GetLoanRepayHistoryV1Resp) HasRows() bool {
	if o != nil && !IsNil(o.Rows) {
		return true
	}

	return false
}

// SetRows gets a reference to the given []GetLoanRepayHistoryV1RespRowsInner and assigns it to the Rows field.
func (o *GetLoanRepayHistoryV1Resp) SetRows(v []GetLoanRepayHistoryV1RespRowsInner) {
	o.Rows = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *GetLoanRepayHistoryV1Resp) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoanRepayHistoryV1Resp) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *GetLoanRepayHistoryV1Resp) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *GetLoanRepayHistoryV1Resp) SetTotal(v int32) {
	o.Total = &v
}

func (o GetLoanRepayHistoryV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLoanRepayHistoryV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rows) {
		toSerialize["rows"] = o.Rows
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableGetLoanRepayHistoryV1Resp struct {
	value *GetLoanRepayHistoryV1Resp
	isSet bool
}

func (v NullableGetLoanRepayHistoryV1Resp) Get() *GetLoanRepayHistoryV1Resp {
	return v.value
}

func (v *NullableGetLoanRepayHistoryV1Resp) Set(val *GetLoanRepayHistoryV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLoanRepayHistoryV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLoanRepayHistoryV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLoanRepayHistoryV1Resp(val *GetLoanRepayHistoryV1Resp) *NullableGetLoanRepayHistoryV1Resp {
	return &NullableGetLoanRepayHistoryV1Resp{value: val, isSet: true}
}

func (v NullableGetLoanRepayHistoryV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLoanRepayHistoryV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


