/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetDciProductPositionsV1RespListInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDciProductPositionsV1RespListInner{}

// GetDciProductPositionsV1RespListInner struct for GetDciProductPositionsV1RespListInner
type GetDciProductPositionsV1RespListInner struct {
	Apr *string `json:"apr,omitempty"`
	AutoCompoundPlan *string `json:"autoCompoundPlan,omitempty"`
	Duration *int32 `json:"duration,omitempty"`
	ExercisedCoin *string `json:"exercisedCoin,omitempty"`
	Id *string `json:"id,omitempty"`
	InvestCoin *string `json:"investCoin,omitempty"`
	OptionType *string `json:"optionType,omitempty"`
	OrderId *int64 `json:"orderId,omitempty"`
	PurchaseEndTime *int64 `json:"purchaseEndTime,omitempty"`
	PurchaseStatus *string `json:"purchaseStatus,omitempty"`
	SettleDate *int32 `json:"settleDate,omitempty"`
	StrikePrice *string `json:"strikePrice,omitempty"`
	SubscriptionAmount *string `json:"subscriptionAmount,omitempty"`
}

// NewGetDciProductPositionsV1RespListInner instantiates a new GetDciProductPositionsV1RespListInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDciProductPositionsV1RespListInner() *GetDciProductPositionsV1RespListInner {
	this := GetDciProductPositionsV1RespListInner{}
	return &this
}

// NewGetDciProductPositionsV1RespListInnerWithDefaults instantiates a new GetDciProductPositionsV1RespListInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDciProductPositionsV1RespListInnerWithDefaults() *GetDciProductPositionsV1RespListInner {
	this := GetDciProductPositionsV1RespListInner{}
	return &this
}

// GetApr returns the Apr field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetApr() string {
	if o == nil || IsNil(o.Apr) {
		var ret string
		return ret
	}
	return *o.Apr
}

// GetAprOk returns a tuple with the Apr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetAprOk() (*string, bool) {
	if o == nil || IsNil(o.Apr) {
		return nil, false
	}
	return o.Apr, true
}

// HasApr returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasApr() bool {
	if o != nil && !IsNil(o.Apr) {
		return true
	}

	return false
}

// SetApr gets a reference to the given string and assigns it to the Apr field.
func (o *GetDciProductPositionsV1RespListInner) SetApr(v string) {
	o.Apr = &v
}

// GetAutoCompoundPlan returns the AutoCompoundPlan field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetAutoCompoundPlan() string {
	if o == nil || IsNil(o.AutoCompoundPlan) {
		var ret string
		return ret
	}
	return *o.AutoCompoundPlan
}

// GetAutoCompoundPlanOk returns a tuple with the AutoCompoundPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetAutoCompoundPlanOk() (*string, bool) {
	if o == nil || IsNil(o.AutoCompoundPlan) {
		return nil, false
	}
	return o.AutoCompoundPlan, true
}

// HasAutoCompoundPlan returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasAutoCompoundPlan() bool {
	if o != nil && !IsNil(o.AutoCompoundPlan) {
		return true
	}

	return false
}

// SetAutoCompoundPlan gets a reference to the given string and assigns it to the AutoCompoundPlan field.
func (o *GetDciProductPositionsV1RespListInner) SetAutoCompoundPlan(v string) {
	o.AutoCompoundPlan = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetDuration() int32 {
	if o == nil || IsNil(o.Duration) {
		var ret int32
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasDuration() bool {
	if o != nil && !IsNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int32 and assigns it to the Duration field.
func (o *GetDciProductPositionsV1RespListInner) SetDuration(v int32) {
	o.Duration = &v
}

// GetExercisedCoin returns the ExercisedCoin field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetExercisedCoin() string {
	if o == nil || IsNil(o.ExercisedCoin) {
		var ret string
		return ret
	}
	return *o.ExercisedCoin
}

// GetExercisedCoinOk returns a tuple with the ExercisedCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetExercisedCoinOk() (*string, bool) {
	if o == nil || IsNil(o.ExercisedCoin) {
		return nil, false
	}
	return o.ExercisedCoin, true
}

// HasExercisedCoin returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasExercisedCoin() bool {
	if o != nil && !IsNil(o.ExercisedCoin) {
		return true
	}

	return false
}

// SetExercisedCoin gets a reference to the given string and assigns it to the ExercisedCoin field.
func (o *GetDciProductPositionsV1RespListInner) SetExercisedCoin(v string) {
	o.ExercisedCoin = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetDciProductPositionsV1RespListInner) SetId(v string) {
	o.Id = &v
}

// GetInvestCoin returns the InvestCoin field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetInvestCoin() string {
	if o == nil || IsNil(o.InvestCoin) {
		var ret string
		return ret
	}
	return *o.InvestCoin
}

// GetInvestCoinOk returns a tuple with the InvestCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetInvestCoinOk() (*string, bool) {
	if o == nil || IsNil(o.InvestCoin) {
		return nil, false
	}
	return o.InvestCoin, true
}

// HasInvestCoin returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasInvestCoin() bool {
	if o != nil && !IsNil(o.InvestCoin) {
		return true
	}

	return false
}

// SetInvestCoin gets a reference to the given string and assigns it to the InvestCoin field.
func (o *GetDciProductPositionsV1RespListInner) SetInvestCoin(v string) {
	o.InvestCoin = &v
}

// GetOptionType returns the OptionType field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetOptionType() string {
	if o == nil || IsNil(o.OptionType) {
		var ret string
		return ret
	}
	return *o.OptionType
}

// GetOptionTypeOk returns a tuple with the OptionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetOptionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OptionType) {
		return nil, false
	}
	return o.OptionType, true
}

// HasOptionType returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasOptionType() bool {
	if o != nil && !IsNil(o.OptionType) {
		return true
	}

	return false
}

// SetOptionType gets a reference to the given string and assigns it to the OptionType field.
func (o *GetDciProductPositionsV1RespListInner) SetOptionType(v string) {
	o.OptionType = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetOrderId() int64 {
	if o == nil || IsNil(o.OrderId) {
		var ret int64
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetOrderIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int64 and assigns it to the OrderId field.
func (o *GetDciProductPositionsV1RespListInner) SetOrderId(v int64) {
	o.OrderId = &v
}

// GetPurchaseEndTime returns the PurchaseEndTime field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetPurchaseEndTime() int64 {
	if o == nil || IsNil(o.PurchaseEndTime) {
		var ret int64
		return ret
	}
	return *o.PurchaseEndTime
}

// GetPurchaseEndTimeOk returns a tuple with the PurchaseEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetPurchaseEndTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.PurchaseEndTime) {
		return nil, false
	}
	return o.PurchaseEndTime, true
}

// HasPurchaseEndTime returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasPurchaseEndTime() bool {
	if o != nil && !IsNil(o.PurchaseEndTime) {
		return true
	}

	return false
}

// SetPurchaseEndTime gets a reference to the given int64 and assigns it to the PurchaseEndTime field.
func (o *GetDciProductPositionsV1RespListInner) SetPurchaseEndTime(v int64) {
	o.PurchaseEndTime = &v
}

// GetPurchaseStatus returns the PurchaseStatus field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetPurchaseStatus() string {
	if o == nil || IsNil(o.PurchaseStatus) {
		var ret string
		return ret
	}
	return *o.PurchaseStatus
}

// GetPurchaseStatusOk returns a tuple with the PurchaseStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetPurchaseStatusOk() (*string, bool) {
	if o == nil || IsNil(o.PurchaseStatus) {
		return nil, false
	}
	return o.PurchaseStatus, true
}

// HasPurchaseStatus returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasPurchaseStatus() bool {
	if o != nil && !IsNil(o.PurchaseStatus) {
		return true
	}

	return false
}

// SetPurchaseStatus gets a reference to the given string and assigns it to the PurchaseStatus field.
func (o *GetDciProductPositionsV1RespListInner) SetPurchaseStatus(v string) {
	o.PurchaseStatus = &v
}

// GetSettleDate returns the SettleDate field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetSettleDate() int32 {
	if o == nil || IsNil(o.SettleDate) {
		var ret int32
		return ret
	}
	return *o.SettleDate
}

// GetSettleDateOk returns a tuple with the SettleDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetSettleDateOk() (*int32, bool) {
	if o == nil || IsNil(o.SettleDate) {
		return nil, false
	}
	return o.SettleDate, true
}

// HasSettleDate returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasSettleDate() bool {
	if o != nil && !IsNil(o.SettleDate) {
		return true
	}

	return false
}

// SetSettleDate gets a reference to the given int32 and assigns it to the SettleDate field.
func (o *GetDciProductPositionsV1RespListInner) SetSettleDate(v int32) {
	o.SettleDate = &v
}

// GetStrikePrice returns the StrikePrice field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetStrikePrice() string {
	if o == nil || IsNil(o.StrikePrice) {
		var ret string
		return ret
	}
	return *o.StrikePrice
}

// GetStrikePriceOk returns a tuple with the StrikePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetStrikePriceOk() (*string, bool) {
	if o == nil || IsNil(o.StrikePrice) {
		return nil, false
	}
	return o.StrikePrice, true
}

// HasStrikePrice returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasStrikePrice() bool {
	if o != nil && !IsNil(o.StrikePrice) {
		return true
	}

	return false
}

// SetStrikePrice gets a reference to the given string and assigns it to the StrikePrice field.
func (o *GetDciProductPositionsV1RespListInner) SetStrikePrice(v string) {
	o.StrikePrice = &v
}

// GetSubscriptionAmount returns the SubscriptionAmount field value if set, zero value otherwise.
func (o *GetDciProductPositionsV1RespListInner) GetSubscriptionAmount() string {
	if o == nil || IsNil(o.SubscriptionAmount) {
		var ret string
		return ret
	}
	return *o.SubscriptionAmount
}

// GetSubscriptionAmountOk returns a tuple with the SubscriptionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDciProductPositionsV1RespListInner) GetSubscriptionAmountOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionAmount) {
		return nil, false
	}
	return o.SubscriptionAmount, true
}

// HasSubscriptionAmount returns a boolean if a field has been set.
func (o *GetDciProductPositionsV1RespListInner) HasSubscriptionAmount() bool {
	if o != nil && !IsNil(o.SubscriptionAmount) {
		return true
	}

	return false
}

// SetSubscriptionAmount gets a reference to the given string and assigns it to the SubscriptionAmount field.
func (o *GetDciProductPositionsV1RespListInner) SetSubscriptionAmount(v string) {
	o.SubscriptionAmount = &v
}

func (o GetDciProductPositionsV1RespListInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDciProductPositionsV1RespListInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Apr) {
		toSerialize["apr"] = o.Apr
	}
	if !IsNil(o.AutoCompoundPlan) {
		toSerialize["autoCompoundPlan"] = o.AutoCompoundPlan
	}
	if !IsNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !IsNil(o.ExercisedCoin) {
		toSerialize["exercisedCoin"] = o.ExercisedCoin
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.InvestCoin) {
		toSerialize["investCoin"] = o.InvestCoin
	}
	if !IsNil(o.OptionType) {
		toSerialize["optionType"] = o.OptionType
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.PurchaseEndTime) {
		toSerialize["purchaseEndTime"] = o.PurchaseEndTime
	}
	if !IsNil(o.PurchaseStatus) {
		toSerialize["purchaseStatus"] = o.PurchaseStatus
	}
	if !IsNil(o.SettleDate) {
		toSerialize["settleDate"] = o.SettleDate
	}
	if !IsNil(o.StrikePrice) {
		toSerialize["strikePrice"] = o.StrikePrice
	}
	if !IsNil(o.SubscriptionAmount) {
		toSerialize["subscriptionAmount"] = o.SubscriptionAmount
	}
	return toSerialize, nil
}

type NullableGetDciProductPositionsV1RespListInner struct {
	value *GetDciProductPositionsV1RespListInner
	isSet bool
}

func (v NullableGetDciProductPositionsV1RespListInner) Get() *GetDciProductPositionsV1RespListInner {
	return v.value
}

func (v *NullableGetDciProductPositionsV1RespListInner) Set(val *GetDciProductPositionsV1RespListInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDciProductPositionsV1RespListInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDciProductPositionsV1RespListInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDciProductPositionsV1RespListInner(val *GetDciProductPositionsV1RespListInner) *NullableGetDciProductPositionsV1RespListInner {
	return &NullableGetDciProductPositionsV1RespListInner{value: val, isSet: true}
}

func (v NullableGetDciProductPositionsV1RespListInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDciProductPositionsV1RespListInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


