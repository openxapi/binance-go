/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetLoanVipRepayHistoryV1RespRowsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetLoanVipRepayHistoryV1RespRowsInner{}

// GetLoanVipRepayHistoryV1RespRowsInner struct for GetLoanVipRepayHistoryV1RespRowsInner
type GetLoanVipRepayHistoryV1RespRowsInner struct {
	CollateralCoin *string `json:"collateralCoin,omitempty"`
	LoanCoin *string `json:"loanCoin,omitempty"`
	LoanDate *string `json:"loanDate,omitempty"`
	OrderId *string `json:"orderId,omitempty"`
	RepayAmount *string `json:"repayAmount,omitempty"`
	RepayStatus *string `json:"repayStatus,omitempty"`
	RepayTime *string `json:"repayTime,omitempty"`
}

// NewGetLoanVipRepayHistoryV1RespRowsInner instantiates a new GetLoanVipRepayHistoryV1RespRowsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetLoanVipRepayHistoryV1RespRowsInner() *GetLoanVipRepayHistoryV1RespRowsInner {
	this := GetLoanVipRepayHistoryV1RespRowsInner{}
	return &this
}

// NewGetLoanVipRepayHistoryV1RespRowsInnerWithDefaults instantiates a new GetLoanVipRepayHistoryV1RespRowsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetLoanVipRepayHistoryV1RespRowsInnerWithDefaults() *GetLoanVipRepayHistoryV1RespRowsInner {
	this := GetLoanVipRepayHistoryV1RespRowsInner{}
	return &this
}

// GetCollateralCoin returns the CollateralCoin field value if set, zero value otherwise.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetCollateralCoin() string {
	if o == nil || IsNil(o.CollateralCoin) {
		var ret string
		return ret
	}
	return *o.CollateralCoin
}

// GetCollateralCoinOk returns a tuple with the CollateralCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetCollateralCoinOk() (*string, bool) {
	if o == nil || IsNil(o.CollateralCoin) {
		return nil, false
	}
	return o.CollateralCoin, true
}

// HasCollateralCoin returns a boolean if a field has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) HasCollateralCoin() bool {
	if o != nil && !IsNil(o.CollateralCoin) {
		return true
	}

	return false
}

// SetCollateralCoin gets a reference to the given string and assigns it to the CollateralCoin field.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) SetCollateralCoin(v string) {
	o.CollateralCoin = &v
}

// GetLoanCoin returns the LoanCoin field value if set, zero value otherwise.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetLoanCoin() string {
	if o == nil || IsNil(o.LoanCoin) {
		var ret string
		return ret
	}
	return *o.LoanCoin
}

// GetLoanCoinOk returns a tuple with the LoanCoin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetLoanCoinOk() (*string, bool) {
	if o == nil || IsNil(o.LoanCoin) {
		return nil, false
	}
	return o.LoanCoin, true
}

// HasLoanCoin returns a boolean if a field has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) HasLoanCoin() bool {
	if o != nil && !IsNil(o.LoanCoin) {
		return true
	}

	return false
}

// SetLoanCoin gets a reference to the given string and assigns it to the LoanCoin field.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) SetLoanCoin(v string) {
	o.LoanCoin = &v
}

// GetLoanDate returns the LoanDate field value if set, zero value otherwise.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetLoanDate() string {
	if o == nil || IsNil(o.LoanDate) {
		var ret string
		return ret
	}
	return *o.LoanDate
}

// GetLoanDateOk returns a tuple with the LoanDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetLoanDateOk() (*string, bool) {
	if o == nil || IsNil(o.LoanDate) {
		return nil, false
	}
	return o.LoanDate, true
}

// HasLoanDate returns a boolean if a field has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) HasLoanDate() bool {
	if o != nil && !IsNil(o.LoanDate) {
		return true
	}

	return false
}

// SetLoanDate gets a reference to the given string and assigns it to the LoanDate field.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) SetLoanDate(v string) {
	o.LoanDate = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) SetOrderId(v string) {
	o.OrderId = &v
}

// GetRepayAmount returns the RepayAmount field value if set, zero value otherwise.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetRepayAmount() string {
	if o == nil || IsNil(o.RepayAmount) {
		var ret string
		return ret
	}
	return *o.RepayAmount
}

// GetRepayAmountOk returns a tuple with the RepayAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetRepayAmountOk() (*string, bool) {
	if o == nil || IsNil(o.RepayAmount) {
		return nil, false
	}
	return o.RepayAmount, true
}

// HasRepayAmount returns a boolean if a field has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) HasRepayAmount() bool {
	if o != nil && !IsNil(o.RepayAmount) {
		return true
	}

	return false
}

// SetRepayAmount gets a reference to the given string and assigns it to the RepayAmount field.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) SetRepayAmount(v string) {
	o.RepayAmount = &v
}

// GetRepayStatus returns the RepayStatus field value if set, zero value otherwise.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetRepayStatus() string {
	if o == nil || IsNil(o.RepayStatus) {
		var ret string
		return ret
	}
	return *o.RepayStatus
}

// GetRepayStatusOk returns a tuple with the RepayStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetRepayStatusOk() (*string, bool) {
	if o == nil || IsNil(o.RepayStatus) {
		return nil, false
	}
	return o.RepayStatus, true
}

// HasRepayStatus returns a boolean if a field has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) HasRepayStatus() bool {
	if o != nil && !IsNil(o.RepayStatus) {
		return true
	}

	return false
}

// SetRepayStatus gets a reference to the given string and assigns it to the RepayStatus field.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) SetRepayStatus(v string) {
	o.RepayStatus = &v
}

// GetRepayTime returns the RepayTime field value if set, zero value otherwise.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetRepayTime() string {
	if o == nil || IsNil(o.RepayTime) {
		var ret string
		return ret
	}
	return *o.RepayTime
}

// GetRepayTimeOk returns a tuple with the RepayTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) GetRepayTimeOk() (*string, bool) {
	if o == nil || IsNil(o.RepayTime) {
		return nil, false
	}
	return o.RepayTime, true
}

// HasRepayTime returns a boolean if a field has been set.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) HasRepayTime() bool {
	if o != nil && !IsNil(o.RepayTime) {
		return true
	}

	return false
}

// SetRepayTime gets a reference to the given string and assigns it to the RepayTime field.
func (o *GetLoanVipRepayHistoryV1RespRowsInner) SetRepayTime(v string) {
	o.RepayTime = &v
}

func (o GetLoanVipRepayHistoryV1RespRowsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetLoanVipRepayHistoryV1RespRowsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CollateralCoin) {
		toSerialize["collateralCoin"] = o.CollateralCoin
	}
	if !IsNil(o.LoanCoin) {
		toSerialize["loanCoin"] = o.LoanCoin
	}
	if !IsNil(o.LoanDate) {
		toSerialize["loanDate"] = o.LoanDate
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.RepayAmount) {
		toSerialize["repayAmount"] = o.RepayAmount
	}
	if !IsNil(o.RepayStatus) {
		toSerialize["repayStatus"] = o.RepayStatus
	}
	if !IsNil(o.RepayTime) {
		toSerialize["repayTime"] = o.RepayTime
	}
	return toSerialize, nil
}

type NullableGetLoanVipRepayHistoryV1RespRowsInner struct {
	value *GetLoanVipRepayHistoryV1RespRowsInner
	isSet bool
}

func (v NullableGetLoanVipRepayHistoryV1RespRowsInner) Get() *GetLoanVipRepayHistoryV1RespRowsInner {
	return v.value
}

func (v *NullableGetLoanVipRepayHistoryV1RespRowsInner) Set(val *GetLoanVipRepayHistoryV1RespRowsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetLoanVipRepayHistoryV1RespRowsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetLoanVipRepayHistoryV1RespRowsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetLoanVipRepayHistoryV1RespRowsInner(val *GetLoanVipRepayHistoryV1RespRowsInner) *NullableGetLoanVipRepayHistoryV1RespRowsInner {
	return &NullableGetLoanVipRepayHistoryV1RespRowsInner{value: val, isSet: true}
}

func (v NullableGetLoanVipRepayHistoryV1RespRowsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetLoanVipRepayHistoryV1RespRowsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


