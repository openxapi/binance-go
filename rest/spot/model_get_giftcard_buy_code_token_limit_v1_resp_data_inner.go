/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetGiftcardBuyCodeTokenLimitV1RespDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetGiftcardBuyCodeTokenLimitV1RespDataInner{}

// GetGiftcardBuyCodeTokenLimitV1RespDataInner struct for GetGiftcardBuyCodeTokenLimitV1RespDataInner
type GetGiftcardBuyCodeTokenLimitV1RespDataInner struct {
	Coin *string `json:"coin,omitempty"`
	FromMax *string `json:"fromMax,omitempty"`
	FromMin *string `json:"fromMin,omitempty"`
}

// NewGetGiftcardBuyCodeTokenLimitV1RespDataInner instantiates a new GetGiftcardBuyCodeTokenLimitV1RespDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGiftcardBuyCodeTokenLimitV1RespDataInner() *GetGiftcardBuyCodeTokenLimitV1RespDataInner {
	this := GetGiftcardBuyCodeTokenLimitV1RespDataInner{}
	return &this
}

// NewGetGiftcardBuyCodeTokenLimitV1RespDataInnerWithDefaults instantiates a new GetGiftcardBuyCodeTokenLimitV1RespDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGiftcardBuyCodeTokenLimitV1RespDataInnerWithDefaults() *GetGiftcardBuyCodeTokenLimitV1RespDataInner {
	this := GetGiftcardBuyCodeTokenLimitV1RespDataInner{}
	return &this
}

// GetCoin returns the Coin field value if set, zero value otherwise.
func (o *GetGiftcardBuyCodeTokenLimitV1RespDataInner) GetCoin() string {
	if o == nil || IsNil(o.Coin) {
		var ret string
		return ret
	}
	return *o.Coin
}

// GetCoinOk returns a tuple with the Coin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGiftcardBuyCodeTokenLimitV1RespDataInner) GetCoinOk() (*string, bool) {
	if o == nil || IsNil(o.Coin) {
		return nil, false
	}
	return o.Coin, true
}

// HasCoin returns a boolean if a field has been set.
func (o *GetGiftcardBuyCodeTokenLimitV1RespDataInner) HasCoin() bool {
	if o != nil && !IsNil(o.Coin) {
		return true
	}

	return false
}

// SetCoin gets a reference to the given string and assigns it to the Coin field.
func (o *GetGiftcardBuyCodeTokenLimitV1RespDataInner) SetCoin(v string) {
	o.Coin = &v
}

// GetFromMax returns the FromMax field value if set, zero value otherwise.
func (o *GetGiftcardBuyCodeTokenLimitV1RespDataInner) GetFromMax() string {
	if o == nil || IsNil(o.FromMax) {
		var ret string
		return ret
	}
	return *o.FromMax
}

// GetFromMaxOk returns a tuple with the FromMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGiftcardBuyCodeTokenLimitV1RespDataInner) GetFromMaxOk() (*string, bool) {
	if o == nil || IsNil(o.FromMax) {
		return nil, false
	}
	return o.FromMax, true
}

// HasFromMax returns a boolean if a field has been set.
func (o *GetGiftcardBuyCodeTokenLimitV1RespDataInner) HasFromMax() bool {
	if o != nil && !IsNil(o.FromMax) {
		return true
	}

	return false
}

// SetFromMax gets a reference to the given string and assigns it to the FromMax field.
func (o *GetGiftcardBuyCodeTokenLimitV1RespDataInner) SetFromMax(v string) {
	o.FromMax = &v
}

// GetFromMin returns the FromMin field value if set, zero value otherwise.
func (o *GetGiftcardBuyCodeTokenLimitV1RespDataInner) GetFromMin() string {
	if o == nil || IsNil(o.FromMin) {
		var ret string
		return ret
	}
	return *o.FromMin
}

// GetFromMinOk returns a tuple with the FromMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGiftcardBuyCodeTokenLimitV1RespDataInner) GetFromMinOk() (*string, bool) {
	if o == nil || IsNil(o.FromMin) {
		return nil, false
	}
	return o.FromMin, true
}

// HasFromMin returns a boolean if a field has been set.
func (o *GetGiftcardBuyCodeTokenLimitV1RespDataInner) HasFromMin() bool {
	if o != nil && !IsNil(o.FromMin) {
		return true
	}

	return false
}

// SetFromMin gets a reference to the given string and assigns it to the FromMin field.
func (o *GetGiftcardBuyCodeTokenLimitV1RespDataInner) SetFromMin(v string) {
	o.FromMin = &v
}

func (o GetGiftcardBuyCodeTokenLimitV1RespDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetGiftcardBuyCodeTokenLimitV1RespDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Coin) {
		toSerialize["coin"] = o.Coin
	}
	if !IsNil(o.FromMax) {
		toSerialize["fromMax"] = o.FromMax
	}
	if !IsNil(o.FromMin) {
		toSerialize["fromMin"] = o.FromMin
	}
	return toSerialize, nil
}

type NullableGetGiftcardBuyCodeTokenLimitV1RespDataInner struct {
	value *GetGiftcardBuyCodeTokenLimitV1RespDataInner
	isSet bool
}

func (v NullableGetGiftcardBuyCodeTokenLimitV1RespDataInner) Get() *GetGiftcardBuyCodeTokenLimitV1RespDataInner {
	return v.value
}

func (v *NullableGetGiftcardBuyCodeTokenLimitV1RespDataInner) Set(val *GetGiftcardBuyCodeTokenLimitV1RespDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGiftcardBuyCodeTokenLimitV1RespDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGiftcardBuyCodeTokenLimitV1RespDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGiftcardBuyCodeTokenLimitV1RespDataInner(val *GetGiftcardBuyCodeTokenLimitV1RespDataInner) *NullableGetGiftcardBuyCodeTokenLimitV1RespDataInner {
	return &NullableGetGiftcardBuyCodeTokenLimitV1RespDataInner{value: val, isSet: true}
}

func (v NullableGetGiftcardBuyCodeTokenLimitV1RespDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGiftcardBuyCodeTokenLimitV1RespDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


