/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetMiningPaymentUidV1RespDataAccountProfitsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMiningPaymentUidV1RespDataAccountProfitsInner{}

// GetMiningPaymentUidV1RespDataAccountProfitsInner struct for GetMiningPaymentUidV1RespDataAccountProfitsInner
type GetMiningPaymentUidV1RespDataAccountProfitsInner struct {
	Amount *float32 `json:"amount,omitempty"`
	CoinName *string `json:"coinName,omitempty"`
	Puid *int64 `json:"puid,omitempty"`
	SubName *string `json:"subName,omitempty"`
	Time *int64 `json:"time,omitempty"`
	Type *int32 `json:"type,omitempty"`
}

// NewGetMiningPaymentUidV1RespDataAccountProfitsInner instantiates a new GetMiningPaymentUidV1RespDataAccountProfitsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMiningPaymentUidV1RespDataAccountProfitsInner() *GetMiningPaymentUidV1RespDataAccountProfitsInner {
	this := GetMiningPaymentUidV1RespDataAccountProfitsInner{}
	return &this
}

// NewGetMiningPaymentUidV1RespDataAccountProfitsInnerWithDefaults instantiates a new GetMiningPaymentUidV1RespDataAccountProfitsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMiningPaymentUidV1RespDataAccountProfitsInnerWithDefaults() *GetMiningPaymentUidV1RespDataAccountProfitsInner {
	this := GetMiningPaymentUidV1RespDataAccountProfitsInner{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) GetAmount() float32 {
	if o == nil || IsNil(o.Amount) {
		var ret float32
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) GetAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given float32 and assigns it to the Amount field.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) SetAmount(v float32) {
	o.Amount = &v
}

// GetCoinName returns the CoinName field value if set, zero value otherwise.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) GetCoinName() string {
	if o == nil || IsNil(o.CoinName) {
		var ret string
		return ret
	}
	return *o.CoinName
}

// GetCoinNameOk returns a tuple with the CoinName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) GetCoinNameOk() (*string, bool) {
	if o == nil || IsNil(o.CoinName) {
		return nil, false
	}
	return o.CoinName, true
}

// HasCoinName returns a boolean if a field has been set.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) HasCoinName() bool {
	if o != nil && !IsNil(o.CoinName) {
		return true
	}

	return false
}

// SetCoinName gets a reference to the given string and assigns it to the CoinName field.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) SetCoinName(v string) {
	o.CoinName = &v
}

// GetPuid returns the Puid field value if set, zero value otherwise.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) GetPuid() int64 {
	if o == nil || IsNil(o.Puid) {
		var ret int64
		return ret
	}
	return *o.Puid
}

// GetPuidOk returns a tuple with the Puid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) GetPuidOk() (*int64, bool) {
	if o == nil || IsNil(o.Puid) {
		return nil, false
	}
	return o.Puid, true
}

// HasPuid returns a boolean if a field has been set.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) HasPuid() bool {
	if o != nil && !IsNil(o.Puid) {
		return true
	}

	return false
}

// SetPuid gets a reference to the given int64 and assigns it to the Puid field.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) SetPuid(v int64) {
	o.Puid = &v
}

// GetSubName returns the SubName field value if set, zero value otherwise.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) GetSubName() string {
	if o == nil || IsNil(o.SubName) {
		var ret string
		return ret
	}
	return *o.SubName
}

// GetSubNameOk returns a tuple with the SubName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) GetSubNameOk() (*string, bool) {
	if o == nil || IsNil(o.SubName) {
		return nil, false
	}
	return o.SubName, true
}

// HasSubName returns a boolean if a field has been set.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) HasSubName() bool {
	if o != nil && !IsNil(o.SubName) {
		return true
	}

	return false
}

// SetSubName gets a reference to the given string and assigns it to the SubName field.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) SetSubName(v string) {
	o.SubName = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) SetTime(v int64) {
	o.Time = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) GetType() int32 {
	if o == nil || IsNil(o.Type) {
		var ret int32
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) GetTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given int32 and assigns it to the Type field.
func (o *GetMiningPaymentUidV1RespDataAccountProfitsInner) SetType(v int32) {
	o.Type = &v
}

func (o GetMiningPaymentUidV1RespDataAccountProfitsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMiningPaymentUidV1RespDataAccountProfitsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CoinName) {
		toSerialize["coinName"] = o.CoinName
	}
	if !IsNil(o.Puid) {
		toSerialize["puid"] = o.Puid
	}
	if !IsNil(o.SubName) {
		toSerialize["subName"] = o.SubName
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableGetMiningPaymentUidV1RespDataAccountProfitsInner struct {
	value *GetMiningPaymentUidV1RespDataAccountProfitsInner
	isSet bool
}

func (v NullableGetMiningPaymentUidV1RespDataAccountProfitsInner) Get() *GetMiningPaymentUidV1RespDataAccountProfitsInner {
	return v.value
}

func (v *NullableGetMiningPaymentUidV1RespDataAccountProfitsInner) Set(val *GetMiningPaymentUidV1RespDataAccountProfitsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMiningPaymentUidV1RespDataAccountProfitsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMiningPaymentUidV1RespDataAccountProfitsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMiningPaymentUidV1RespDataAccountProfitsInner(val *GetMiningPaymentUidV1RespDataAccountProfitsInner) *NullableGetMiningPaymentUidV1RespDataAccountProfitsInner {
	return &NullableGetMiningPaymentUidV1RespDataAccountProfitsInner{value: val, isSet: true}
}

func (v NullableGetMiningPaymentUidV1RespDataAccountProfitsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMiningPaymentUidV1RespDataAccountProfitsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


