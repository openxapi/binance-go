/*
Binance Spot API

OpenAPI specification for Binance exchange - Spot API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spot

import (
	"encoding/json"
)

// checks if the GetSolStakingSolQuotaV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSolStakingSolQuotaV1Resp{}

// GetSolStakingSolQuotaV1Resp struct for GetSolStakingSolQuotaV1Resp
type GetSolStakingSolQuotaV1Resp struct {
	Calculating *bool `json:"calculating,omitempty"`
	CommissionFee *string `json:"commissionFee,omitempty"`
	LeftRedemptionPersonalQuota *string `json:"leftRedemptionPersonalQuota,omitempty"`
	LeftStakingPersonalQuota *string `json:"leftStakingPersonalQuota,omitempty"`
	MinRedeemAmount *string `json:"minRedeemAmount,omitempty"`
	MinStakeAmount *string `json:"minStakeAmount,omitempty"`
	NextEpochTime *int64 `json:"nextEpochTime,omitempty"`
	RedeemPeriod *int32 `json:"redeemPeriod,omitempty"`
	Redeemable *bool `json:"redeemable,omitempty"`
	SoldOut *bool `json:"soldOut,omitempty"`
	Stakeable *bool `json:"stakeable,omitempty"`
}

// NewGetSolStakingSolQuotaV1Resp instantiates a new GetSolStakingSolQuotaV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSolStakingSolQuotaV1Resp() *GetSolStakingSolQuotaV1Resp {
	this := GetSolStakingSolQuotaV1Resp{}
	return &this
}

// NewGetSolStakingSolQuotaV1RespWithDefaults instantiates a new GetSolStakingSolQuotaV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSolStakingSolQuotaV1RespWithDefaults() *GetSolStakingSolQuotaV1Resp {
	this := GetSolStakingSolQuotaV1Resp{}
	return &this
}

// GetCalculating returns the Calculating field value if set, zero value otherwise.
func (o *GetSolStakingSolQuotaV1Resp) GetCalculating() bool {
	if o == nil || IsNil(o.Calculating) {
		var ret bool
		return ret
	}
	return *o.Calculating
}

// GetCalculatingOk returns a tuple with the Calculating field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolQuotaV1Resp) GetCalculatingOk() (*bool, bool) {
	if o == nil || IsNil(o.Calculating) {
		return nil, false
	}
	return o.Calculating, true
}

// HasCalculating returns a boolean if a field has been set.
func (o *GetSolStakingSolQuotaV1Resp) HasCalculating() bool {
	if o != nil && !IsNil(o.Calculating) {
		return true
	}

	return false
}

// SetCalculating gets a reference to the given bool and assigns it to the Calculating field.
func (o *GetSolStakingSolQuotaV1Resp) SetCalculating(v bool) {
	o.Calculating = &v
}

// GetCommissionFee returns the CommissionFee field value if set, zero value otherwise.
func (o *GetSolStakingSolQuotaV1Resp) GetCommissionFee() string {
	if o == nil || IsNil(o.CommissionFee) {
		var ret string
		return ret
	}
	return *o.CommissionFee
}

// GetCommissionFeeOk returns a tuple with the CommissionFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolQuotaV1Resp) GetCommissionFeeOk() (*string, bool) {
	if o == nil || IsNil(o.CommissionFee) {
		return nil, false
	}
	return o.CommissionFee, true
}

// HasCommissionFee returns a boolean if a field has been set.
func (o *GetSolStakingSolQuotaV1Resp) HasCommissionFee() bool {
	if o != nil && !IsNil(o.CommissionFee) {
		return true
	}

	return false
}

// SetCommissionFee gets a reference to the given string and assigns it to the CommissionFee field.
func (o *GetSolStakingSolQuotaV1Resp) SetCommissionFee(v string) {
	o.CommissionFee = &v
}

// GetLeftRedemptionPersonalQuota returns the LeftRedemptionPersonalQuota field value if set, zero value otherwise.
func (o *GetSolStakingSolQuotaV1Resp) GetLeftRedemptionPersonalQuota() string {
	if o == nil || IsNil(o.LeftRedemptionPersonalQuota) {
		var ret string
		return ret
	}
	return *o.LeftRedemptionPersonalQuota
}

// GetLeftRedemptionPersonalQuotaOk returns a tuple with the LeftRedemptionPersonalQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolQuotaV1Resp) GetLeftRedemptionPersonalQuotaOk() (*string, bool) {
	if o == nil || IsNil(o.LeftRedemptionPersonalQuota) {
		return nil, false
	}
	return o.LeftRedemptionPersonalQuota, true
}

// HasLeftRedemptionPersonalQuota returns a boolean if a field has been set.
func (o *GetSolStakingSolQuotaV1Resp) HasLeftRedemptionPersonalQuota() bool {
	if o != nil && !IsNil(o.LeftRedemptionPersonalQuota) {
		return true
	}

	return false
}

// SetLeftRedemptionPersonalQuota gets a reference to the given string and assigns it to the LeftRedemptionPersonalQuota field.
func (o *GetSolStakingSolQuotaV1Resp) SetLeftRedemptionPersonalQuota(v string) {
	o.LeftRedemptionPersonalQuota = &v
}

// GetLeftStakingPersonalQuota returns the LeftStakingPersonalQuota field value if set, zero value otherwise.
func (o *GetSolStakingSolQuotaV1Resp) GetLeftStakingPersonalQuota() string {
	if o == nil || IsNil(o.LeftStakingPersonalQuota) {
		var ret string
		return ret
	}
	return *o.LeftStakingPersonalQuota
}

// GetLeftStakingPersonalQuotaOk returns a tuple with the LeftStakingPersonalQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolQuotaV1Resp) GetLeftStakingPersonalQuotaOk() (*string, bool) {
	if o == nil || IsNil(o.LeftStakingPersonalQuota) {
		return nil, false
	}
	return o.LeftStakingPersonalQuota, true
}

// HasLeftStakingPersonalQuota returns a boolean if a field has been set.
func (o *GetSolStakingSolQuotaV1Resp) HasLeftStakingPersonalQuota() bool {
	if o != nil && !IsNil(o.LeftStakingPersonalQuota) {
		return true
	}

	return false
}

// SetLeftStakingPersonalQuota gets a reference to the given string and assigns it to the LeftStakingPersonalQuota field.
func (o *GetSolStakingSolQuotaV1Resp) SetLeftStakingPersonalQuota(v string) {
	o.LeftStakingPersonalQuota = &v
}

// GetMinRedeemAmount returns the MinRedeemAmount field value if set, zero value otherwise.
func (o *GetSolStakingSolQuotaV1Resp) GetMinRedeemAmount() string {
	if o == nil || IsNil(o.MinRedeemAmount) {
		var ret string
		return ret
	}
	return *o.MinRedeemAmount
}

// GetMinRedeemAmountOk returns a tuple with the MinRedeemAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolQuotaV1Resp) GetMinRedeemAmountOk() (*string, bool) {
	if o == nil || IsNil(o.MinRedeemAmount) {
		return nil, false
	}
	return o.MinRedeemAmount, true
}

// HasMinRedeemAmount returns a boolean if a field has been set.
func (o *GetSolStakingSolQuotaV1Resp) HasMinRedeemAmount() bool {
	if o != nil && !IsNil(o.MinRedeemAmount) {
		return true
	}

	return false
}

// SetMinRedeemAmount gets a reference to the given string and assigns it to the MinRedeemAmount field.
func (o *GetSolStakingSolQuotaV1Resp) SetMinRedeemAmount(v string) {
	o.MinRedeemAmount = &v
}

// GetMinStakeAmount returns the MinStakeAmount field value if set, zero value otherwise.
func (o *GetSolStakingSolQuotaV1Resp) GetMinStakeAmount() string {
	if o == nil || IsNil(o.MinStakeAmount) {
		var ret string
		return ret
	}
	return *o.MinStakeAmount
}

// GetMinStakeAmountOk returns a tuple with the MinStakeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolQuotaV1Resp) GetMinStakeAmountOk() (*string, bool) {
	if o == nil || IsNil(o.MinStakeAmount) {
		return nil, false
	}
	return o.MinStakeAmount, true
}

// HasMinStakeAmount returns a boolean if a field has been set.
func (o *GetSolStakingSolQuotaV1Resp) HasMinStakeAmount() bool {
	if o != nil && !IsNil(o.MinStakeAmount) {
		return true
	}

	return false
}

// SetMinStakeAmount gets a reference to the given string and assigns it to the MinStakeAmount field.
func (o *GetSolStakingSolQuotaV1Resp) SetMinStakeAmount(v string) {
	o.MinStakeAmount = &v
}

// GetNextEpochTime returns the NextEpochTime field value if set, zero value otherwise.
func (o *GetSolStakingSolQuotaV1Resp) GetNextEpochTime() int64 {
	if o == nil || IsNil(o.NextEpochTime) {
		var ret int64
		return ret
	}
	return *o.NextEpochTime
}

// GetNextEpochTimeOk returns a tuple with the NextEpochTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolQuotaV1Resp) GetNextEpochTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.NextEpochTime) {
		return nil, false
	}
	return o.NextEpochTime, true
}

// HasNextEpochTime returns a boolean if a field has been set.
func (o *GetSolStakingSolQuotaV1Resp) HasNextEpochTime() bool {
	if o != nil && !IsNil(o.NextEpochTime) {
		return true
	}

	return false
}

// SetNextEpochTime gets a reference to the given int64 and assigns it to the NextEpochTime field.
func (o *GetSolStakingSolQuotaV1Resp) SetNextEpochTime(v int64) {
	o.NextEpochTime = &v
}

// GetRedeemPeriod returns the RedeemPeriod field value if set, zero value otherwise.
func (o *GetSolStakingSolQuotaV1Resp) GetRedeemPeriod() int32 {
	if o == nil || IsNil(o.RedeemPeriod) {
		var ret int32
		return ret
	}
	return *o.RedeemPeriod
}

// GetRedeemPeriodOk returns a tuple with the RedeemPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolQuotaV1Resp) GetRedeemPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.RedeemPeriod) {
		return nil, false
	}
	return o.RedeemPeriod, true
}

// HasRedeemPeriod returns a boolean if a field has been set.
func (o *GetSolStakingSolQuotaV1Resp) HasRedeemPeriod() bool {
	if o != nil && !IsNil(o.RedeemPeriod) {
		return true
	}

	return false
}

// SetRedeemPeriod gets a reference to the given int32 and assigns it to the RedeemPeriod field.
func (o *GetSolStakingSolQuotaV1Resp) SetRedeemPeriod(v int32) {
	o.RedeemPeriod = &v
}

// GetRedeemable returns the Redeemable field value if set, zero value otherwise.
func (o *GetSolStakingSolQuotaV1Resp) GetRedeemable() bool {
	if o == nil || IsNil(o.Redeemable) {
		var ret bool
		return ret
	}
	return *o.Redeemable
}

// GetRedeemableOk returns a tuple with the Redeemable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolQuotaV1Resp) GetRedeemableOk() (*bool, bool) {
	if o == nil || IsNil(o.Redeemable) {
		return nil, false
	}
	return o.Redeemable, true
}

// HasRedeemable returns a boolean if a field has been set.
func (o *GetSolStakingSolQuotaV1Resp) HasRedeemable() bool {
	if o != nil && !IsNil(o.Redeemable) {
		return true
	}

	return false
}

// SetRedeemable gets a reference to the given bool and assigns it to the Redeemable field.
func (o *GetSolStakingSolQuotaV1Resp) SetRedeemable(v bool) {
	o.Redeemable = &v
}

// GetSoldOut returns the SoldOut field value if set, zero value otherwise.
func (o *GetSolStakingSolQuotaV1Resp) GetSoldOut() bool {
	if o == nil || IsNil(o.SoldOut) {
		var ret bool
		return ret
	}
	return *o.SoldOut
}

// GetSoldOutOk returns a tuple with the SoldOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolQuotaV1Resp) GetSoldOutOk() (*bool, bool) {
	if o == nil || IsNil(o.SoldOut) {
		return nil, false
	}
	return o.SoldOut, true
}

// HasSoldOut returns a boolean if a field has been set.
func (o *GetSolStakingSolQuotaV1Resp) HasSoldOut() bool {
	if o != nil && !IsNil(o.SoldOut) {
		return true
	}

	return false
}

// SetSoldOut gets a reference to the given bool and assigns it to the SoldOut field.
func (o *GetSolStakingSolQuotaV1Resp) SetSoldOut(v bool) {
	o.SoldOut = &v
}

// GetStakeable returns the Stakeable field value if set, zero value otherwise.
func (o *GetSolStakingSolQuotaV1Resp) GetStakeable() bool {
	if o == nil || IsNil(o.Stakeable) {
		var ret bool
		return ret
	}
	return *o.Stakeable
}

// GetStakeableOk returns a tuple with the Stakeable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSolStakingSolQuotaV1Resp) GetStakeableOk() (*bool, bool) {
	if o == nil || IsNil(o.Stakeable) {
		return nil, false
	}
	return o.Stakeable, true
}

// HasStakeable returns a boolean if a field has been set.
func (o *GetSolStakingSolQuotaV1Resp) HasStakeable() bool {
	if o != nil && !IsNil(o.Stakeable) {
		return true
	}

	return false
}

// SetStakeable gets a reference to the given bool and assigns it to the Stakeable field.
func (o *GetSolStakingSolQuotaV1Resp) SetStakeable(v bool) {
	o.Stakeable = &v
}

func (o GetSolStakingSolQuotaV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSolStakingSolQuotaV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Calculating) {
		toSerialize["calculating"] = o.Calculating
	}
	if !IsNil(o.CommissionFee) {
		toSerialize["commissionFee"] = o.CommissionFee
	}
	if !IsNil(o.LeftRedemptionPersonalQuota) {
		toSerialize["leftRedemptionPersonalQuota"] = o.LeftRedemptionPersonalQuota
	}
	if !IsNil(o.LeftStakingPersonalQuota) {
		toSerialize["leftStakingPersonalQuota"] = o.LeftStakingPersonalQuota
	}
	if !IsNil(o.MinRedeemAmount) {
		toSerialize["minRedeemAmount"] = o.MinRedeemAmount
	}
	if !IsNil(o.MinStakeAmount) {
		toSerialize["minStakeAmount"] = o.MinStakeAmount
	}
	if !IsNil(o.NextEpochTime) {
		toSerialize["nextEpochTime"] = o.NextEpochTime
	}
	if !IsNil(o.RedeemPeriod) {
		toSerialize["redeemPeriod"] = o.RedeemPeriod
	}
	if !IsNil(o.Redeemable) {
		toSerialize["redeemable"] = o.Redeemable
	}
	if !IsNil(o.SoldOut) {
		toSerialize["soldOut"] = o.SoldOut
	}
	if !IsNil(o.Stakeable) {
		toSerialize["stakeable"] = o.Stakeable
	}
	return toSerialize, nil
}

type NullableGetSolStakingSolQuotaV1Resp struct {
	value *GetSolStakingSolQuotaV1Resp
	isSet bool
}

func (v NullableGetSolStakingSolQuotaV1Resp) Get() *GetSolStakingSolQuotaV1Resp {
	return v.value
}

func (v *NullableGetSolStakingSolQuotaV1Resp) Set(val *GetSolStakingSolQuotaV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSolStakingSolQuotaV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSolStakingSolQuotaV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSolStakingSolQuotaV1Resp(val *GetSolStakingSolQuotaV1Resp) *NullableGetSolStakingSolQuotaV1Resp {
	return &NullableGetSolStakingSolQuotaV1Resp{value: val, isSet: true}
}

func (v NullableGetSolStakingSolQuotaV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSolStakingSolQuotaV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


