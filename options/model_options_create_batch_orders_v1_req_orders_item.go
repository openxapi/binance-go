/*
Binance Options API

OpenAPI specification for Binance exchange - Options API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OptionsCreateBatchOrdersV1ReqOrdersItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionsCreateBatchOrdersV1ReqOrdersItem{}

// OptionsCreateBatchOrdersV1ReqOrdersItem struct for OptionsCreateBatchOrdersV1ReqOrdersItem
type OptionsCreateBatchOrdersV1ReqOrdersItem struct {
	ClientOrderId *string `json:"clientOrderId,omitempty"`
	IsMmp *bool `json:"isMmp,omitempty"`
	NewOrderRespType *string `json:"newOrderRespType,omitempty"`
	PostOnly *bool `json:"postOnly,omitempty"`
	Price *string `json:"price,omitempty"`
	Quantity string `json:"quantity"`
	ReduceOnly *bool `json:"reduceOnly,omitempty"`
	Side string `json:"side"`
	Symbol string `json:"symbol"`
	TimeInForce *string `json:"timeInForce,omitempty"`
	Type string `json:"type"`
}

type _OptionsCreateBatchOrdersV1ReqOrdersItem OptionsCreateBatchOrdersV1ReqOrdersItem

// NewOptionsCreateBatchOrdersV1ReqOrdersItem instantiates a new OptionsCreateBatchOrdersV1ReqOrdersItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionsCreateBatchOrdersV1ReqOrdersItem(quantity string, side string, symbol string, type_ string) *OptionsCreateBatchOrdersV1ReqOrdersItem {
	this := OptionsCreateBatchOrdersV1ReqOrdersItem{}
	var clientOrderId string = ""
	this.ClientOrderId = &clientOrderId
	var newOrderRespType string = ""
	this.NewOrderRespType = &newOrderRespType
	var postOnly bool = false
	this.PostOnly = &postOnly
	var price string = ""
	this.Price = &price
	this.Quantity = quantity
	var reduceOnly bool = false
	this.ReduceOnly = &reduceOnly
	this.Side = side
	this.Symbol = symbol
	var timeInForce string = ""
	this.TimeInForce = &timeInForce
	this.Type = type_
	return &this
}

// NewOptionsCreateBatchOrdersV1ReqOrdersItemWithDefaults instantiates a new OptionsCreateBatchOrdersV1ReqOrdersItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionsCreateBatchOrdersV1ReqOrdersItemWithDefaults() *OptionsCreateBatchOrdersV1ReqOrdersItem {
	this := OptionsCreateBatchOrdersV1ReqOrdersItem{}
	var clientOrderId string = ""
	this.ClientOrderId = &clientOrderId
	var newOrderRespType string = ""
	this.NewOrderRespType = &newOrderRespType
	var postOnly bool = false
	this.PostOnly = &postOnly
	var price string = ""
	this.Price = &price
	var quantity string = ""
	this.Quantity = quantity
	var reduceOnly bool = false
	this.ReduceOnly = &reduceOnly
	var side string = ""
	this.Side = side
	var symbol string = ""
	this.Symbol = symbol
	var timeInForce string = ""
	this.TimeInForce = &timeInForce
	var type_ string = ""
	this.Type = type_
	return &this
}

// GetClientOrderId returns the ClientOrderId field value if set, zero value otherwise.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetClientOrderId() string {
	if o == nil || IsNil(o.ClientOrderId) {
		var ret string
		return ret
	}
	return *o.ClientOrderId
}

// GetClientOrderIdOk returns a tuple with the ClientOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetClientOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientOrderId) {
		return nil, false
	}
	return o.ClientOrderId, true
}

// HasClientOrderId returns a boolean if a field has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) HasClientOrderId() bool {
	if o != nil && !IsNil(o.ClientOrderId) {
		return true
	}

	return false
}

// SetClientOrderId gets a reference to the given string and assigns it to the ClientOrderId field.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) SetClientOrderId(v string) {
	o.ClientOrderId = &v
}

// GetIsMmp returns the IsMmp field value if set, zero value otherwise.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetIsMmp() bool {
	if o == nil || IsNil(o.IsMmp) {
		var ret bool
		return ret
	}
	return *o.IsMmp
}

// GetIsMmpOk returns a tuple with the IsMmp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetIsMmpOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMmp) {
		return nil, false
	}
	return o.IsMmp, true
}

// HasIsMmp returns a boolean if a field has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) HasIsMmp() bool {
	if o != nil && !IsNil(o.IsMmp) {
		return true
	}

	return false
}

// SetIsMmp gets a reference to the given bool and assigns it to the IsMmp field.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) SetIsMmp(v bool) {
	o.IsMmp = &v
}

// GetNewOrderRespType returns the NewOrderRespType field value if set, zero value otherwise.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetNewOrderRespType() string {
	if o == nil || IsNil(o.NewOrderRespType) {
		var ret string
		return ret
	}
	return *o.NewOrderRespType
}

// GetNewOrderRespTypeOk returns a tuple with the NewOrderRespType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetNewOrderRespTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NewOrderRespType) {
		return nil, false
	}
	return o.NewOrderRespType, true
}

// HasNewOrderRespType returns a boolean if a field has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) HasNewOrderRespType() bool {
	if o != nil && !IsNil(o.NewOrderRespType) {
		return true
	}

	return false
}

// SetNewOrderRespType gets a reference to the given string and assigns it to the NewOrderRespType field.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) SetNewOrderRespType(v string) {
	o.NewOrderRespType = &v
}

// GetPostOnly returns the PostOnly field value if set, zero value otherwise.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetPostOnly() bool {
	if o == nil || IsNil(o.PostOnly) {
		var ret bool
		return ret
	}
	return *o.PostOnly
}

// GetPostOnlyOk returns a tuple with the PostOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetPostOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.PostOnly) {
		return nil, false
	}
	return o.PostOnly, true
}

// HasPostOnly returns a boolean if a field has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) HasPostOnly() bool {
	if o != nil && !IsNil(o.PostOnly) {
		return true
	}

	return false
}

// SetPostOnly gets a reference to the given bool and assigns it to the PostOnly field.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) SetPostOnly(v bool) {
	o.PostOnly = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetPrice() string {
	if o == nil || IsNil(o.Price) {
		var ret string
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetPriceOk() (*string, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given string and assigns it to the Price field.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) SetPrice(v string) {
	o.Price = &v
}

// GetQuantity returns the Quantity field value
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetQuantity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetQuantityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) SetQuantity(v string) {
	o.Quantity = v
}

// GetReduceOnly returns the ReduceOnly field value if set, zero value otherwise.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetReduceOnly() bool {
	if o == nil || IsNil(o.ReduceOnly) {
		var ret bool
		return ret
	}
	return *o.ReduceOnly
}

// GetReduceOnlyOk returns a tuple with the ReduceOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetReduceOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReduceOnly) {
		return nil, false
	}
	return o.ReduceOnly, true
}

// HasReduceOnly returns a boolean if a field has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) HasReduceOnly() bool {
	if o != nil && !IsNil(o.ReduceOnly) {
		return true
	}

	return false
}

// SetReduceOnly gets a reference to the given bool and assigns it to the ReduceOnly field.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) SetReduceOnly(v bool) {
	o.ReduceOnly = &v
}

// GetSide returns the Side field value
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetSide() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Side
}

// GetSideOk returns a tuple with the Side field value
// and a boolean to check if the value has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetSideOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Side, true
}

// SetSide sets field value
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) SetSide(v string) {
	o.Side = v
}

// GetSymbol returns the Symbol field value
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetSymbol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value
// and a boolean to check if the value has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetSymbolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Symbol, true
}

// SetSymbol sets field value
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) SetSymbol(v string) {
	o.Symbol = v
}

// GetTimeInForce returns the TimeInForce field value if set, zero value otherwise.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetTimeInForce() string {
	if o == nil || IsNil(o.TimeInForce) {
		var ret string
		return ret
	}
	return *o.TimeInForce
}

// GetTimeInForceOk returns a tuple with the TimeInForce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetTimeInForceOk() (*string, bool) {
	if o == nil || IsNil(o.TimeInForce) {
		return nil, false
	}
	return o.TimeInForce, true
}

// HasTimeInForce returns a boolean if a field has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) HasTimeInForce() bool {
	if o != nil && !IsNil(o.TimeInForce) {
		return true
	}

	return false
}

// SetTimeInForce gets a reference to the given string and assigns it to the TimeInForce field.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) SetTimeInForce(v string) {
	o.TimeInForce = &v
}

// GetType returns the Type field value
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) SetType(v string) {
	o.Type = v
}

func (o OptionsCreateBatchOrdersV1ReqOrdersItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionsCreateBatchOrdersV1ReqOrdersItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientOrderId) {
		toSerialize["clientOrderId"] = o.ClientOrderId
	}
	if !IsNil(o.IsMmp) {
		toSerialize["isMmp"] = o.IsMmp
	}
	if !IsNil(o.NewOrderRespType) {
		toSerialize["newOrderRespType"] = o.NewOrderRespType
	}
	if !IsNil(o.PostOnly) {
		toSerialize["postOnly"] = o.PostOnly
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	toSerialize["quantity"] = o.Quantity
	if !IsNil(o.ReduceOnly) {
		toSerialize["reduceOnly"] = o.ReduceOnly
	}
	toSerialize["side"] = o.Side
	toSerialize["symbol"] = o.Symbol
	if !IsNil(o.TimeInForce) {
		toSerialize["timeInForce"] = o.TimeInForce
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *OptionsCreateBatchOrdersV1ReqOrdersItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"quantity",
		"side",
		"symbol",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOptionsCreateBatchOrdersV1ReqOrdersItem := _OptionsCreateBatchOrdersV1ReqOrdersItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOptionsCreateBatchOrdersV1ReqOrdersItem)

	if err != nil {
		return err
	}

	*o = OptionsCreateBatchOrdersV1ReqOrdersItem(varOptionsCreateBatchOrdersV1ReqOrdersItem)

	return err
}

type NullableOptionsCreateBatchOrdersV1ReqOrdersItem struct {
	value *OptionsCreateBatchOrdersV1ReqOrdersItem
	isSet bool
}

func (v NullableOptionsCreateBatchOrdersV1ReqOrdersItem) Get() *OptionsCreateBatchOrdersV1ReqOrdersItem {
	return v.value
}

func (v *NullableOptionsCreateBatchOrdersV1ReqOrdersItem) Set(val *OptionsCreateBatchOrdersV1ReqOrdersItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionsCreateBatchOrdersV1ReqOrdersItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionsCreateBatchOrdersV1ReqOrdersItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionsCreateBatchOrdersV1ReqOrdersItem(val *OptionsCreateBatchOrdersV1ReqOrdersItem) *NullableOptionsCreateBatchOrdersV1ReqOrdersItem {
	return &NullableOptionsCreateBatchOrdersV1ReqOrdersItem{value: val, isSet: true}
}

func (v NullableOptionsCreateBatchOrdersV1ReqOrdersItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionsCreateBatchOrdersV1ReqOrdersItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


