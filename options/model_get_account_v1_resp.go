/*
Binance Options API

OpenAPI specification for Binance exchange - Options API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the GetAccountV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAccountV1Resp{}

// GetAccountV1Resp struct for GetAccountV1Resp
type GetAccountV1Resp struct {
	Asset []GetAccountV1RespAssetInner `json:"asset,omitempty"`
	Greek []GetAccountV1RespGreekInner `json:"greek,omitempty"`
	RiskLevel *string `json:"riskLevel,omitempty"`
	Time *int64 `json:"time,omitempty"`
}

// NewGetAccountV1Resp instantiates a new GetAccountV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountV1Resp() *GetAccountV1Resp {
	this := GetAccountV1Resp{}
	return &this
}

// NewGetAccountV1RespWithDefaults instantiates a new GetAccountV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountV1RespWithDefaults() *GetAccountV1Resp {
	this := GetAccountV1Resp{}
	return &this
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *GetAccountV1Resp) GetAsset() []GetAccountV1RespAssetInner {
	if o == nil || IsNil(o.Asset) {
		var ret []GetAccountV1RespAssetInner
		return ret
	}
	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1Resp) GetAssetOk() ([]GetAccountV1RespAssetInner, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *GetAccountV1Resp) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given []GetAccountV1RespAssetInner and assigns it to the Asset field.
func (o *GetAccountV1Resp) SetAsset(v []GetAccountV1RespAssetInner) {
	o.Asset = v
}

// GetGreek returns the Greek field value if set, zero value otherwise.
func (o *GetAccountV1Resp) GetGreek() []GetAccountV1RespGreekInner {
	if o == nil || IsNil(o.Greek) {
		var ret []GetAccountV1RespGreekInner
		return ret
	}
	return o.Greek
}

// GetGreekOk returns a tuple with the Greek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1Resp) GetGreekOk() ([]GetAccountV1RespGreekInner, bool) {
	if o == nil || IsNil(o.Greek) {
		return nil, false
	}
	return o.Greek, true
}

// HasGreek returns a boolean if a field has been set.
func (o *GetAccountV1Resp) HasGreek() bool {
	if o != nil && !IsNil(o.Greek) {
		return true
	}

	return false
}

// SetGreek gets a reference to the given []GetAccountV1RespGreekInner and assigns it to the Greek field.
func (o *GetAccountV1Resp) SetGreek(v []GetAccountV1RespGreekInner) {
	o.Greek = v
}

// GetRiskLevel returns the RiskLevel field value if set, zero value otherwise.
func (o *GetAccountV1Resp) GetRiskLevel() string {
	if o == nil || IsNil(o.RiskLevel) {
		var ret string
		return ret
	}
	return *o.RiskLevel
}

// GetRiskLevelOk returns a tuple with the RiskLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1Resp) GetRiskLevelOk() (*string, bool) {
	if o == nil || IsNil(o.RiskLevel) {
		return nil, false
	}
	return o.RiskLevel, true
}

// HasRiskLevel returns a boolean if a field has been set.
func (o *GetAccountV1Resp) HasRiskLevel() bool {
	if o != nil && !IsNil(o.RiskLevel) {
		return true
	}

	return false
}

// SetRiskLevel gets a reference to the given string and assigns it to the RiskLevel field.
func (o *GetAccountV1Resp) SetRiskLevel(v string) {
	o.RiskLevel = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetAccountV1Resp) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1Resp) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetAccountV1Resp) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetAccountV1Resp) SetTime(v int64) {
	o.Time = &v
}

func (o GetAccountV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAccountV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.Greek) {
		toSerialize["greek"] = o.Greek
	}
	if !IsNil(o.RiskLevel) {
		toSerialize["riskLevel"] = o.RiskLevel
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableGetAccountV1Resp struct {
	value *GetAccountV1Resp
	isSet bool
}

func (v NullableGetAccountV1Resp) Get() *GetAccountV1Resp {
	return v.value
}

func (v *NullableGetAccountV1Resp) Set(val *GetAccountV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountV1Resp(val *GetAccountV1Resp) *NullableGetAccountV1Resp {
	return &NullableGetAccountV1Resp{value: val, isSet: true}
}

func (v NullableGetAccountV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


