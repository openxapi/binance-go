/*
Binance Options API

OpenAPI specification for Binance exchange - Options API

API version: 0.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the GetTickerV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTickerV1RespItem{}

// GetTickerV1RespItem struct for GetTickerV1RespItem
type GetTickerV1RespItem struct {
	Amount *string `json:"amount,omitempty"`
	AskPrice *string `json:"askPrice,omitempty"`
	BidPrice *string `json:"bidPrice,omitempty"`
	CloseTime *int64 `json:"closeTime,omitempty"`
	ExercisePrice *string `json:"exercisePrice,omitempty"`
	FirstTradeId *int64 `json:"firstTradeId,omitempty"`
	High *string `json:"high,omitempty"`
	LastPrice *string `json:"lastPrice,omitempty"`
	LastQty *string `json:"lastQty,omitempty"`
	Low *string `json:"low,omitempty"`
	Open *string `json:"open,omitempty"`
	OpenTime *int64 `json:"openTime,omitempty"`
	PriceChange *string `json:"priceChange,omitempty"`
	PriceChangePercent *string `json:"priceChangePercent,omitempty"`
	StrikePrice *string `json:"strikePrice,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	TradeCount *int32 `json:"tradeCount,omitempty"`
	Volume *string `json:"volume,omitempty"`
}

// NewGetTickerV1RespItem instantiates a new GetTickerV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTickerV1RespItem() *GetTickerV1RespItem {
	this := GetTickerV1RespItem{}
	return &this
}

// NewGetTickerV1RespItemWithDefaults instantiates a new GetTickerV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTickerV1RespItemWithDefaults() *GetTickerV1RespItem {
	this := GetTickerV1RespItem{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *GetTickerV1RespItem) SetAmount(v string) {
	o.Amount = &v
}

// GetAskPrice returns the AskPrice field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetAskPrice() string {
	if o == nil || IsNil(o.AskPrice) {
		var ret string
		return ret
	}
	return *o.AskPrice
}

// GetAskPriceOk returns a tuple with the AskPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetAskPriceOk() (*string, bool) {
	if o == nil || IsNil(o.AskPrice) {
		return nil, false
	}
	return o.AskPrice, true
}

// HasAskPrice returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasAskPrice() bool {
	if o != nil && !IsNil(o.AskPrice) {
		return true
	}

	return false
}

// SetAskPrice gets a reference to the given string and assigns it to the AskPrice field.
func (o *GetTickerV1RespItem) SetAskPrice(v string) {
	o.AskPrice = &v
}

// GetBidPrice returns the BidPrice field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetBidPrice() string {
	if o == nil || IsNil(o.BidPrice) {
		var ret string
		return ret
	}
	return *o.BidPrice
}

// GetBidPriceOk returns a tuple with the BidPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetBidPriceOk() (*string, bool) {
	if o == nil || IsNil(o.BidPrice) {
		return nil, false
	}
	return o.BidPrice, true
}

// HasBidPrice returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasBidPrice() bool {
	if o != nil && !IsNil(o.BidPrice) {
		return true
	}

	return false
}

// SetBidPrice gets a reference to the given string and assigns it to the BidPrice field.
func (o *GetTickerV1RespItem) SetBidPrice(v string) {
	o.BidPrice = &v
}

// GetCloseTime returns the CloseTime field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetCloseTime() int64 {
	if o == nil || IsNil(o.CloseTime) {
		var ret int64
		return ret
	}
	return *o.CloseTime
}

// GetCloseTimeOk returns a tuple with the CloseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetCloseTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CloseTime) {
		return nil, false
	}
	return o.CloseTime, true
}

// HasCloseTime returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasCloseTime() bool {
	if o != nil && !IsNil(o.CloseTime) {
		return true
	}

	return false
}

// SetCloseTime gets a reference to the given int64 and assigns it to the CloseTime field.
func (o *GetTickerV1RespItem) SetCloseTime(v int64) {
	o.CloseTime = &v
}

// GetExercisePrice returns the ExercisePrice field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetExercisePrice() string {
	if o == nil || IsNil(o.ExercisePrice) {
		var ret string
		return ret
	}
	return *o.ExercisePrice
}

// GetExercisePriceOk returns a tuple with the ExercisePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetExercisePriceOk() (*string, bool) {
	if o == nil || IsNil(o.ExercisePrice) {
		return nil, false
	}
	return o.ExercisePrice, true
}

// HasExercisePrice returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasExercisePrice() bool {
	if o != nil && !IsNil(o.ExercisePrice) {
		return true
	}

	return false
}

// SetExercisePrice gets a reference to the given string and assigns it to the ExercisePrice field.
func (o *GetTickerV1RespItem) SetExercisePrice(v string) {
	o.ExercisePrice = &v
}

// GetFirstTradeId returns the FirstTradeId field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetFirstTradeId() int64 {
	if o == nil || IsNil(o.FirstTradeId) {
		var ret int64
		return ret
	}
	return *o.FirstTradeId
}

// GetFirstTradeIdOk returns a tuple with the FirstTradeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetFirstTradeIdOk() (*int64, bool) {
	if o == nil || IsNil(o.FirstTradeId) {
		return nil, false
	}
	return o.FirstTradeId, true
}

// HasFirstTradeId returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasFirstTradeId() bool {
	if o != nil && !IsNil(o.FirstTradeId) {
		return true
	}

	return false
}

// SetFirstTradeId gets a reference to the given int64 and assigns it to the FirstTradeId field.
func (o *GetTickerV1RespItem) SetFirstTradeId(v int64) {
	o.FirstTradeId = &v
}

// GetHigh returns the High field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetHigh() string {
	if o == nil || IsNil(o.High) {
		var ret string
		return ret
	}
	return *o.High
}

// GetHighOk returns a tuple with the High field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetHighOk() (*string, bool) {
	if o == nil || IsNil(o.High) {
		return nil, false
	}
	return o.High, true
}

// HasHigh returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasHigh() bool {
	if o != nil && !IsNil(o.High) {
		return true
	}

	return false
}

// SetHigh gets a reference to the given string and assigns it to the High field.
func (o *GetTickerV1RespItem) SetHigh(v string) {
	o.High = &v
}

// GetLastPrice returns the LastPrice field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetLastPrice() string {
	if o == nil || IsNil(o.LastPrice) {
		var ret string
		return ret
	}
	return *o.LastPrice
}

// GetLastPriceOk returns a tuple with the LastPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetLastPriceOk() (*string, bool) {
	if o == nil || IsNil(o.LastPrice) {
		return nil, false
	}
	return o.LastPrice, true
}

// HasLastPrice returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasLastPrice() bool {
	if o != nil && !IsNil(o.LastPrice) {
		return true
	}

	return false
}

// SetLastPrice gets a reference to the given string and assigns it to the LastPrice field.
func (o *GetTickerV1RespItem) SetLastPrice(v string) {
	o.LastPrice = &v
}

// GetLastQty returns the LastQty field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetLastQty() string {
	if o == nil || IsNil(o.LastQty) {
		var ret string
		return ret
	}
	return *o.LastQty
}

// GetLastQtyOk returns a tuple with the LastQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetLastQtyOk() (*string, bool) {
	if o == nil || IsNil(o.LastQty) {
		return nil, false
	}
	return o.LastQty, true
}

// HasLastQty returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasLastQty() bool {
	if o != nil && !IsNil(o.LastQty) {
		return true
	}

	return false
}

// SetLastQty gets a reference to the given string and assigns it to the LastQty field.
func (o *GetTickerV1RespItem) SetLastQty(v string) {
	o.LastQty = &v
}

// GetLow returns the Low field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetLow() string {
	if o == nil || IsNil(o.Low) {
		var ret string
		return ret
	}
	return *o.Low
}

// GetLowOk returns a tuple with the Low field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetLowOk() (*string, bool) {
	if o == nil || IsNil(o.Low) {
		return nil, false
	}
	return o.Low, true
}

// HasLow returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasLow() bool {
	if o != nil && !IsNil(o.Low) {
		return true
	}

	return false
}

// SetLow gets a reference to the given string and assigns it to the Low field.
func (o *GetTickerV1RespItem) SetLow(v string) {
	o.Low = &v
}

// GetOpen returns the Open field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetOpen() string {
	if o == nil || IsNil(o.Open) {
		var ret string
		return ret
	}
	return *o.Open
}

// GetOpenOk returns a tuple with the Open field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetOpenOk() (*string, bool) {
	if o == nil || IsNil(o.Open) {
		return nil, false
	}
	return o.Open, true
}

// HasOpen returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasOpen() bool {
	if o != nil && !IsNil(o.Open) {
		return true
	}

	return false
}

// SetOpen gets a reference to the given string and assigns it to the Open field.
func (o *GetTickerV1RespItem) SetOpen(v string) {
	o.Open = &v
}

// GetOpenTime returns the OpenTime field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetOpenTime() int64 {
	if o == nil || IsNil(o.OpenTime) {
		var ret int64
		return ret
	}
	return *o.OpenTime
}

// GetOpenTimeOk returns a tuple with the OpenTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetOpenTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.OpenTime) {
		return nil, false
	}
	return o.OpenTime, true
}

// HasOpenTime returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasOpenTime() bool {
	if o != nil && !IsNil(o.OpenTime) {
		return true
	}

	return false
}

// SetOpenTime gets a reference to the given int64 and assigns it to the OpenTime field.
func (o *GetTickerV1RespItem) SetOpenTime(v int64) {
	o.OpenTime = &v
}

// GetPriceChange returns the PriceChange field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetPriceChange() string {
	if o == nil || IsNil(o.PriceChange) {
		var ret string
		return ret
	}
	return *o.PriceChange
}

// GetPriceChangeOk returns a tuple with the PriceChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetPriceChangeOk() (*string, bool) {
	if o == nil || IsNil(o.PriceChange) {
		return nil, false
	}
	return o.PriceChange, true
}

// HasPriceChange returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasPriceChange() bool {
	if o != nil && !IsNil(o.PriceChange) {
		return true
	}

	return false
}

// SetPriceChange gets a reference to the given string and assigns it to the PriceChange field.
func (o *GetTickerV1RespItem) SetPriceChange(v string) {
	o.PriceChange = &v
}

// GetPriceChangePercent returns the PriceChangePercent field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetPriceChangePercent() string {
	if o == nil || IsNil(o.PriceChangePercent) {
		var ret string
		return ret
	}
	return *o.PriceChangePercent
}

// GetPriceChangePercentOk returns a tuple with the PriceChangePercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetPriceChangePercentOk() (*string, bool) {
	if o == nil || IsNil(o.PriceChangePercent) {
		return nil, false
	}
	return o.PriceChangePercent, true
}

// HasPriceChangePercent returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasPriceChangePercent() bool {
	if o != nil && !IsNil(o.PriceChangePercent) {
		return true
	}

	return false
}

// SetPriceChangePercent gets a reference to the given string and assigns it to the PriceChangePercent field.
func (o *GetTickerV1RespItem) SetPriceChangePercent(v string) {
	o.PriceChangePercent = &v
}

// GetStrikePrice returns the StrikePrice field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetStrikePrice() string {
	if o == nil || IsNil(o.StrikePrice) {
		var ret string
		return ret
	}
	return *o.StrikePrice
}

// GetStrikePriceOk returns a tuple with the StrikePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetStrikePriceOk() (*string, bool) {
	if o == nil || IsNil(o.StrikePrice) {
		return nil, false
	}
	return o.StrikePrice, true
}

// HasStrikePrice returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasStrikePrice() bool {
	if o != nil && !IsNil(o.StrikePrice) {
		return true
	}

	return false
}

// SetStrikePrice gets a reference to the given string and assigns it to the StrikePrice field.
func (o *GetTickerV1RespItem) SetStrikePrice(v string) {
	o.StrikePrice = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *GetTickerV1RespItem) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTradeCount returns the TradeCount field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetTradeCount() int32 {
	if o == nil || IsNil(o.TradeCount) {
		var ret int32
		return ret
	}
	return *o.TradeCount
}

// GetTradeCountOk returns a tuple with the TradeCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetTradeCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TradeCount) {
		return nil, false
	}
	return o.TradeCount, true
}

// HasTradeCount returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasTradeCount() bool {
	if o != nil && !IsNil(o.TradeCount) {
		return true
	}

	return false
}

// SetTradeCount gets a reference to the given int32 and assigns it to the TradeCount field.
func (o *GetTickerV1RespItem) SetTradeCount(v int32) {
	o.TradeCount = &v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *GetTickerV1RespItem) GetVolume() string {
	if o == nil || IsNil(o.Volume) {
		var ret string
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTickerV1RespItem) GetVolumeOk() (*string, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *GetTickerV1RespItem) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given string and assigns it to the Volume field.
func (o *GetTickerV1RespItem) SetVolume(v string) {
	o.Volume = &v
}

func (o GetTickerV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTickerV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.AskPrice) {
		toSerialize["askPrice"] = o.AskPrice
	}
	if !IsNil(o.BidPrice) {
		toSerialize["bidPrice"] = o.BidPrice
	}
	if !IsNil(o.CloseTime) {
		toSerialize["closeTime"] = o.CloseTime
	}
	if !IsNil(o.ExercisePrice) {
		toSerialize["exercisePrice"] = o.ExercisePrice
	}
	if !IsNil(o.FirstTradeId) {
		toSerialize["firstTradeId"] = o.FirstTradeId
	}
	if !IsNil(o.High) {
		toSerialize["high"] = o.High
	}
	if !IsNil(o.LastPrice) {
		toSerialize["lastPrice"] = o.LastPrice
	}
	if !IsNil(o.LastQty) {
		toSerialize["lastQty"] = o.LastQty
	}
	if !IsNil(o.Low) {
		toSerialize["low"] = o.Low
	}
	if !IsNil(o.Open) {
		toSerialize["open"] = o.Open
	}
	if !IsNil(o.OpenTime) {
		toSerialize["openTime"] = o.OpenTime
	}
	if !IsNil(o.PriceChange) {
		toSerialize["priceChange"] = o.PriceChange
	}
	if !IsNil(o.PriceChangePercent) {
		toSerialize["priceChangePercent"] = o.PriceChangePercent
	}
	if !IsNil(o.StrikePrice) {
		toSerialize["strikePrice"] = o.StrikePrice
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.TradeCount) {
		toSerialize["tradeCount"] = o.TradeCount
	}
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return toSerialize, nil
}

type NullableGetTickerV1RespItem struct {
	value *GetTickerV1RespItem
	isSet bool
}

func (v NullableGetTickerV1RespItem) Get() *GetTickerV1RespItem {
	return v.value
}

func (v *NullableGetTickerV1RespItem) Set(val *GetTickerV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTickerV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTickerV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTickerV1RespItem(val *GetTickerV1RespItem) *NullableGetTickerV1RespItem {
	return &NullableGetTickerV1RespItem{value: val, isSet: true}
}

func (v NullableGetTickerV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTickerV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


