/*
Binance Options API

OpenAPI specification for Binance exchange - Options API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the GetAccountV1RespGreekInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAccountV1RespGreekInner{}

// GetAccountV1RespGreekInner struct for GetAccountV1RespGreekInner
type GetAccountV1RespGreekInner struct {
	Delta *string `json:"delta,omitempty"`
	Gamma *string `json:"gamma,omitempty"`
	Theta *string `json:"theta,omitempty"`
	Underlying *string `json:"underlying,omitempty"`
	Vega *string `json:"vega,omitempty"`
}

// NewGetAccountV1RespGreekInner instantiates a new GetAccountV1RespGreekInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountV1RespGreekInner() *GetAccountV1RespGreekInner {
	this := GetAccountV1RespGreekInner{}
	return &this
}

// NewGetAccountV1RespGreekInnerWithDefaults instantiates a new GetAccountV1RespGreekInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountV1RespGreekInnerWithDefaults() *GetAccountV1RespGreekInner {
	this := GetAccountV1RespGreekInner{}
	return &this
}

// GetDelta returns the Delta field value if set, zero value otherwise.
func (o *GetAccountV1RespGreekInner) GetDelta() string {
	if o == nil || IsNil(o.Delta) {
		var ret string
		return ret
	}
	return *o.Delta
}

// GetDeltaOk returns a tuple with the Delta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1RespGreekInner) GetDeltaOk() (*string, bool) {
	if o == nil || IsNil(o.Delta) {
		return nil, false
	}
	return o.Delta, true
}

// HasDelta returns a boolean if a field has been set.
func (o *GetAccountV1RespGreekInner) HasDelta() bool {
	if o != nil && !IsNil(o.Delta) {
		return true
	}

	return false
}

// SetDelta gets a reference to the given string and assigns it to the Delta field.
func (o *GetAccountV1RespGreekInner) SetDelta(v string) {
	o.Delta = &v
}

// GetGamma returns the Gamma field value if set, zero value otherwise.
func (o *GetAccountV1RespGreekInner) GetGamma() string {
	if o == nil || IsNil(o.Gamma) {
		var ret string
		return ret
	}
	return *o.Gamma
}

// GetGammaOk returns a tuple with the Gamma field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1RespGreekInner) GetGammaOk() (*string, bool) {
	if o == nil || IsNil(o.Gamma) {
		return nil, false
	}
	return o.Gamma, true
}

// HasGamma returns a boolean if a field has been set.
func (o *GetAccountV1RespGreekInner) HasGamma() bool {
	if o != nil && !IsNil(o.Gamma) {
		return true
	}

	return false
}

// SetGamma gets a reference to the given string and assigns it to the Gamma field.
func (o *GetAccountV1RespGreekInner) SetGamma(v string) {
	o.Gamma = &v
}

// GetTheta returns the Theta field value if set, zero value otherwise.
func (o *GetAccountV1RespGreekInner) GetTheta() string {
	if o == nil || IsNil(o.Theta) {
		var ret string
		return ret
	}
	return *o.Theta
}

// GetThetaOk returns a tuple with the Theta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1RespGreekInner) GetThetaOk() (*string, bool) {
	if o == nil || IsNil(o.Theta) {
		return nil, false
	}
	return o.Theta, true
}

// HasTheta returns a boolean if a field has been set.
func (o *GetAccountV1RespGreekInner) HasTheta() bool {
	if o != nil && !IsNil(o.Theta) {
		return true
	}

	return false
}

// SetTheta gets a reference to the given string and assigns it to the Theta field.
func (o *GetAccountV1RespGreekInner) SetTheta(v string) {
	o.Theta = &v
}

// GetUnderlying returns the Underlying field value if set, zero value otherwise.
func (o *GetAccountV1RespGreekInner) GetUnderlying() string {
	if o == nil || IsNil(o.Underlying) {
		var ret string
		return ret
	}
	return *o.Underlying
}

// GetUnderlyingOk returns a tuple with the Underlying field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1RespGreekInner) GetUnderlyingOk() (*string, bool) {
	if o == nil || IsNil(o.Underlying) {
		return nil, false
	}
	return o.Underlying, true
}

// HasUnderlying returns a boolean if a field has been set.
func (o *GetAccountV1RespGreekInner) HasUnderlying() bool {
	if o != nil && !IsNil(o.Underlying) {
		return true
	}

	return false
}

// SetUnderlying gets a reference to the given string and assigns it to the Underlying field.
func (o *GetAccountV1RespGreekInner) SetUnderlying(v string) {
	o.Underlying = &v
}

// GetVega returns the Vega field value if set, zero value otherwise.
func (o *GetAccountV1RespGreekInner) GetVega() string {
	if o == nil || IsNil(o.Vega) {
		var ret string
		return ret
	}
	return *o.Vega
}

// GetVegaOk returns a tuple with the Vega field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountV1RespGreekInner) GetVegaOk() (*string, bool) {
	if o == nil || IsNil(o.Vega) {
		return nil, false
	}
	return o.Vega, true
}

// HasVega returns a boolean if a field has been set.
func (o *GetAccountV1RespGreekInner) HasVega() bool {
	if o != nil && !IsNil(o.Vega) {
		return true
	}

	return false
}

// SetVega gets a reference to the given string and assigns it to the Vega field.
func (o *GetAccountV1RespGreekInner) SetVega(v string) {
	o.Vega = &v
}

func (o GetAccountV1RespGreekInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAccountV1RespGreekInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Delta) {
		toSerialize["delta"] = o.Delta
	}
	if !IsNil(o.Gamma) {
		toSerialize["gamma"] = o.Gamma
	}
	if !IsNil(o.Theta) {
		toSerialize["theta"] = o.Theta
	}
	if !IsNil(o.Underlying) {
		toSerialize["underlying"] = o.Underlying
	}
	if !IsNil(o.Vega) {
		toSerialize["vega"] = o.Vega
	}
	return toSerialize, nil
}

type NullableGetAccountV1RespGreekInner struct {
	value *GetAccountV1RespGreekInner
	isSet bool
}

func (v NullableGetAccountV1RespGreekInner) Get() *GetAccountV1RespGreekInner {
	return v.value
}

func (v *NullableGetAccountV1RespGreekInner) Set(val *GetAccountV1RespGreekInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountV1RespGreekInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountV1RespGreekInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountV1RespGreekInner(val *GetAccountV1RespGreekInner) *NullableGetAccountV1RespGreekInner {
	return &NullableGetAccountV1RespGreekInner{value: val, isSet: true}
}

func (v NullableGetAccountV1RespGreekInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountV1RespGreekInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


