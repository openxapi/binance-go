/*
Binance Wallet API

OpenAPI specification for Binance exchange - Wallet API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wallet

import (
	"encoding/json"
)

// checks if the WalletGetAssetDribbletV1RespUserAssetDribbletsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WalletGetAssetDribbletV1RespUserAssetDribbletsInner{}

// WalletGetAssetDribbletV1RespUserAssetDribbletsInner struct for WalletGetAssetDribbletV1RespUserAssetDribbletsInner
type WalletGetAssetDribbletV1RespUserAssetDribbletsInner struct {
	OperateTime *int64 `json:"operateTime,omitempty"`
	TotalServiceChargeAmount *string `json:"totalServiceChargeAmount,omitempty"`
	TotalTransferedAmount *string `json:"totalTransferedAmount,omitempty"`
	TransId *int64 `json:"transId,omitempty"`
	UserAssetDribbletDetails []WalletGetAssetDribbletV1RespUserAssetDribbletsInnerUserAssetDribbletDetailsInner `json:"userAssetDribbletDetails,omitempty"`
}

// NewWalletGetAssetDribbletV1RespUserAssetDribbletsInner instantiates a new WalletGetAssetDribbletV1RespUserAssetDribbletsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletGetAssetDribbletV1RespUserAssetDribbletsInner() *WalletGetAssetDribbletV1RespUserAssetDribbletsInner {
	this := WalletGetAssetDribbletV1RespUserAssetDribbletsInner{}
	return &this
}

// NewWalletGetAssetDribbletV1RespUserAssetDribbletsInnerWithDefaults instantiates a new WalletGetAssetDribbletV1RespUserAssetDribbletsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletGetAssetDribbletV1RespUserAssetDribbletsInnerWithDefaults() *WalletGetAssetDribbletV1RespUserAssetDribbletsInner {
	this := WalletGetAssetDribbletV1RespUserAssetDribbletsInner{}
	return &this
}

// GetOperateTime returns the OperateTime field value if set, zero value otherwise.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) GetOperateTime() int64 {
	if o == nil || IsNil(o.OperateTime) {
		var ret int64
		return ret
	}
	return *o.OperateTime
}

// GetOperateTimeOk returns a tuple with the OperateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) GetOperateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.OperateTime) {
		return nil, false
	}
	return o.OperateTime, true
}

// HasOperateTime returns a boolean if a field has been set.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) HasOperateTime() bool {
	if o != nil && !IsNil(o.OperateTime) {
		return true
	}

	return false
}

// SetOperateTime gets a reference to the given int64 and assigns it to the OperateTime field.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) SetOperateTime(v int64) {
	o.OperateTime = &v
}

// GetTotalServiceChargeAmount returns the TotalServiceChargeAmount field value if set, zero value otherwise.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) GetTotalServiceChargeAmount() string {
	if o == nil || IsNil(o.TotalServiceChargeAmount) {
		var ret string
		return ret
	}
	return *o.TotalServiceChargeAmount
}

// GetTotalServiceChargeAmountOk returns a tuple with the TotalServiceChargeAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) GetTotalServiceChargeAmountOk() (*string, bool) {
	if o == nil || IsNil(o.TotalServiceChargeAmount) {
		return nil, false
	}
	return o.TotalServiceChargeAmount, true
}

// HasTotalServiceChargeAmount returns a boolean if a field has been set.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) HasTotalServiceChargeAmount() bool {
	if o != nil && !IsNil(o.TotalServiceChargeAmount) {
		return true
	}

	return false
}

// SetTotalServiceChargeAmount gets a reference to the given string and assigns it to the TotalServiceChargeAmount field.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) SetTotalServiceChargeAmount(v string) {
	o.TotalServiceChargeAmount = &v
}

// GetTotalTransferedAmount returns the TotalTransferedAmount field value if set, zero value otherwise.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) GetTotalTransferedAmount() string {
	if o == nil || IsNil(o.TotalTransferedAmount) {
		var ret string
		return ret
	}
	return *o.TotalTransferedAmount
}

// GetTotalTransferedAmountOk returns a tuple with the TotalTransferedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) GetTotalTransferedAmountOk() (*string, bool) {
	if o == nil || IsNil(o.TotalTransferedAmount) {
		return nil, false
	}
	return o.TotalTransferedAmount, true
}

// HasTotalTransferedAmount returns a boolean if a field has been set.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) HasTotalTransferedAmount() bool {
	if o != nil && !IsNil(o.TotalTransferedAmount) {
		return true
	}

	return false
}

// SetTotalTransferedAmount gets a reference to the given string and assigns it to the TotalTransferedAmount field.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) SetTotalTransferedAmount(v string) {
	o.TotalTransferedAmount = &v
}

// GetTransId returns the TransId field value if set, zero value otherwise.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) GetTransId() int64 {
	if o == nil || IsNil(o.TransId) {
		var ret int64
		return ret
	}
	return *o.TransId
}

// GetTransIdOk returns a tuple with the TransId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) GetTransIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TransId) {
		return nil, false
	}
	return o.TransId, true
}

// HasTransId returns a boolean if a field has been set.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) HasTransId() bool {
	if o != nil && !IsNil(o.TransId) {
		return true
	}

	return false
}

// SetTransId gets a reference to the given int64 and assigns it to the TransId field.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) SetTransId(v int64) {
	o.TransId = &v
}

// GetUserAssetDribbletDetails returns the UserAssetDribbletDetails field value if set, zero value otherwise.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) GetUserAssetDribbletDetails() []WalletGetAssetDribbletV1RespUserAssetDribbletsInnerUserAssetDribbletDetailsInner {
	if o == nil || IsNil(o.UserAssetDribbletDetails) {
		var ret []WalletGetAssetDribbletV1RespUserAssetDribbletsInnerUserAssetDribbletDetailsInner
		return ret
	}
	return o.UserAssetDribbletDetails
}

// GetUserAssetDribbletDetailsOk returns a tuple with the UserAssetDribbletDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) GetUserAssetDribbletDetailsOk() ([]WalletGetAssetDribbletV1RespUserAssetDribbletsInnerUserAssetDribbletDetailsInner, bool) {
	if o == nil || IsNil(o.UserAssetDribbletDetails) {
		return nil, false
	}
	return o.UserAssetDribbletDetails, true
}

// HasUserAssetDribbletDetails returns a boolean if a field has been set.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) HasUserAssetDribbletDetails() bool {
	if o != nil && !IsNil(o.UserAssetDribbletDetails) {
		return true
	}

	return false
}

// SetUserAssetDribbletDetails gets a reference to the given []WalletGetAssetDribbletV1RespUserAssetDribbletsInnerUserAssetDribbletDetailsInner and assigns it to the UserAssetDribbletDetails field.
func (o *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) SetUserAssetDribbletDetails(v []WalletGetAssetDribbletV1RespUserAssetDribbletsInnerUserAssetDribbletDetailsInner) {
	o.UserAssetDribbletDetails = v
}

func (o WalletGetAssetDribbletV1RespUserAssetDribbletsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WalletGetAssetDribbletV1RespUserAssetDribbletsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OperateTime) {
		toSerialize["operateTime"] = o.OperateTime
	}
	if !IsNil(o.TotalServiceChargeAmount) {
		toSerialize["totalServiceChargeAmount"] = o.TotalServiceChargeAmount
	}
	if !IsNil(o.TotalTransferedAmount) {
		toSerialize["totalTransferedAmount"] = o.TotalTransferedAmount
	}
	if !IsNil(o.TransId) {
		toSerialize["transId"] = o.TransId
	}
	if !IsNil(o.UserAssetDribbletDetails) {
		toSerialize["userAssetDribbletDetails"] = o.UserAssetDribbletDetails
	}
	return toSerialize, nil
}

type NullableWalletGetAssetDribbletV1RespUserAssetDribbletsInner struct {
	value *WalletGetAssetDribbletV1RespUserAssetDribbletsInner
	isSet bool
}

func (v NullableWalletGetAssetDribbletV1RespUserAssetDribbletsInner) Get() *WalletGetAssetDribbletV1RespUserAssetDribbletsInner {
	return v.value
}

func (v *NullableWalletGetAssetDribbletV1RespUserAssetDribbletsInner) Set(val *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletGetAssetDribbletV1RespUserAssetDribbletsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletGetAssetDribbletV1RespUserAssetDribbletsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletGetAssetDribbletV1RespUserAssetDribbletsInner(val *WalletGetAssetDribbletV1RespUserAssetDribbletsInner) *NullableWalletGetAssetDribbletV1RespUserAssetDribbletsInner {
	return &NullableWalletGetAssetDribbletV1RespUserAssetDribbletsInner{value: val, isSet: true}
}

func (v NullableWalletGetAssetDribbletV1RespUserAssetDribbletsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletGetAssetDribbletV1RespUserAssetDribbletsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


