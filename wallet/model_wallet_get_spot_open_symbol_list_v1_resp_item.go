/*
Binance Wallet API

OpenAPI specification for Binance exchange - Wallet API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wallet

import (
	"encoding/json"
)

// checks if the WalletGetSpotOpenSymbolListV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WalletGetSpotOpenSymbolListV1RespItem{}

// WalletGetSpotOpenSymbolListV1RespItem struct for WalletGetSpotOpenSymbolListV1RespItem
type WalletGetSpotOpenSymbolListV1RespItem struct {
	OpenTime *int64 `json:"openTime,omitempty"`
	Symbols []string `json:"symbols,omitempty"`
}

// NewWalletGetSpotOpenSymbolListV1RespItem instantiates a new WalletGetSpotOpenSymbolListV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletGetSpotOpenSymbolListV1RespItem() *WalletGetSpotOpenSymbolListV1RespItem {
	this := WalletGetSpotOpenSymbolListV1RespItem{}
	return &this
}

// NewWalletGetSpotOpenSymbolListV1RespItemWithDefaults instantiates a new WalletGetSpotOpenSymbolListV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletGetSpotOpenSymbolListV1RespItemWithDefaults() *WalletGetSpotOpenSymbolListV1RespItem {
	this := WalletGetSpotOpenSymbolListV1RespItem{}
	return &this
}

// GetOpenTime returns the OpenTime field value if set, zero value otherwise.
func (o *WalletGetSpotOpenSymbolListV1RespItem) GetOpenTime() int64 {
	if o == nil || IsNil(o.OpenTime) {
		var ret int64
		return ret
	}
	return *o.OpenTime
}

// GetOpenTimeOk returns a tuple with the OpenTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetSpotOpenSymbolListV1RespItem) GetOpenTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.OpenTime) {
		return nil, false
	}
	return o.OpenTime, true
}

// HasOpenTime returns a boolean if a field has been set.
func (o *WalletGetSpotOpenSymbolListV1RespItem) HasOpenTime() bool {
	if o != nil && !IsNil(o.OpenTime) {
		return true
	}

	return false
}

// SetOpenTime gets a reference to the given int64 and assigns it to the OpenTime field.
func (o *WalletGetSpotOpenSymbolListV1RespItem) SetOpenTime(v int64) {
	o.OpenTime = &v
}

// GetSymbols returns the Symbols field value if set, zero value otherwise.
func (o *WalletGetSpotOpenSymbolListV1RespItem) GetSymbols() []string {
	if o == nil || IsNil(o.Symbols) {
		var ret []string
		return ret
	}
	return o.Symbols
}

// GetSymbolsOk returns a tuple with the Symbols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetSpotOpenSymbolListV1RespItem) GetSymbolsOk() ([]string, bool) {
	if o == nil || IsNil(o.Symbols) {
		return nil, false
	}
	return o.Symbols, true
}

// HasSymbols returns a boolean if a field has been set.
func (o *WalletGetSpotOpenSymbolListV1RespItem) HasSymbols() bool {
	if o != nil && !IsNil(o.Symbols) {
		return true
	}

	return false
}

// SetSymbols gets a reference to the given []string and assigns it to the Symbols field.
func (o *WalletGetSpotOpenSymbolListV1RespItem) SetSymbols(v []string) {
	o.Symbols = v
}

func (o WalletGetSpotOpenSymbolListV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WalletGetSpotOpenSymbolListV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OpenTime) {
		toSerialize["openTime"] = o.OpenTime
	}
	if !IsNil(o.Symbols) {
		toSerialize["symbols"] = o.Symbols
	}
	return toSerialize, nil
}

type NullableWalletGetSpotOpenSymbolListV1RespItem struct {
	value *WalletGetSpotOpenSymbolListV1RespItem
	isSet bool
}

func (v NullableWalletGetSpotOpenSymbolListV1RespItem) Get() *WalletGetSpotOpenSymbolListV1RespItem {
	return v.value
}

func (v *NullableWalletGetSpotOpenSymbolListV1RespItem) Set(val *WalletGetSpotOpenSymbolListV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletGetSpotOpenSymbolListV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletGetSpotOpenSymbolListV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletGetSpotOpenSymbolListV1RespItem(val *WalletGetSpotOpenSymbolListV1RespItem) *NullableWalletGetSpotOpenSymbolListV1RespItem {
	return &NullableWalletGetSpotOpenSymbolListV1RespItem{value: val, isSet: true}
}

func (v NullableWalletGetSpotOpenSymbolListV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletGetSpotOpenSymbolListV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


