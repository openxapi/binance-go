/*
Binance Wallet API

OpenAPI specification for Binance exchange - Wallet API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wallet

import (
	"encoding/json"
)

// checks if the WalletGetSystemStatusV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WalletGetSystemStatusV1Resp{}

// WalletGetSystemStatusV1Resp struct for WalletGetSystemStatusV1Resp
type WalletGetSystemStatusV1Resp struct {
	Msg *string `json:"msg,omitempty"`
	Status *int32 `json:"status,omitempty"`
}

// NewWalletGetSystemStatusV1Resp instantiates a new WalletGetSystemStatusV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletGetSystemStatusV1Resp() *WalletGetSystemStatusV1Resp {
	this := WalletGetSystemStatusV1Resp{}
	return &this
}

// NewWalletGetSystemStatusV1RespWithDefaults instantiates a new WalletGetSystemStatusV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletGetSystemStatusV1RespWithDefaults() *WalletGetSystemStatusV1Resp {
	this := WalletGetSystemStatusV1Resp{}
	return &this
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *WalletGetSystemStatusV1Resp) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetSystemStatusV1Resp) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *WalletGetSystemStatusV1Resp) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *WalletGetSystemStatusV1Resp) SetMsg(v string) {
	o.Msg = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WalletGetSystemStatusV1Resp) GetStatus() int32 {
	if o == nil || IsNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetSystemStatusV1Resp) GetStatusOk() (*int32, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WalletGetSystemStatusV1Resp) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *WalletGetSystemStatusV1Resp) SetStatus(v int32) {
	o.Status = &v
}

func (o WalletGetSystemStatusV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WalletGetSystemStatusV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableWalletGetSystemStatusV1Resp struct {
	value *WalletGetSystemStatusV1Resp
	isSet bool
}

func (v NullableWalletGetSystemStatusV1Resp) Get() *WalletGetSystemStatusV1Resp {
	return v.value
}

func (v *NullableWalletGetSystemStatusV1Resp) Set(val *WalletGetSystemStatusV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletGetSystemStatusV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletGetSystemStatusV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletGetSystemStatusV1Resp(val *WalletGetSystemStatusV1Resp) *NullableWalletGetSystemStatusV1Resp {
	return &NullableWalletGetSystemStatusV1Resp{value: val, isSet: true}
}

func (v NullableWalletGetSystemStatusV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletGetSystemStatusV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


