/*
Binance Wallet API

OpenAPI specification for Binance exchange - Wallet API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package wallet

import (
	"encoding/json"
)

// checks if the WalletGetAssetAssetDividendV1RespRowsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WalletGetAssetAssetDividendV1RespRowsInner{}

// WalletGetAssetAssetDividendV1RespRowsInner struct for WalletGetAssetAssetDividendV1RespRowsInner
type WalletGetAssetAssetDividendV1RespRowsInner struct {
	Amount *string `json:"amount,omitempty"`
	Asset *string `json:"asset,omitempty"`
	DivTime *int64 `json:"divTime,omitempty"`
	EnInfo *string `json:"enInfo,omitempty"`
	Id *int32 `json:"id,omitempty"`
	TranId *int64 `json:"tranId,omitempty"`
}

// NewWalletGetAssetAssetDividendV1RespRowsInner instantiates a new WalletGetAssetAssetDividendV1RespRowsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletGetAssetAssetDividendV1RespRowsInner() *WalletGetAssetAssetDividendV1RespRowsInner {
	this := WalletGetAssetAssetDividendV1RespRowsInner{}
	return &this
}

// NewWalletGetAssetAssetDividendV1RespRowsInnerWithDefaults instantiates a new WalletGetAssetAssetDividendV1RespRowsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletGetAssetAssetDividendV1RespRowsInnerWithDefaults() *WalletGetAssetAssetDividendV1RespRowsInner {
	this := WalletGetAssetAssetDividendV1RespRowsInner{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) SetAmount(v string) {
	o.Amount = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) SetAsset(v string) {
	o.Asset = &v
}

// GetDivTime returns the DivTime field value if set, zero value otherwise.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) GetDivTime() int64 {
	if o == nil || IsNil(o.DivTime) {
		var ret int64
		return ret
	}
	return *o.DivTime
}

// GetDivTimeOk returns a tuple with the DivTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) GetDivTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.DivTime) {
		return nil, false
	}
	return o.DivTime, true
}

// HasDivTime returns a boolean if a field has been set.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) HasDivTime() bool {
	if o != nil && !IsNil(o.DivTime) {
		return true
	}

	return false
}

// SetDivTime gets a reference to the given int64 and assigns it to the DivTime field.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) SetDivTime(v int64) {
	o.DivTime = &v
}

// GetEnInfo returns the EnInfo field value if set, zero value otherwise.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) GetEnInfo() string {
	if o == nil || IsNil(o.EnInfo) {
		var ret string
		return ret
	}
	return *o.EnInfo
}

// GetEnInfoOk returns a tuple with the EnInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) GetEnInfoOk() (*string, bool) {
	if o == nil || IsNil(o.EnInfo) {
		return nil, false
	}
	return o.EnInfo, true
}

// HasEnInfo returns a boolean if a field has been set.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) HasEnInfo() bool {
	if o != nil && !IsNil(o.EnInfo) {
		return true
	}

	return false
}

// SetEnInfo gets a reference to the given string and assigns it to the EnInfo field.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) SetEnInfo(v string) {
	o.EnInfo = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) SetId(v int32) {
	o.Id = &v
}

// GetTranId returns the TranId field value if set, zero value otherwise.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) GetTranId() int64 {
	if o == nil || IsNil(o.TranId) {
		var ret int64
		return ret
	}
	return *o.TranId
}

// GetTranIdOk returns a tuple with the TranId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) GetTranIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TranId) {
		return nil, false
	}
	return o.TranId, true
}

// HasTranId returns a boolean if a field has been set.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) HasTranId() bool {
	if o != nil && !IsNil(o.TranId) {
		return true
	}

	return false
}

// SetTranId gets a reference to the given int64 and assigns it to the TranId field.
func (o *WalletGetAssetAssetDividendV1RespRowsInner) SetTranId(v int64) {
	o.TranId = &v
}

func (o WalletGetAssetAssetDividendV1RespRowsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WalletGetAssetAssetDividendV1RespRowsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.DivTime) {
		toSerialize["divTime"] = o.DivTime
	}
	if !IsNil(o.EnInfo) {
		toSerialize["enInfo"] = o.EnInfo
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.TranId) {
		toSerialize["tranId"] = o.TranId
	}
	return toSerialize, nil
}

type NullableWalletGetAssetAssetDividendV1RespRowsInner struct {
	value *WalletGetAssetAssetDividendV1RespRowsInner
	isSet bool
}

func (v NullableWalletGetAssetAssetDividendV1RespRowsInner) Get() *WalletGetAssetAssetDividendV1RespRowsInner {
	return v.value
}

func (v *NullableWalletGetAssetAssetDividendV1RespRowsInner) Set(val *WalletGetAssetAssetDividendV1RespRowsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletGetAssetAssetDividendV1RespRowsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletGetAssetAssetDividendV1RespRowsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletGetAssetAssetDividendV1RespRowsInner(val *WalletGetAssetAssetDividendV1RespRowsInner) *NullableWalletGetAssetAssetDividendV1RespRowsInner {
	return &NullableWalletGetAssetAssetDividendV1RespRowsInner{value: val, isSet: true}
}

func (v NullableWalletGetAssetAssetDividendV1RespRowsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletGetAssetAssetDividendV1RespRowsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


