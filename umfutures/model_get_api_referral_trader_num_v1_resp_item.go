/*
Binance USD-M Futures API

OpenAPI specification for Binance exchange - Umfutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package umfutures

import (
	"encoding/json"
)

// checks if the GetApiReferralTraderNumV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApiReferralTraderNumV1RespItem{}

// GetApiReferralTraderNumV1RespItem struct for GetApiReferralTraderNumV1RespItem
type GetApiReferralTraderNumV1RespItem struct {
	NewTrader *string `json:"newTrader,omitempty"`
	OldTrader *string `json:"oldTrader,omitempty"`
	Time *int64 `json:"time,omitempty"`
}

// NewGetApiReferralTraderNumV1RespItem instantiates a new GetApiReferralTraderNumV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApiReferralTraderNumV1RespItem() *GetApiReferralTraderNumV1RespItem {
	this := GetApiReferralTraderNumV1RespItem{}
	return &this
}

// NewGetApiReferralTraderNumV1RespItemWithDefaults instantiates a new GetApiReferralTraderNumV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApiReferralTraderNumV1RespItemWithDefaults() *GetApiReferralTraderNumV1RespItem {
	this := GetApiReferralTraderNumV1RespItem{}
	return &this
}

// GetNewTrader returns the NewTrader field value if set, zero value otherwise.
func (o *GetApiReferralTraderNumV1RespItem) GetNewTrader() string {
	if o == nil || IsNil(o.NewTrader) {
		var ret string
		return ret
	}
	return *o.NewTrader
}

// GetNewTraderOk returns a tuple with the NewTrader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiReferralTraderNumV1RespItem) GetNewTraderOk() (*string, bool) {
	if o == nil || IsNil(o.NewTrader) {
		return nil, false
	}
	return o.NewTrader, true
}

// HasNewTrader returns a boolean if a field has been set.
func (o *GetApiReferralTraderNumV1RespItem) HasNewTrader() bool {
	if o != nil && !IsNil(o.NewTrader) {
		return true
	}

	return false
}

// SetNewTrader gets a reference to the given string and assigns it to the NewTrader field.
func (o *GetApiReferralTraderNumV1RespItem) SetNewTrader(v string) {
	o.NewTrader = &v
}

// GetOldTrader returns the OldTrader field value if set, zero value otherwise.
func (o *GetApiReferralTraderNumV1RespItem) GetOldTrader() string {
	if o == nil || IsNil(o.OldTrader) {
		var ret string
		return ret
	}
	return *o.OldTrader
}

// GetOldTraderOk returns a tuple with the OldTrader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiReferralTraderNumV1RespItem) GetOldTraderOk() (*string, bool) {
	if o == nil || IsNil(o.OldTrader) {
		return nil, false
	}
	return o.OldTrader, true
}

// HasOldTrader returns a boolean if a field has been set.
func (o *GetApiReferralTraderNumV1RespItem) HasOldTrader() bool {
	if o != nil && !IsNil(o.OldTrader) {
		return true
	}

	return false
}

// SetOldTrader gets a reference to the given string and assigns it to the OldTrader field.
func (o *GetApiReferralTraderNumV1RespItem) SetOldTrader(v string) {
	o.OldTrader = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *GetApiReferralTraderNumV1RespItem) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetApiReferralTraderNumV1RespItem) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *GetApiReferralTraderNumV1RespItem) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *GetApiReferralTraderNumV1RespItem) SetTime(v int64) {
	o.Time = &v
}

func (o GetApiReferralTraderNumV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApiReferralTraderNumV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewTrader) {
		toSerialize["newTrader"] = o.NewTrader
	}
	if !IsNil(o.OldTrader) {
		toSerialize["oldTrader"] = o.OldTrader
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableGetApiReferralTraderNumV1RespItem struct {
	value *GetApiReferralTraderNumV1RespItem
	isSet bool
}

func (v NullableGetApiReferralTraderNumV1RespItem) Get() *GetApiReferralTraderNumV1RespItem {
	return v.value
}

func (v *NullableGetApiReferralTraderNumV1RespItem) Set(val *GetApiReferralTraderNumV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApiReferralTraderNumV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApiReferralTraderNumV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApiReferralTraderNumV1RespItem(val *GetApiReferralTraderNumV1RespItem) *NullableGetApiReferralTraderNumV1RespItem {
	return &NullableGetApiReferralTraderNumV1RespItem{value: val, isSet: true}
}

func (v NullableGetApiReferralTraderNumV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApiReferralTraderNumV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


