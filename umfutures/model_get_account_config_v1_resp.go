/*
Binance USD-M Futures API

OpenAPI specification for Binance exchange - Umfutures API

API version: 0.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package umfutures

import (
	"encoding/json"
)

// checks if the GetAccountConfigV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAccountConfigV1Resp{}

// GetAccountConfigV1Resp struct for GetAccountConfigV1Resp
type GetAccountConfigV1Resp struct {
	CanDeposit *bool `json:"canDeposit,omitempty"`
	CanTrade *bool `json:"canTrade,omitempty"`
	CanWithdraw *bool `json:"canWithdraw,omitempty"`
	DualSidePosition *bool `json:"dualSidePosition,omitempty"`
	FeeTier *int32 `json:"feeTier,omitempty"`
	MultiAssetsMargin *bool `json:"multiAssetsMargin,omitempty"`
	TradeGroupId *int64 `json:"tradeGroupId,omitempty"`
	UpdateTime *int64 `json:"updateTime,omitempty"`
}

// NewGetAccountConfigV1Resp instantiates a new GetAccountConfigV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccountConfigV1Resp() *GetAccountConfigV1Resp {
	this := GetAccountConfigV1Resp{}
	return &this
}

// NewGetAccountConfigV1RespWithDefaults instantiates a new GetAccountConfigV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccountConfigV1RespWithDefaults() *GetAccountConfigV1Resp {
	this := GetAccountConfigV1Resp{}
	return &this
}

// GetCanDeposit returns the CanDeposit field value if set, zero value otherwise.
func (o *GetAccountConfigV1Resp) GetCanDeposit() bool {
	if o == nil || IsNil(o.CanDeposit) {
		var ret bool
		return ret
	}
	return *o.CanDeposit
}

// GetCanDepositOk returns a tuple with the CanDeposit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountConfigV1Resp) GetCanDepositOk() (*bool, bool) {
	if o == nil || IsNil(o.CanDeposit) {
		return nil, false
	}
	return o.CanDeposit, true
}

// HasCanDeposit returns a boolean if a field has been set.
func (o *GetAccountConfigV1Resp) HasCanDeposit() bool {
	if o != nil && !IsNil(o.CanDeposit) {
		return true
	}

	return false
}

// SetCanDeposit gets a reference to the given bool and assigns it to the CanDeposit field.
func (o *GetAccountConfigV1Resp) SetCanDeposit(v bool) {
	o.CanDeposit = &v
}

// GetCanTrade returns the CanTrade field value if set, zero value otherwise.
func (o *GetAccountConfigV1Resp) GetCanTrade() bool {
	if o == nil || IsNil(o.CanTrade) {
		var ret bool
		return ret
	}
	return *o.CanTrade
}

// GetCanTradeOk returns a tuple with the CanTrade field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountConfigV1Resp) GetCanTradeOk() (*bool, bool) {
	if o == nil || IsNil(o.CanTrade) {
		return nil, false
	}
	return o.CanTrade, true
}

// HasCanTrade returns a boolean if a field has been set.
func (o *GetAccountConfigV1Resp) HasCanTrade() bool {
	if o != nil && !IsNil(o.CanTrade) {
		return true
	}

	return false
}

// SetCanTrade gets a reference to the given bool and assigns it to the CanTrade field.
func (o *GetAccountConfigV1Resp) SetCanTrade(v bool) {
	o.CanTrade = &v
}

// GetCanWithdraw returns the CanWithdraw field value if set, zero value otherwise.
func (o *GetAccountConfigV1Resp) GetCanWithdraw() bool {
	if o == nil || IsNil(o.CanWithdraw) {
		var ret bool
		return ret
	}
	return *o.CanWithdraw
}

// GetCanWithdrawOk returns a tuple with the CanWithdraw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountConfigV1Resp) GetCanWithdrawOk() (*bool, bool) {
	if o == nil || IsNil(o.CanWithdraw) {
		return nil, false
	}
	return o.CanWithdraw, true
}

// HasCanWithdraw returns a boolean if a field has been set.
func (o *GetAccountConfigV1Resp) HasCanWithdraw() bool {
	if o != nil && !IsNil(o.CanWithdraw) {
		return true
	}

	return false
}

// SetCanWithdraw gets a reference to the given bool and assigns it to the CanWithdraw field.
func (o *GetAccountConfigV1Resp) SetCanWithdraw(v bool) {
	o.CanWithdraw = &v
}

// GetDualSidePosition returns the DualSidePosition field value if set, zero value otherwise.
func (o *GetAccountConfigV1Resp) GetDualSidePosition() bool {
	if o == nil || IsNil(o.DualSidePosition) {
		var ret bool
		return ret
	}
	return *o.DualSidePosition
}

// GetDualSidePositionOk returns a tuple with the DualSidePosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountConfigV1Resp) GetDualSidePositionOk() (*bool, bool) {
	if o == nil || IsNil(o.DualSidePosition) {
		return nil, false
	}
	return o.DualSidePosition, true
}

// HasDualSidePosition returns a boolean if a field has been set.
func (o *GetAccountConfigV1Resp) HasDualSidePosition() bool {
	if o != nil && !IsNil(o.DualSidePosition) {
		return true
	}

	return false
}

// SetDualSidePosition gets a reference to the given bool and assigns it to the DualSidePosition field.
func (o *GetAccountConfigV1Resp) SetDualSidePosition(v bool) {
	o.DualSidePosition = &v
}

// GetFeeTier returns the FeeTier field value if set, zero value otherwise.
func (o *GetAccountConfigV1Resp) GetFeeTier() int32 {
	if o == nil || IsNil(o.FeeTier) {
		var ret int32
		return ret
	}
	return *o.FeeTier
}

// GetFeeTierOk returns a tuple with the FeeTier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountConfigV1Resp) GetFeeTierOk() (*int32, bool) {
	if o == nil || IsNil(o.FeeTier) {
		return nil, false
	}
	return o.FeeTier, true
}

// HasFeeTier returns a boolean if a field has been set.
func (o *GetAccountConfigV1Resp) HasFeeTier() bool {
	if o != nil && !IsNil(o.FeeTier) {
		return true
	}

	return false
}

// SetFeeTier gets a reference to the given int32 and assigns it to the FeeTier field.
func (o *GetAccountConfigV1Resp) SetFeeTier(v int32) {
	o.FeeTier = &v
}

// GetMultiAssetsMargin returns the MultiAssetsMargin field value if set, zero value otherwise.
func (o *GetAccountConfigV1Resp) GetMultiAssetsMargin() bool {
	if o == nil || IsNil(o.MultiAssetsMargin) {
		var ret bool
		return ret
	}
	return *o.MultiAssetsMargin
}

// GetMultiAssetsMarginOk returns a tuple with the MultiAssetsMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountConfigV1Resp) GetMultiAssetsMarginOk() (*bool, bool) {
	if o == nil || IsNil(o.MultiAssetsMargin) {
		return nil, false
	}
	return o.MultiAssetsMargin, true
}

// HasMultiAssetsMargin returns a boolean if a field has been set.
func (o *GetAccountConfigV1Resp) HasMultiAssetsMargin() bool {
	if o != nil && !IsNil(o.MultiAssetsMargin) {
		return true
	}

	return false
}

// SetMultiAssetsMargin gets a reference to the given bool and assigns it to the MultiAssetsMargin field.
func (o *GetAccountConfigV1Resp) SetMultiAssetsMargin(v bool) {
	o.MultiAssetsMargin = &v
}

// GetTradeGroupId returns the TradeGroupId field value if set, zero value otherwise.
func (o *GetAccountConfigV1Resp) GetTradeGroupId() int64 {
	if o == nil || IsNil(o.TradeGroupId) {
		var ret int64
		return ret
	}
	return *o.TradeGroupId
}

// GetTradeGroupIdOk returns a tuple with the TradeGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountConfigV1Resp) GetTradeGroupIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TradeGroupId) {
		return nil, false
	}
	return o.TradeGroupId, true
}

// HasTradeGroupId returns a boolean if a field has been set.
func (o *GetAccountConfigV1Resp) HasTradeGroupId() bool {
	if o != nil && !IsNil(o.TradeGroupId) {
		return true
	}

	return false
}

// SetTradeGroupId gets a reference to the given int64 and assigns it to the TradeGroupId field.
func (o *GetAccountConfigV1Resp) SetTradeGroupId(v int64) {
	o.TradeGroupId = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *GetAccountConfigV1Resp) GetUpdateTime() int64 {
	if o == nil || IsNil(o.UpdateTime) {
		var ret int64
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccountConfigV1Resp) GetUpdateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *GetAccountConfigV1Resp) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given int64 and assigns it to the UpdateTime field.
func (o *GetAccountConfigV1Resp) SetUpdateTime(v int64) {
	o.UpdateTime = &v
}

func (o GetAccountConfigV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAccountConfigV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CanDeposit) {
		toSerialize["canDeposit"] = o.CanDeposit
	}
	if !IsNil(o.CanTrade) {
		toSerialize["canTrade"] = o.CanTrade
	}
	if !IsNil(o.CanWithdraw) {
		toSerialize["canWithdraw"] = o.CanWithdraw
	}
	if !IsNil(o.DualSidePosition) {
		toSerialize["dualSidePosition"] = o.DualSidePosition
	}
	if !IsNil(o.FeeTier) {
		toSerialize["feeTier"] = o.FeeTier
	}
	if !IsNil(o.MultiAssetsMargin) {
		toSerialize["multiAssetsMargin"] = o.MultiAssetsMargin
	}
	if !IsNil(o.TradeGroupId) {
		toSerialize["tradeGroupId"] = o.TradeGroupId
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return toSerialize, nil
}

type NullableGetAccountConfigV1Resp struct {
	value *GetAccountConfigV1Resp
	isSet bool
}

func (v NullableGetAccountConfigV1Resp) Get() *GetAccountConfigV1Resp {
	return v.value
}

func (v *NullableGetAccountConfigV1Resp) Set(val *GetAccountConfigV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccountConfigV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccountConfigV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccountConfigV1Resp(val *GetAccountConfigV1Resp) *NullableGetAccountConfigV1Resp {
	return &NullableGetAccountConfigV1Resp{value: val, isSet: true}
}

func (v NullableGetAccountConfigV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccountConfigV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


