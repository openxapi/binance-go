/*
Binance USD-M Futures API

OpenAPI specification for Binance exchange - Umfutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package umfutures

import (
	"encoding/json"
)

// checks if the UmfuturesGetApiTradingStatusV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UmfuturesGetApiTradingStatusV1Resp{}

// UmfuturesGetApiTradingStatusV1Resp struct for UmfuturesGetApiTradingStatusV1Resp
type UmfuturesGetApiTradingStatusV1Resp struct {
	Indicators map[string]interface{} `json:"indicators,omitempty"`
	UpdateTime *int64 `json:"updateTime,omitempty"`
}

// NewUmfuturesGetApiTradingStatusV1Resp instantiates a new UmfuturesGetApiTradingStatusV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUmfuturesGetApiTradingStatusV1Resp() *UmfuturesGetApiTradingStatusV1Resp {
	this := UmfuturesGetApiTradingStatusV1Resp{}
	return &this
}

// NewUmfuturesGetApiTradingStatusV1RespWithDefaults instantiates a new UmfuturesGetApiTradingStatusV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUmfuturesGetApiTradingStatusV1RespWithDefaults() *UmfuturesGetApiTradingStatusV1Resp {
	this := UmfuturesGetApiTradingStatusV1Resp{}
	return &this
}

// GetIndicators returns the Indicators field value if set, zero value otherwise.
func (o *UmfuturesGetApiTradingStatusV1Resp) GetIndicators() map[string]interface{} {
	if o == nil || IsNil(o.Indicators) {
		var ret map[string]interface{}
		return ret
	}
	return o.Indicators
}

// GetIndicatorsOk returns a tuple with the Indicators field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetApiTradingStatusV1Resp) GetIndicatorsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Indicators) {
		return map[string]interface{}{}, false
	}
	return o.Indicators, true
}

// HasIndicators returns a boolean if a field has been set.
func (o *UmfuturesGetApiTradingStatusV1Resp) HasIndicators() bool {
	if o != nil && !IsNil(o.Indicators) {
		return true
	}

	return false
}

// SetIndicators gets a reference to the given map[string]interface{} and assigns it to the Indicators field.
func (o *UmfuturesGetApiTradingStatusV1Resp) SetIndicators(v map[string]interface{}) {
	o.Indicators = v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *UmfuturesGetApiTradingStatusV1Resp) GetUpdateTime() int64 {
	if o == nil || IsNil(o.UpdateTime) {
		var ret int64
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetApiTradingStatusV1Resp) GetUpdateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *UmfuturesGetApiTradingStatusV1Resp) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given int64 and assigns it to the UpdateTime field.
func (o *UmfuturesGetApiTradingStatusV1Resp) SetUpdateTime(v int64) {
	o.UpdateTime = &v
}

func (o UmfuturesGetApiTradingStatusV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UmfuturesGetApiTradingStatusV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Indicators) {
		toSerialize["indicators"] = o.Indicators
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return toSerialize, nil
}

type NullableUmfuturesGetApiTradingStatusV1Resp struct {
	value *UmfuturesGetApiTradingStatusV1Resp
	isSet bool
}

func (v NullableUmfuturesGetApiTradingStatusV1Resp) Get() *UmfuturesGetApiTradingStatusV1Resp {
	return v.value
}

func (v *NullableUmfuturesGetApiTradingStatusV1Resp) Set(val *UmfuturesGetApiTradingStatusV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableUmfuturesGetApiTradingStatusV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableUmfuturesGetApiTradingStatusV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUmfuturesGetApiTradingStatusV1Resp(val *UmfuturesGetApiTradingStatusV1Resp) *NullableUmfuturesGetApiTradingStatusV1Resp {
	return &NullableUmfuturesGetApiTradingStatusV1Resp{value: val, isSet: true}
}

func (v NullableUmfuturesGetApiTradingStatusV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUmfuturesGetApiTradingStatusV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


