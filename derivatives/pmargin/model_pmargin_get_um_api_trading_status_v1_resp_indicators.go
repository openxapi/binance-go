/*
Binance Pmargin API

OpenAPI specification for Binance cryptocurrency exchange - Pmargin API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package pmargin

import (
	"encoding/json"
)

// checks if the PmarginGetUmApiTradingStatusV1RespIndicators type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PmarginGetUmApiTradingStatusV1RespIndicators{}

// PmarginGetUmApiTradingStatusV1RespIndicators struct for PmarginGetUmApiTradingStatusV1RespIndicators
type PmarginGetUmApiTradingStatusV1RespIndicators struct {
	BTCUSDT []PmarginGetUmApiTradingStatusV1RespIndicatorsBTCUSDTInner `json:"BTCUSDT,omitempty"`
}

// NewPmarginGetUmApiTradingStatusV1RespIndicators instantiates a new PmarginGetUmApiTradingStatusV1RespIndicators object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPmarginGetUmApiTradingStatusV1RespIndicators() *PmarginGetUmApiTradingStatusV1RespIndicators {
	this := PmarginGetUmApiTradingStatusV1RespIndicators{}
	return &this
}

// NewPmarginGetUmApiTradingStatusV1RespIndicatorsWithDefaults instantiates a new PmarginGetUmApiTradingStatusV1RespIndicators object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPmarginGetUmApiTradingStatusV1RespIndicatorsWithDefaults() *PmarginGetUmApiTradingStatusV1RespIndicators {
	this := PmarginGetUmApiTradingStatusV1RespIndicators{}
	return &this
}

// GetBTCUSDT returns the BTCUSDT field value if set, zero value otherwise.
func (o *PmarginGetUmApiTradingStatusV1RespIndicators) GetBTCUSDT() []PmarginGetUmApiTradingStatusV1RespIndicatorsBTCUSDTInner {
	if o == nil || IsNil(o.BTCUSDT) {
		var ret []PmarginGetUmApiTradingStatusV1RespIndicatorsBTCUSDTInner
		return ret
	}
	return o.BTCUSDT
}

// GetBTCUSDTOk returns a tuple with the BTCUSDT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PmarginGetUmApiTradingStatusV1RespIndicators) GetBTCUSDTOk() ([]PmarginGetUmApiTradingStatusV1RespIndicatorsBTCUSDTInner, bool) {
	if o == nil || IsNil(o.BTCUSDT) {
		return nil, false
	}
	return o.BTCUSDT, true
}

// HasBTCUSDT returns a boolean if a field has been set.
func (o *PmarginGetUmApiTradingStatusV1RespIndicators) HasBTCUSDT() bool {
	if o != nil && !IsNil(o.BTCUSDT) {
		return true
	}

	return false
}

// SetBTCUSDT gets a reference to the given []PmarginGetUmApiTradingStatusV1RespIndicatorsBTCUSDTInner and assigns it to the BTCUSDT field.
func (o *PmarginGetUmApiTradingStatusV1RespIndicators) SetBTCUSDT(v []PmarginGetUmApiTradingStatusV1RespIndicatorsBTCUSDTInner) {
	o.BTCUSDT = v
}

func (o PmarginGetUmApiTradingStatusV1RespIndicators) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PmarginGetUmApiTradingStatusV1RespIndicators) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BTCUSDT) {
		toSerialize["BTCUSDT"] = o.BTCUSDT
	}
	return toSerialize, nil
}

type NullablePmarginGetUmApiTradingStatusV1RespIndicators struct {
	value *PmarginGetUmApiTradingStatusV1RespIndicators
	isSet bool
}

func (v NullablePmarginGetUmApiTradingStatusV1RespIndicators) Get() *PmarginGetUmApiTradingStatusV1RespIndicators {
	return v.value
}

func (v *NullablePmarginGetUmApiTradingStatusV1RespIndicators) Set(val *PmarginGetUmApiTradingStatusV1RespIndicators) {
	v.value = val
	v.isSet = true
}

func (v NullablePmarginGetUmApiTradingStatusV1RespIndicators) IsSet() bool {
	return v.isSet
}

func (v *NullablePmarginGetUmApiTradingStatusV1RespIndicators) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePmarginGetUmApiTradingStatusV1RespIndicators(val *PmarginGetUmApiTradingStatusV1RespIndicators) *NullablePmarginGetUmApiTradingStatusV1RespIndicators {
	return &NullablePmarginGetUmApiTradingStatusV1RespIndicators{value: val, isSet: true}
}

func (v NullablePmarginGetUmApiTradingStatusV1RespIndicators) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePmarginGetUmApiTradingStatusV1RespIndicators) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


