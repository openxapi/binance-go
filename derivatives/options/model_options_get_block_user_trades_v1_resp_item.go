/*
Binance Options API

OpenAPI specification for Binance cryptocurrency exchange - Options API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the OptionsGetBlockUserTradesV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionsGetBlockUserTradesV1RespItem{}

// OptionsGetBlockUserTradesV1RespItem struct for OptionsGetBlockUserTradesV1RespItem
type OptionsGetBlockUserTradesV1RespItem struct {
	BlockTradeSettlementKey *string `json:"blockTradeSettlementKey,omitempty"`
	CrossType *string `json:"crossType,omitempty"`
	Legs []OptionsGetBlockUserTradesV1RespItemLegsInner `json:"legs,omitempty"`
	ParentOrderId *string `json:"parentOrderId,omitempty"`
}

// NewOptionsGetBlockUserTradesV1RespItem instantiates a new OptionsGetBlockUserTradesV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionsGetBlockUserTradesV1RespItem() *OptionsGetBlockUserTradesV1RespItem {
	this := OptionsGetBlockUserTradesV1RespItem{}
	return &this
}

// NewOptionsGetBlockUserTradesV1RespItemWithDefaults instantiates a new OptionsGetBlockUserTradesV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionsGetBlockUserTradesV1RespItemWithDefaults() *OptionsGetBlockUserTradesV1RespItem {
	this := OptionsGetBlockUserTradesV1RespItem{}
	return &this
}

// GetBlockTradeSettlementKey returns the BlockTradeSettlementKey field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItem) GetBlockTradeSettlementKey() string {
	if o == nil || IsNil(o.BlockTradeSettlementKey) {
		var ret string
		return ret
	}
	return *o.BlockTradeSettlementKey
}

// GetBlockTradeSettlementKeyOk returns a tuple with the BlockTradeSettlementKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItem) GetBlockTradeSettlementKeyOk() (*string, bool) {
	if o == nil || IsNil(o.BlockTradeSettlementKey) {
		return nil, false
	}
	return o.BlockTradeSettlementKey, true
}

// HasBlockTradeSettlementKey returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItem) HasBlockTradeSettlementKey() bool {
	if o != nil && !IsNil(o.BlockTradeSettlementKey) {
		return true
	}

	return false
}

// SetBlockTradeSettlementKey gets a reference to the given string and assigns it to the BlockTradeSettlementKey field.
func (o *OptionsGetBlockUserTradesV1RespItem) SetBlockTradeSettlementKey(v string) {
	o.BlockTradeSettlementKey = &v
}

// GetCrossType returns the CrossType field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItem) GetCrossType() string {
	if o == nil || IsNil(o.CrossType) {
		var ret string
		return ret
	}
	return *o.CrossType
}

// GetCrossTypeOk returns a tuple with the CrossType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItem) GetCrossTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CrossType) {
		return nil, false
	}
	return o.CrossType, true
}

// HasCrossType returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItem) HasCrossType() bool {
	if o != nil && !IsNil(o.CrossType) {
		return true
	}

	return false
}

// SetCrossType gets a reference to the given string and assigns it to the CrossType field.
func (o *OptionsGetBlockUserTradesV1RespItem) SetCrossType(v string) {
	o.CrossType = &v
}

// GetLegs returns the Legs field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItem) GetLegs() []OptionsGetBlockUserTradesV1RespItemLegsInner {
	if o == nil || IsNil(o.Legs) {
		var ret []OptionsGetBlockUserTradesV1RespItemLegsInner
		return ret
	}
	return o.Legs
}

// GetLegsOk returns a tuple with the Legs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItem) GetLegsOk() ([]OptionsGetBlockUserTradesV1RespItemLegsInner, bool) {
	if o == nil || IsNil(o.Legs) {
		return nil, false
	}
	return o.Legs, true
}

// HasLegs returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItem) HasLegs() bool {
	if o != nil && !IsNil(o.Legs) {
		return true
	}

	return false
}

// SetLegs gets a reference to the given []OptionsGetBlockUserTradesV1RespItemLegsInner and assigns it to the Legs field.
func (o *OptionsGetBlockUserTradesV1RespItem) SetLegs(v []OptionsGetBlockUserTradesV1RespItemLegsInner) {
	o.Legs = v
}

// GetParentOrderId returns the ParentOrderId field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItem) GetParentOrderId() string {
	if o == nil || IsNil(o.ParentOrderId) {
		var ret string
		return ret
	}
	return *o.ParentOrderId
}

// GetParentOrderIdOk returns a tuple with the ParentOrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItem) GetParentOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentOrderId) {
		return nil, false
	}
	return o.ParentOrderId, true
}

// HasParentOrderId returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItem) HasParentOrderId() bool {
	if o != nil && !IsNil(o.ParentOrderId) {
		return true
	}

	return false
}

// SetParentOrderId gets a reference to the given string and assigns it to the ParentOrderId field.
func (o *OptionsGetBlockUserTradesV1RespItem) SetParentOrderId(v string) {
	o.ParentOrderId = &v
}

func (o OptionsGetBlockUserTradesV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionsGetBlockUserTradesV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockTradeSettlementKey) {
		toSerialize["blockTradeSettlementKey"] = o.BlockTradeSettlementKey
	}
	if !IsNil(o.CrossType) {
		toSerialize["crossType"] = o.CrossType
	}
	if !IsNil(o.Legs) {
		toSerialize["legs"] = o.Legs
	}
	if !IsNil(o.ParentOrderId) {
		toSerialize["parentOrderId"] = o.ParentOrderId
	}
	return toSerialize, nil
}

type NullableOptionsGetBlockUserTradesV1RespItem struct {
	value *OptionsGetBlockUserTradesV1RespItem
	isSet bool
}

func (v NullableOptionsGetBlockUserTradesV1RespItem) Get() *OptionsGetBlockUserTradesV1RespItem {
	return v.value
}

func (v *NullableOptionsGetBlockUserTradesV1RespItem) Set(val *OptionsGetBlockUserTradesV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionsGetBlockUserTradesV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionsGetBlockUserTradesV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionsGetBlockUserTradesV1RespItem(val *OptionsGetBlockUserTradesV1RespItem) *NullableOptionsGetBlockUserTradesV1RespItem {
	return &NullableOptionsGetBlockUserTradesV1RespItem{value: val, isSet: true}
}

func (v NullableOptionsGetBlockUserTradesV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionsGetBlockUserTradesV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


