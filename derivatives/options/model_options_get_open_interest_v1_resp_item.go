/*
Binance Options API

OpenAPI specification for Binance cryptocurrency exchange - Options API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the OptionsGetOpenInterestV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionsGetOpenInterestV1RespItem{}

// OptionsGetOpenInterestV1RespItem struct for OptionsGetOpenInterestV1RespItem
type OptionsGetOpenInterestV1RespItem struct {
	SumOpenInterest *string `json:"sumOpenInterest,omitempty"`
	SumOpenInterestUsd *string `json:"sumOpenInterestUsd,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
}

// NewOptionsGetOpenInterestV1RespItem instantiates a new OptionsGetOpenInterestV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionsGetOpenInterestV1RespItem() *OptionsGetOpenInterestV1RespItem {
	this := OptionsGetOpenInterestV1RespItem{}
	return &this
}

// NewOptionsGetOpenInterestV1RespItemWithDefaults instantiates a new OptionsGetOpenInterestV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionsGetOpenInterestV1RespItemWithDefaults() *OptionsGetOpenInterestV1RespItem {
	this := OptionsGetOpenInterestV1RespItem{}
	return &this
}

// GetSumOpenInterest returns the SumOpenInterest field value if set, zero value otherwise.
func (o *OptionsGetOpenInterestV1RespItem) GetSumOpenInterest() string {
	if o == nil || IsNil(o.SumOpenInterest) {
		var ret string
		return ret
	}
	return *o.SumOpenInterest
}

// GetSumOpenInterestOk returns a tuple with the SumOpenInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetOpenInterestV1RespItem) GetSumOpenInterestOk() (*string, bool) {
	if o == nil || IsNil(o.SumOpenInterest) {
		return nil, false
	}
	return o.SumOpenInterest, true
}

// HasSumOpenInterest returns a boolean if a field has been set.
func (o *OptionsGetOpenInterestV1RespItem) HasSumOpenInterest() bool {
	if o != nil && !IsNil(o.SumOpenInterest) {
		return true
	}

	return false
}

// SetSumOpenInterest gets a reference to the given string and assigns it to the SumOpenInterest field.
func (o *OptionsGetOpenInterestV1RespItem) SetSumOpenInterest(v string) {
	o.SumOpenInterest = &v
}

// GetSumOpenInterestUsd returns the SumOpenInterestUsd field value if set, zero value otherwise.
func (o *OptionsGetOpenInterestV1RespItem) GetSumOpenInterestUsd() string {
	if o == nil || IsNil(o.SumOpenInterestUsd) {
		var ret string
		return ret
	}
	return *o.SumOpenInterestUsd
}

// GetSumOpenInterestUsdOk returns a tuple with the SumOpenInterestUsd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetOpenInterestV1RespItem) GetSumOpenInterestUsdOk() (*string, bool) {
	if o == nil || IsNil(o.SumOpenInterestUsd) {
		return nil, false
	}
	return o.SumOpenInterestUsd, true
}

// HasSumOpenInterestUsd returns a boolean if a field has been set.
func (o *OptionsGetOpenInterestV1RespItem) HasSumOpenInterestUsd() bool {
	if o != nil && !IsNil(o.SumOpenInterestUsd) {
		return true
	}

	return false
}

// SetSumOpenInterestUsd gets a reference to the given string and assigns it to the SumOpenInterestUsd field.
func (o *OptionsGetOpenInterestV1RespItem) SetSumOpenInterestUsd(v string) {
	o.SumOpenInterestUsd = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *OptionsGetOpenInterestV1RespItem) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetOpenInterestV1RespItem) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *OptionsGetOpenInterestV1RespItem) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *OptionsGetOpenInterestV1RespItem) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *OptionsGetOpenInterestV1RespItem) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetOpenInterestV1RespItem) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *OptionsGetOpenInterestV1RespItem) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *OptionsGetOpenInterestV1RespItem) SetTimestamp(v string) {
	o.Timestamp = &v
}

func (o OptionsGetOpenInterestV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionsGetOpenInterestV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SumOpenInterest) {
		toSerialize["sumOpenInterest"] = o.SumOpenInterest
	}
	if !IsNil(o.SumOpenInterestUsd) {
		toSerialize["sumOpenInterestUsd"] = o.SumOpenInterestUsd
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableOptionsGetOpenInterestV1RespItem struct {
	value *OptionsGetOpenInterestV1RespItem
	isSet bool
}

func (v NullableOptionsGetOpenInterestV1RespItem) Get() *OptionsGetOpenInterestV1RespItem {
	return v.value
}

func (v *NullableOptionsGetOpenInterestV1RespItem) Set(val *OptionsGetOpenInterestV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionsGetOpenInterestV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionsGetOpenInterestV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionsGetOpenInterestV1RespItem(val *OptionsGetOpenInterestV1RespItem) *NullableOptionsGetOpenInterestV1RespItem {
	return &NullableOptionsGetOpenInterestV1RespItem{value: val, isSet: true}
}

func (v NullableOptionsGetOpenInterestV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionsGetOpenInterestV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


