/*
Binance Options API

OpenAPI specification for Binance cryptocurrency exchange - Options API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the OptionsGetBlockUserTradesV1RespItemLegsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionsGetBlockUserTradesV1RespItemLegsInner{}

// OptionsGetBlockUserTradesV1RespItemLegsInner struct for OptionsGetBlockUserTradesV1RespItemLegsInner
type OptionsGetBlockUserTradesV1RespItemLegsInner struct {
	Commission *float32 `json:"commission,omitempty"`
	CreateTime *int64 `json:"createTime,omitempty"`
	ExecutedAmount *float32 `json:"executedAmount,omitempty"`
	ExecutedQty *float32 `json:"executedQty,omitempty"`
	Fee *float32 `json:"fee,omitempty"`
	Id *string `json:"id,omitempty"`
	Liquidity *string `json:"liquidity,omitempty"`
	OrderId *string `json:"orderId,omitempty"`
	OrderPrice *float32 `json:"orderPrice,omitempty"`
	OrderQuantity *float32 `json:"orderQuantity,omitempty"`
	OrderSide *string `json:"orderSide,omitempty"`
	OrderStatus *string `json:"orderStatus,omitempty"`
	OrderType *string `json:"orderType,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	TradeId *int64 `json:"tradeId,omitempty"`
	TradePrice *float32 `json:"tradePrice,omitempty"`
	TradeQty *float32 `json:"tradeQty,omitempty"`
	TradeTime *int64 `json:"tradeTime,omitempty"`
	UpdateTime *int64 `json:"updateTime,omitempty"`
}

// NewOptionsGetBlockUserTradesV1RespItemLegsInner instantiates a new OptionsGetBlockUserTradesV1RespItemLegsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionsGetBlockUserTradesV1RespItemLegsInner() *OptionsGetBlockUserTradesV1RespItemLegsInner {
	this := OptionsGetBlockUserTradesV1RespItemLegsInner{}
	return &this
}

// NewOptionsGetBlockUserTradesV1RespItemLegsInnerWithDefaults instantiates a new OptionsGetBlockUserTradesV1RespItemLegsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionsGetBlockUserTradesV1RespItemLegsInnerWithDefaults() *OptionsGetBlockUserTradesV1RespItemLegsInner {
	this := OptionsGetBlockUserTradesV1RespItemLegsInner{}
	return &this
}

// GetCommission returns the Commission field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetCommission() float32 {
	if o == nil || IsNil(o.Commission) {
		var ret float32
		return ret
	}
	return *o.Commission
}

// GetCommissionOk returns a tuple with the Commission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetCommissionOk() (*float32, bool) {
	if o == nil || IsNil(o.Commission) {
		return nil, false
	}
	return o.Commission, true
}

// HasCommission returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasCommission() bool {
	if o != nil && !IsNil(o.Commission) {
		return true
	}

	return false
}

// SetCommission gets a reference to the given float32 and assigns it to the Commission field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetCommission(v float32) {
	o.Commission = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime) {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetCreateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetExecutedAmount returns the ExecutedAmount field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetExecutedAmount() float32 {
	if o == nil || IsNil(o.ExecutedAmount) {
		var ret float32
		return ret
	}
	return *o.ExecutedAmount
}

// GetExecutedAmountOk returns a tuple with the ExecutedAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetExecutedAmountOk() (*float32, bool) {
	if o == nil || IsNil(o.ExecutedAmount) {
		return nil, false
	}
	return o.ExecutedAmount, true
}

// HasExecutedAmount returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasExecutedAmount() bool {
	if o != nil && !IsNil(o.ExecutedAmount) {
		return true
	}

	return false
}

// SetExecutedAmount gets a reference to the given float32 and assigns it to the ExecutedAmount field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetExecutedAmount(v float32) {
	o.ExecutedAmount = &v
}

// GetExecutedQty returns the ExecutedQty field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetExecutedQty() float32 {
	if o == nil || IsNil(o.ExecutedQty) {
		var ret float32
		return ret
	}
	return *o.ExecutedQty
}

// GetExecutedQtyOk returns a tuple with the ExecutedQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetExecutedQtyOk() (*float32, bool) {
	if o == nil || IsNil(o.ExecutedQty) {
		return nil, false
	}
	return o.ExecutedQty, true
}

// HasExecutedQty returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasExecutedQty() bool {
	if o != nil && !IsNil(o.ExecutedQty) {
		return true
	}

	return false
}

// SetExecutedQty gets a reference to the given float32 and assigns it to the ExecutedQty field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetExecutedQty(v float32) {
	o.ExecutedQty = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetFee() float32 {
	if o == nil || IsNil(o.Fee) {
		var ret float32
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given float32 and assigns it to the Fee field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetFee(v float32) {
	o.Fee = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetId(v string) {
	o.Id = &v
}

// GetLiquidity returns the Liquidity field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetLiquidity() string {
	if o == nil || IsNil(o.Liquidity) {
		var ret string
		return ret
	}
	return *o.Liquidity
}

// GetLiquidityOk returns a tuple with the Liquidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetLiquidityOk() (*string, bool) {
	if o == nil || IsNil(o.Liquidity) {
		return nil, false
	}
	return o.Liquidity, true
}

// HasLiquidity returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasLiquidity() bool {
	if o != nil && !IsNil(o.Liquidity) {
		return true
	}

	return false
}

// SetLiquidity gets a reference to the given string and assigns it to the Liquidity field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetLiquidity(v string) {
	o.Liquidity = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetOrderId(v string) {
	o.OrderId = &v
}

// GetOrderPrice returns the OrderPrice field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetOrderPrice() float32 {
	if o == nil || IsNil(o.OrderPrice) {
		var ret float32
		return ret
	}
	return *o.OrderPrice
}

// GetOrderPriceOk returns a tuple with the OrderPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetOrderPriceOk() (*float32, bool) {
	if o == nil || IsNil(o.OrderPrice) {
		return nil, false
	}
	return o.OrderPrice, true
}

// HasOrderPrice returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasOrderPrice() bool {
	if o != nil && !IsNil(o.OrderPrice) {
		return true
	}

	return false
}

// SetOrderPrice gets a reference to the given float32 and assigns it to the OrderPrice field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetOrderPrice(v float32) {
	o.OrderPrice = &v
}

// GetOrderQuantity returns the OrderQuantity field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetOrderQuantity() float32 {
	if o == nil || IsNil(o.OrderQuantity) {
		var ret float32
		return ret
	}
	return *o.OrderQuantity
}

// GetOrderQuantityOk returns a tuple with the OrderQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetOrderQuantityOk() (*float32, bool) {
	if o == nil || IsNil(o.OrderQuantity) {
		return nil, false
	}
	return o.OrderQuantity, true
}

// HasOrderQuantity returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasOrderQuantity() bool {
	if o != nil && !IsNil(o.OrderQuantity) {
		return true
	}

	return false
}

// SetOrderQuantity gets a reference to the given float32 and assigns it to the OrderQuantity field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetOrderQuantity(v float32) {
	o.OrderQuantity = &v
}

// GetOrderSide returns the OrderSide field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetOrderSide() string {
	if o == nil || IsNil(o.OrderSide) {
		var ret string
		return ret
	}
	return *o.OrderSide
}

// GetOrderSideOk returns a tuple with the OrderSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetOrderSideOk() (*string, bool) {
	if o == nil || IsNil(o.OrderSide) {
		return nil, false
	}
	return o.OrderSide, true
}

// HasOrderSide returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasOrderSide() bool {
	if o != nil && !IsNil(o.OrderSide) {
		return true
	}

	return false
}

// SetOrderSide gets a reference to the given string and assigns it to the OrderSide field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetOrderSide(v string) {
	o.OrderSide = &v
}

// GetOrderStatus returns the OrderStatus field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetOrderStatus() string {
	if o == nil || IsNil(o.OrderStatus) {
		var ret string
		return ret
	}
	return *o.OrderStatus
}

// GetOrderStatusOk returns a tuple with the OrderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetOrderStatusOk() (*string, bool) {
	if o == nil || IsNil(o.OrderStatus) {
		return nil, false
	}
	return o.OrderStatus, true
}

// HasOrderStatus returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasOrderStatus() bool {
	if o != nil && !IsNil(o.OrderStatus) {
		return true
	}

	return false
}

// SetOrderStatus gets a reference to the given string and assigns it to the OrderStatus field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetOrderStatus(v string) {
	o.OrderStatus = &v
}

// GetOrderType returns the OrderType field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetOrderType() string {
	if o == nil || IsNil(o.OrderType) {
		var ret string
		return ret
	}
	return *o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetOrderTypeOk() (*string, bool) {
	if o == nil || IsNil(o.OrderType) {
		return nil, false
	}
	return o.OrderType, true
}

// HasOrderType returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasOrderType() bool {
	if o != nil && !IsNil(o.OrderType) {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given string and assigns it to the OrderType field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetOrderType(v string) {
	o.OrderType = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTradeId returns the TradeId field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetTradeId() int64 {
	if o == nil || IsNil(o.TradeId) {
		var ret int64
		return ret
	}
	return *o.TradeId
}

// GetTradeIdOk returns a tuple with the TradeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetTradeIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TradeId) {
		return nil, false
	}
	return o.TradeId, true
}

// HasTradeId returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasTradeId() bool {
	if o != nil && !IsNil(o.TradeId) {
		return true
	}

	return false
}

// SetTradeId gets a reference to the given int64 and assigns it to the TradeId field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetTradeId(v int64) {
	o.TradeId = &v
}

// GetTradePrice returns the TradePrice field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetTradePrice() float32 {
	if o == nil || IsNil(o.TradePrice) {
		var ret float32
		return ret
	}
	return *o.TradePrice
}

// GetTradePriceOk returns a tuple with the TradePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetTradePriceOk() (*float32, bool) {
	if o == nil || IsNil(o.TradePrice) {
		return nil, false
	}
	return o.TradePrice, true
}

// HasTradePrice returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasTradePrice() bool {
	if o != nil && !IsNil(o.TradePrice) {
		return true
	}

	return false
}

// SetTradePrice gets a reference to the given float32 and assigns it to the TradePrice field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetTradePrice(v float32) {
	o.TradePrice = &v
}

// GetTradeQty returns the TradeQty field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetTradeQty() float32 {
	if o == nil || IsNil(o.TradeQty) {
		var ret float32
		return ret
	}
	return *o.TradeQty
}

// GetTradeQtyOk returns a tuple with the TradeQty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetTradeQtyOk() (*float32, bool) {
	if o == nil || IsNil(o.TradeQty) {
		return nil, false
	}
	return o.TradeQty, true
}

// HasTradeQty returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasTradeQty() bool {
	if o != nil && !IsNil(o.TradeQty) {
		return true
	}

	return false
}

// SetTradeQty gets a reference to the given float32 and assigns it to the TradeQty field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetTradeQty(v float32) {
	o.TradeQty = &v
}

// GetTradeTime returns the TradeTime field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetTradeTime() int64 {
	if o == nil || IsNil(o.TradeTime) {
		var ret int64
		return ret
	}
	return *o.TradeTime
}

// GetTradeTimeOk returns a tuple with the TradeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetTradeTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.TradeTime) {
		return nil, false
	}
	return o.TradeTime, true
}

// HasTradeTime returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasTradeTime() bool {
	if o != nil && !IsNil(o.TradeTime) {
		return true
	}

	return false
}

// SetTradeTime gets a reference to the given int64 and assigns it to the TradeTime field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetTradeTime(v int64) {
	o.TradeTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetUpdateTime() int64 {
	if o == nil || IsNil(o.UpdateTime) {
		var ret int64
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) GetUpdateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdateTime) {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) HasUpdateTime() bool {
	if o != nil && !IsNil(o.UpdateTime) {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given int64 and assigns it to the UpdateTime field.
func (o *OptionsGetBlockUserTradesV1RespItemLegsInner) SetUpdateTime(v int64) {
	o.UpdateTime = &v
}

func (o OptionsGetBlockUserTradesV1RespItemLegsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionsGetBlockUserTradesV1RespItemLegsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Commission) {
		toSerialize["commission"] = o.Commission
	}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.ExecutedAmount) {
		toSerialize["executedAmount"] = o.ExecutedAmount
	}
	if !IsNil(o.ExecutedQty) {
		toSerialize["executedQty"] = o.ExecutedQty
	}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Liquidity) {
		toSerialize["liquidity"] = o.Liquidity
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.OrderPrice) {
		toSerialize["orderPrice"] = o.OrderPrice
	}
	if !IsNil(o.OrderQuantity) {
		toSerialize["orderQuantity"] = o.OrderQuantity
	}
	if !IsNil(o.OrderSide) {
		toSerialize["orderSide"] = o.OrderSide
	}
	if !IsNil(o.OrderStatus) {
		toSerialize["orderStatus"] = o.OrderStatus
	}
	if !IsNil(o.OrderType) {
		toSerialize["orderType"] = o.OrderType
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.TradeId) {
		toSerialize["tradeId"] = o.TradeId
	}
	if !IsNil(o.TradePrice) {
		toSerialize["tradePrice"] = o.TradePrice
	}
	if !IsNil(o.TradeQty) {
		toSerialize["tradeQty"] = o.TradeQty
	}
	if !IsNil(o.TradeTime) {
		toSerialize["tradeTime"] = o.TradeTime
	}
	if !IsNil(o.UpdateTime) {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return toSerialize, nil
}

type NullableOptionsGetBlockUserTradesV1RespItemLegsInner struct {
	value *OptionsGetBlockUserTradesV1RespItemLegsInner
	isSet bool
}

func (v NullableOptionsGetBlockUserTradesV1RespItemLegsInner) Get() *OptionsGetBlockUserTradesV1RespItemLegsInner {
	return v.value
}

func (v *NullableOptionsGetBlockUserTradesV1RespItemLegsInner) Set(val *OptionsGetBlockUserTradesV1RespItemLegsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionsGetBlockUserTradesV1RespItemLegsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionsGetBlockUserTradesV1RespItemLegsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionsGetBlockUserTradesV1RespItemLegsInner(val *OptionsGetBlockUserTradesV1RespItemLegsInner) *NullableOptionsGetBlockUserTradesV1RespItemLegsInner {
	return &NullableOptionsGetBlockUserTradesV1RespItemLegsInner{value: val, isSet: true}
}

func (v NullableOptionsGetBlockUserTradesV1RespItemLegsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionsGetBlockUserTradesV1RespItemLegsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


