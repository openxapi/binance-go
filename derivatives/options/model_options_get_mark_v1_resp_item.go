/*
Binance Options API

OpenAPI specification for Binance cryptocurrency exchange - Options API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the OptionsGetMarkV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionsGetMarkV1RespItem{}

// OptionsGetMarkV1RespItem struct for OptionsGetMarkV1RespItem
type OptionsGetMarkV1RespItem struct {
	AskIV *string `json:"askIV,omitempty"`
	BidIV *string `json:"bidIV,omitempty"`
	Delta *string `json:"delta,omitempty"`
	Gamma *string `json:"gamma,omitempty"`
	HighPriceLimit *string `json:"highPriceLimit,omitempty"`
	LowPriceLimit *string `json:"lowPriceLimit,omitempty"`
	MarkIV *string `json:"markIV,omitempty"`
	MarkPrice *string `json:"markPrice,omitempty"`
	RiskFreeInterest *string `json:"riskFreeInterest,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	Theta *string `json:"theta,omitempty"`
	Vega *string `json:"vega,omitempty"`
}

// NewOptionsGetMarkV1RespItem instantiates a new OptionsGetMarkV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionsGetMarkV1RespItem() *OptionsGetMarkV1RespItem {
	this := OptionsGetMarkV1RespItem{}
	return &this
}

// NewOptionsGetMarkV1RespItemWithDefaults instantiates a new OptionsGetMarkV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionsGetMarkV1RespItemWithDefaults() *OptionsGetMarkV1RespItem {
	this := OptionsGetMarkV1RespItem{}
	return &this
}

// GetAskIV returns the AskIV field value if set, zero value otherwise.
func (o *OptionsGetMarkV1RespItem) GetAskIV() string {
	if o == nil || IsNil(o.AskIV) {
		var ret string
		return ret
	}
	return *o.AskIV
}

// GetAskIVOk returns a tuple with the AskIV field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetMarkV1RespItem) GetAskIVOk() (*string, bool) {
	if o == nil || IsNil(o.AskIV) {
		return nil, false
	}
	return o.AskIV, true
}

// HasAskIV returns a boolean if a field has been set.
func (o *OptionsGetMarkV1RespItem) HasAskIV() bool {
	if o != nil && !IsNil(o.AskIV) {
		return true
	}

	return false
}

// SetAskIV gets a reference to the given string and assigns it to the AskIV field.
func (o *OptionsGetMarkV1RespItem) SetAskIV(v string) {
	o.AskIV = &v
}

// GetBidIV returns the BidIV field value if set, zero value otherwise.
func (o *OptionsGetMarkV1RespItem) GetBidIV() string {
	if o == nil || IsNil(o.BidIV) {
		var ret string
		return ret
	}
	return *o.BidIV
}

// GetBidIVOk returns a tuple with the BidIV field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetMarkV1RespItem) GetBidIVOk() (*string, bool) {
	if o == nil || IsNil(o.BidIV) {
		return nil, false
	}
	return o.BidIV, true
}

// HasBidIV returns a boolean if a field has been set.
func (o *OptionsGetMarkV1RespItem) HasBidIV() bool {
	if o != nil && !IsNil(o.BidIV) {
		return true
	}

	return false
}

// SetBidIV gets a reference to the given string and assigns it to the BidIV field.
func (o *OptionsGetMarkV1RespItem) SetBidIV(v string) {
	o.BidIV = &v
}

// GetDelta returns the Delta field value if set, zero value otherwise.
func (o *OptionsGetMarkV1RespItem) GetDelta() string {
	if o == nil || IsNil(o.Delta) {
		var ret string
		return ret
	}
	return *o.Delta
}

// GetDeltaOk returns a tuple with the Delta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetMarkV1RespItem) GetDeltaOk() (*string, bool) {
	if o == nil || IsNil(o.Delta) {
		return nil, false
	}
	return o.Delta, true
}

// HasDelta returns a boolean if a field has been set.
func (o *OptionsGetMarkV1RespItem) HasDelta() bool {
	if o != nil && !IsNil(o.Delta) {
		return true
	}

	return false
}

// SetDelta gets a reference to the given string and assigns it to the Delta field.
func (o *OptionsGetMarkV1RespItem) SetDelta(v string) {
	o.Delta = &v
}

// GetGamma returns the Gamma field value if set, zero value otherwise.
func (o *OptionsGetMarkV1RespItem) GetGamma() string {
	if o == nil || IsNil(o.Gamma) {
		var ret string
		return ret
	}
	return *o.Gamma
}

// GetGammaOk returns a tuple with the Gamma field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetMarkV1RespItem) GetGammaOk() (*string, bool) {
	if o == nil || IsNil(o.Gamma) {
		return nil, false
	}
	return o.Gamma, true
}

// HasGamma returns a boolean if a field has been set.
func (o *OptionsGetMarkV1RespItem) HasGamma() bool {
	if o != nil && !IsNil(o.Gamma) {
		return true
	}

	return false
}

// SetGamma gets a reference to the given string and assigns it to the Gamma field.
func (o *OptionsGetMarkV1RespItem) SetGamma(v string) {
	o.Gamma = &v
}

// GetHighPriceLimit returns the HighPriceLimit field value if set, zero value otherwise.
func (o *OptionsGetMarkV1RespItem) GetHighPriceLimit() string {
	if o == nil || IsNil(o.HighPriceLimit) {
		var ret string
		return ret
	}
	return *o.HighPriceLimit
}

// GetHighPriceLimitOk returns a tuple with the HighPriceLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetMarkV1RespItem) GetHighPriceLimitOk() (*string, bool) {
	if o == nil || IsNil(o.HighPriceLimit) {
		return nil, false
	}
	return o.HighPriceLimit, true
}

// HasHighPriceLimit returns a boolean if a field has been set.
func (o *OptionsGetMarkV1RespItem) HasHighPriceLimit() bool {
	if o != nil && !IsNil(o.HighPriceLimit) {
		return true
	}

	return false
}

// SetHighPriceLimit gets a reference to the given string and assigns it to the HighPriceLimit field.
func (o *OptionsGetMarkV1RespItem) SetHighPriceLimit(v string) {
	o.HighPriceLimit = &v
}

// GetLowPriceLimit returns the LowPriceLimit field value if set, zero value otherwise.
func (o *OptionsGetMarkV1RespItem) GetLowPriceLimit() string {
	if o == nil || IsNil(o.LowPriceLimit) {
		var ret string
		return ret
	}
	return *o.LowPriceLimit
}

// GetLowPriceLimitOk returns a tuple with the LowPriceLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetMarkV1RespItem) GetLowPriceLimitOk() (*string, bool) {
	if o == nil || IsNil(o.LowPriceLimit) {
		return nil, false
	}
	return o.LowPriceLimit, true
}

// HasLowPriceLimit returns a boolean if a field has been set.
func (o *OptionsGetMarkV1RespItem) HasLowPriceLimit() bool {
	if o != nil && !IsNil(o.LowPriceLimit) {
		return true
	}

	return false
}

// SetLowPriceLimit gets a reference to the given string and assigns it to the LowPriceLimit field.
func (o *OptionsGetMarkV1RespItem) SetLowPriceLimit(v string) {
	o.LowPriceLimit = &v
}

// GetMarkIV returns the MarkIV field value if set, zero value otherwise.
func (o *OptionsGetMarkV1RespItem) GetMarkIV() string {
	if o == nil || IsNil(o.MarkIV) {
		var ret string
		return ret
	}
	return *o.MarkIV
}

// GetMarkIVOk returns a tuple with the MarkIV field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetMarkV1RespItem) GetMarkIVOk() (*string, bool) {
	if o == nil || IsNil(o.MarkIV) {
		return nil, false
	}
	return o.MarkIV, true
}

// HasMarkIV returns a boolean if a field has been set.
func (o *OptionsGetMarkV1RespItem) HasMarkIV() bool {
	if o != nil && !IsNil(o.MarkIV) {
		return true
	}

	return false
}

// SetMarkIV gets a reference to the given string and assigns it to the MarkIV field.
func (o *OptionsGetMarkV1RespItem) SetMarkIV(v string) {
	o.MarkIV = &v
}

// GetMarkPrice returns the MarkPrice field value if set, zero value otherwise.
func (o *OptionsGetMarkV1RespItem) GetMarkPrice() string {
	if o == nil || IsNil(o.MarkPrice) {
		var ret string
		return ret
	}
	return *o.MarkPrice
}

// GetMarkPriceOk returns a tuple with the MarkPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetMarkV1RespItem) GetMarkPriceOk() (*string, bool) {
	if o == nil || IsNil(o.MarkPrice) {
		return nil, false
	}
	return o.MarkPrice, true
}

// HasMarkPrice returns a boolean if a field has been set.
func (o *OptionsGetMarkV1RespItem) HasMarkPrice() bool {
	if o != nil && !IsNil(o.MarkPrice) {
		return true
	}

	return false
}

// SetMarkPrice gets a reference to the given string and assigns it to the MarkPrice field.
func (o *OptionsGetMarkV1RespItem) SetMarkPrice(v string) {
	o.MarkPrice = &v
}

// GetRiskFreeInterest returns the RiskFreeInterest field value if set, zero value otherwise.
func (o *OptionsGetMarkV1RespItem) GetRiskFreeInterest() string {
	if o == nil || IsNil(o.RiskFreeInterest) {
		var ret string
		return ret
	}
	return *o.RiskFreeInterest
}

// GetRiskFreeInterestOk returns a tuple with the RiskFreeInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetMarkV1RespItem) GetRiskFreeInterestOk() (*string, bool) {
	if o == nil || IsNil(o.RiskFreeInterest) {
		return nil, false
	}
	return o.RiskFreeInterest, true
}

// HasRiskFreeInterest returns a boolean if a field has been set.
func (o *OptionsGetMarkV1RespItem) HasRiskFreeInterest() bool {
	if o != nil && !IsNil(o.RiskFreeInterest) {
		return true
	}

	return false
}

// SetRiskFreeInterest gets a reference to the given string and assigns it to the RiskFreeInterest field.
func (o *OptionsGetMarkV1RespItem) SetRiskFreeInterest(v string) {
	o.RiskFreeInterest = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *OptionsGetMarkV1RespItem) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetMarkV1RespItem) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *OptionsGetMarkV1RespItem) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *OptionsGetMarkV1RespItem) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTheta returns the Theta field value if set, zero value otherwise.
func (o *OptionsGetMarkV1RespItem) GetTheta() string {
	if o == nil || IsNil(o.Theta) {
		var ret string
		return ret
	}
	return *o.Theta
}

// GetThetaOk returns a tuple with the Theta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetMarkV1RespItem) GetThetaOk() (*string, bool) {
	if o == nil || IsNil(o.Theta) {
		return nil, false
	}
	return o.Theta, true
}

// HasTheta returns a boolean if a field has been set.
func (o *OptionsGetMarkV1RespItem) HasTheta() bool {
	if o != nil && !IsNil(o.Theta) {
		return true
	}

	return false
}

// SetTheta gets a reference to the given string and assigns it to the Theta field.
func (o *OptionsGetMarkV1RespItem) SetTheta(v string) {
	o.Theta = &v
}

// GetVega returns the Vega field value if set, zero value otherwise.
func (o *OptionsGetMarkV1RespItem) GetVega() string {
	if o == nil || IsNil(o.Vega) {
		var ret string
		return ret
	}
	return *o.Vega
}

// GetVegaOk returns a tuple with the Vega field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetMarkV1RespItem) GetVegaOk() (*string, bool) {
	if o == nil || IsNil(o.Vega) {
		return nil, false
	}
	return o.Vega, true
}

// HasVega returns a boolean if a field has been set.
func (o *OptionsGetMarkV1RespItem) HasVega() bool {
	if o != nil && !IsNil(o.Vega) {
		return true
	}

	return false
}

// SetVega gets a reference to the given string and assigns it to the Vega field.
func (o *OptionsGetMarkV1RespItem) SetVega(v string) {
	o.Vega = &v
}

func (o OptionsGetMarkV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionsGetMarkV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AskIV) {
		toSerialize["askIV"] = o.AskIV
	}
	if !IsNil(o.BidIV) {
		toSerialize["bidIV"] = o.BidIV
	}
	if !IsNil(o.Delta) {
		toSerialize["delta"] = o.Delta
	}
	if !IsNil(o.Gamma) {
		toSerialize["gamma"] = o.Gamma
	}
	if !IsNil(o.HighPriceLimit) {
		toSerialize["highPriceLimit"] = o.HighPriceLimit
	}
	if !IsNil(o.LowPriceLimit) {
		toSerialize["lowPriceLimit"] = o.LowPriceLimit
	}
	if !IsNil(o.MarkIV) {
		toSerialize["markIV"] = o.MarkIV
	}
	if !IsNil(o.MarkPrice) {
		toSerialize["markPrice"] = o.MarkPrice
	}
	if !IsNil(o.RiskFreeInterest) {
		toSerialize["riskFreeInterest"] = o.RiskFreeInterest
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.Theta) {
		toSerialize["theta"] = o.Theta
	}
	if !IsNil(o.Vega) {
		toSerialize["vega"] = o.Vega
	}
	return toSerialize, nil
}

type NullableOptionsGetMarkV1RespItem struct {
	value *OptionsGetMarkV1RespItem
	isSet bool
}

func (v NullableOptionsGetMarkV1RespItem) Get() *OptionsGetMarkV1RespItem {
	return v.value
}

func (v *NullableOptionsGetMarkV1RespItem) Set(val *OptionsGetMarkV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionsGetMarkV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionsGetMarkV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionsGetMarkV1RespItem(val *OptionsGetMarkV1RespItem) *NullableOptionsGetMarkV1RespItem {
	return &NullableOptionsGetMarkV1RespItem{value: val, isSet: true}
}

func (v NullableOptionsGetMarkV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionsGetMarkV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


