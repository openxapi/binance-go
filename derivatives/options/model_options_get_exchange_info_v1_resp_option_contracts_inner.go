/*
Binance Options API

OpenAPI specification for Binance exchange - Options API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the OptionsGetExchangeInfoV1RespOptionContractsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionsGetExchangeInfoV1RespOptionContractsInner{}

// OptionsGetExchangeInfoV1RespOptionContractsInner struct for OptionsGetExchangeInfoV1RespOptionContractsInner
type OptionsGetExchangeInfoV1RespOptionContractsInner struct {
	BaseAsset *string `json:"baseAsset,omitempty"`
	QuoteAsset *string `json:"quoteAsset,omitempty"`
	SettleAsset *string `json:"settleAsset,omitempty"`
	Underlying *string `json:"underlying,omitempty"`
}

// NewOptionsGetExchangeInfoV1RespOptionContractsInner instantiates a new OptionsGetExchangeInfoV1RespOptionContractsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionsGetExchangeInfoV1RespOptionContractsInner() *OptionsGetExchangeInfoV1RespOptionContractsInner {
	this := OptionsGetExchangeInfoV1RespOptionContractsInner{}
	return &this
}

// NewOptionsGetExchangeInfoV1RespOptionContractsInnerWithDefaults instantiates a new OptionsGetExchangeInfoV1RespOptionContractsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionsGetExchangeInfoV1RespOptionContractsInnerWithDefaults() *OptionsGetExchangeInfoV1RespOptionContractsInner {
	this := OptionsGetExchangeInfoV1RespOptionContractsInner{}
	return &this
}

// GetBaseAsset returns the BaseAsset field value if set, zero value otherwise.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) GetBaseAsset() string {
	if o == nil || IsNil(o.BaseAsset) {
		var ret string
		return ret
	}
	return *o.BaseAsset
}

// GetBaseAssetOk returns a tuple with the BaseAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) GetBaseAssetOk() (*string, bool) {
	if o == nil || IsNil(o.BaseAsset) {
		return nil, false
	}
	return o.BaseAsset, true
}

// HasBaseAsset returns a boolean if a field has been set.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) HasBaseAsset() bool {
	if o != nil && !IsNil(o.BaseAsset) {
		return true
	}

	return false
}

// SetBaseAsset gets a reference to the given string and assigns it to the BaseAsset field.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) SetBaseAsset(v string) {
	o.BaseAsset = &v
}

// GetQuoteAsset returns the QuoteAsset field value if set, zero value otherwise.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) GetQuoteAsset() string {
	if o == nil || IsNil(o.QuoteAsset) {
		var ret string
		return ret
	}
	return *o.QuoteAsset
}

// GetQuoteAssetOk returns a tuple with the QuoteAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) GetQuoteAssetOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteAsset) {
		return nil, false
	}
	return o.QuoteAsset, true
}

// HasQuoteAsset returns a boolean if a field has been set.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) HasQuoteAsset() bool {
	if o != nil && !IsNil(o.QuoteAsset) {
		return true
	}

	return false
}

// SetQuoteAsset gets a reference to the given string and assigns it to the QuoteAsset field.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) SetQuoteAsset(v string) {
	o.QuoteAsset = &v
}

// GetSettleAsset returns the SettleAsset field value if set, zero value otherwise.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) GetSettleAsset() string {
	if o == nil || IsNil(o.SettleAsset) {
		var ret string
		return ret
	}
	return *o.SettleAsset
}

// GetSettleAssetOk returns a tuple with the SettleAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) GetSettleAssetOk() (*string, bool) {
	if o == nil || IsNil(o.SettleAsset) {
		return nil, false
	}
	return o.SettleAsset, true
}

// HasSettleAsset returns a boolean if a field has been set.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) HasSettleAsset() bool {
	if o != nil && !IsNil(o.SettleAsset) {
		return true
	}

	return false
}

// SetSettleAsset gets a reference to the given string and assigns it to the SettleAsset field.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) SetSettleAsset(v string) {
	o.SettleAsset = &v
}

// GetUnderlying returns the Underlying field value if set, zero value otherwise.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) GetUnderlying() string {
	if o == nil || IsNil(o.Underlying) {
		var ret string
		return ret
	}
	return *o.Underlying
}

// GetUnderlyingOk returns a tuple with the Underlying field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) GetUnderlyingOk() (*string, bool) {
	if o == nil || IsNil(o.Underlying) {
		return nil, false
	}
	return o.Underlying, true
}

// HasUnderlying returns a boolean if a field has been set.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) HasUnderlying() bool {
	if o != nil && !IsNil(o.Underlying) {
		return true
	}

	return false
}

// SetUnderlying gets a reference to the given string and assigns it to the Underlying field.
func (o *OptionsGetExchangeInfoV1RespOptionContractsInner) SetUnderlying(v string) {
	o.Underlying = &v
}

func (o OptionsGetExchangeInfoV1RespOptionContractsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionsGetExchangeInfoV1RespOptionContractsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseAsset) {
		toSerialize["baseAsset"] = o.BaseAsset
	}
	if !IsNil(o.QuoteAsset) {
		toSerialize["quoteAsset"] = o.QuoteAsset
	}
	if !IsNil(o.SettleAsset) {
		toSerialize["settleAsset"] = o.SettleAsset
	}
	if !IsNil(o.Underlying) {
		toSerialize["underlying"] = o.Underlying
	}
	return toSerialize, nil
}

type NullableOptionsGetExchangeInfoV1RespOptionContractsInner struct {
	value *OptionsGetExchangeInfoV1RespOptionContractsInner
	isSet bool
}

func (v NullableOptionsGetExchangeInfoV1RespOptionContractsInner) Get() *OptionsGetExchangeInfoV1RespOptionContractsInner {
	return v.value
}

func (v *NullableOptionsGetExchangeInfoV1RespOptionContractsInner) Set(val *OptionsGetExchangeInfoV1RespOptionContractsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionsGetExchangeInfoV1RespOptionContractsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionsGetExchangeInfoV1RespOptionContractsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionsGetExchangeInfoV1RespOptionContractsInner(val *OptionsGetExchangeInfoV1RespOptionContractsInner) *NullableOptionsGetExchangeInfoV1RespOptionContractsInner {
	return &NullableOptionsGetExchangeInfoV1RespOptionContractsInner{value: val, isSet: true}
}

func (v NullableOptionsGetExchangeInfoV1RespOptionContractsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionsGetExchangeInfoV1RespOptionContractsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


