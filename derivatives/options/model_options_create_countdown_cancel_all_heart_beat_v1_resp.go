/*
Binance Options API

OpenAPI specification for Binance exchange - Options API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the OptionsCreateCountdownCancelAllHeartBeatV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionsCreateCountdownCancelAllHeartBeatV1Resp{}

// OptionsCreateCountdownCancelAllHeartBeatV1Resp struct for OptionsCreateCountdownCancelAllHeartBeatV1Resp
type OptionsCreateCountdownCancelAllHeartBeatV1Resp struct {
	Underlyings []string `json:"underlyings,omitempty"`
}

// NewOptionsCreateCountdownCancelAllHeartBeatV1Resp instantiates a new OptionsCreateCountdownCancelAllHeartBeatV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionsCreateCountdownCancelAllHeartBeatV1Resp() *OptionsCreateCountdownCancelAllHeartBeatV1Resp {
	this := OptionsCreateCountdownCancelAllHeartBeatV1Resp{}
	return &this
}

// NewOptionsCreateCountdownCancelAllHeartBeatV1RespWithDefaults instantiates a new OptionsCreateCountdownCancelAllHeartBeatV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionsCreateCountdownCancelAllHeartBeatV1RespWithDefaults() *OptionsCreateCountdownCancelAllHeartBeatV1Resp {
	this := OptionsCreateCountdownCancelAllHeartBeatV1Resp{}
	return &this
}

// GetUnderlyings returns the Underlyings field value if set, zero value otherwise.
func (o *OptionsCreateCountdownCancelAllHeartBeatV1Resp) GetUnderlyings() []string {
	if o == nil || IsNil(o.Underlyings) {
		var ret []string
		return ret
	}
	return o.Underlyings
}

// GetUnderlyingsOk returns a tuple with the Underlyings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsCreateCountdownCancelAllHeartBeatV1Resp) GetUnderlyingsOk() ([]string, bool) {
	if o == nil || IsNil(o.Underlyings) {
		return nil, false
	}
	return o.Underlyings, true
}

// HasUnderlyings returns a boolean if a field has been set.
func (o *OptionsCreateCountdownCancelAllHeartBeatV1Resp) HasUnderlyings() bool {
	if o != nil && !IsNil(o.Underlyings) {
		return true
	}

	return false
}

// SetUnderlyings gets a reference to the given []string and assigns it to the Underlyings field.
func (o *OptionsCreateCountdownCancelAllHeartBeatV1Resp) SetUnderlyings(v []string) {
	o.Underlyings = v
}

func (o OptionsCreateCountdownCancelAllHeartBeatV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionsCreateCountdownCancelAllHeartBeatV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Underlyings) {
		toSerialize["underlyings"] = o.Underlyings
	}
	return toSerialize, nil
}

type NullableOptionsCreateCountdownCancelAllHeartBeatV1Resp struct {
	value *OptionsCreateCountdownCancelAllHeartBeatV1Resp
	isSet bool
}

func (v NullableOptionsCreateCountdownCancelAllHeartBeatV1Resp) Get() *OptionsCreateCountdownCancelAllHeartBeatV1Resp {
	return v.value
}

func (v *NullableOptionsCreateCountdownCancelAllHeartBeatV1Resp) Set(val *OptionsCreateCountdownCancelAllHeartBeatV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionsCreateCountdownCancelAllHeartBeatV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionsCreateCountdownCancelAllHeartBeatV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionsCreateCountdownCancelAllHeartBeatV1Resp(val *OptionsCreateCountdownCancelAllHeartBeatV1Resp) *NullableOptionsCreateCountdownCancelAllHeartBeatV1Resp {
	return &NullableOptionsCreateCountdownCancelAllHeartBeatV1Resp{value: val, isSet: true}
}

func (v NullableOptionsCreateCountdownCancelAllHeartBeatV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionsCreateCountdownCancelAllHeartBeatV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


