/*
Binance Options API

OpenAPI specification for Binance exchange - Options API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the OptionsGetBillV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionsGetBillV1RespItem{}

// OptionsGetBillV1RespItem struct for OptionsGetBillV1RespItem
type OptionsGetBillV1RespItem struct {
	Amount *string `json:"amount,omitempty"`
	Asset *string `json:"asset,omitempty"`
	CreateDate *int32 `json:"createDate,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewOptionsGetBillV1RespItem instantiates a new OptionsGetBillV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionsGetBillV1RespItem() *OptionsGetBillV1RespItem {
	this := OptionsGetBillV1RespItem{}
	return &this
}

// NewOptionsGetBillV1RespItemWithDefaults instantiates a new OptionsGetBillV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionsGetBillV1RespItemWithDefaults() *OptionsGetBillV1RespItem {
	this := OptionsGetBillV1RespItem{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *OptionsGetBillV1RespItem) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBillV1RespItem) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *OptionsGetBillV1RespItem) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *OptionsGetBillV1RespItem) SetAmount(v string) {
	o.Amount = &v
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *OptionsGetBillV1RespItem) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBillV1RespItem) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *OptionsGetBillV1RespItem) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *OptionsGetBillV1RespItem) SetAsset(v string) {
	o.Asset = &v
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *OptionsGetBillV1RespItem) GetCreateDate() int32 {
	if o == nil || IsNil(o.CreateDate) {
		var ret int32
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBillV1RespItem) GetCreateDateOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateDate) {
		return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *OptionsGetBillV1RespItem) HasCreateDate() bool {
	if o != nil && !IsNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given int32 and assigns it to the CreateDate field.
func (o *OptionsGetBillV1RespItem) SetCreateDate(v int32) {
	o.CreateDate = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OptionsGetBillV1RespItem) GetId() int32 {
	if o == nil || IsNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBillV1RespItem) GetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OptionsGetBillV1RespItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *OptionsGetBillV1RespItem) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *OptionsGetBillV1RespItem) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetBillV1RespItem) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *OptionsGetBillV1RespItem) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *OptionsGetBillV1RespItem) SetType(v string) {
	o.Type = &v
}

func (o OptionsGetBillV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionsGetBillV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.CreateDate) {
		toSerialize["createDate"] = o.CreateDate
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableOptionsGetBillV1RespItem struct {
	value *OptionsGetBillV1RespItem
	isSet bool
}

func (v NullableOptionsGetBillV1RespItem) Get() *OptionsGetBillV1RespItem {
	return v.value
}

func (v *NullableOptionsGetBillV1RespItem) Set(val *OptionsGetBillV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionsGetBillV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionsGetBillV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionsGetBillV1RespItem(val *OptionsGetBillV1RespItem) *NullableOptionsGetBillV1RespItem {
	return &NullableOptionsGetBillV1RespItem{value: val, isSet: true}
}

func (v NullableOptionsGetBillV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionsGetBillV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


