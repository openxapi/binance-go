/*
Binance Options API

OpenAPI specification for Binance cryptocurrency exchange - Options API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package options

import (
	"encoding/json"
)

// checks if the OptionsGetExerciseRecordV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OptionsGetExerciseRecordV1RespItem{}

// OptionsGetExerciseRecordV1RespItem struct for OptionsGetExerciseRecordV1RespItem
type OptionsGetExerciseRecordV1RespItem struct {
	Amount *string `json:"amount,omitempty"`
	CreateDate *int32 `json:"createDate,omitempty"`
	Currency *string `json:"currency,omitempty"`
	ExercisePrice *string `json:"exercisePrice,omitempty"`
	Fee *string `json:"fee,omitempty"`
	Id *string `json:"id,omitempty"`
	MarkPrice *string `json:"markPrice,omitempty"`
	OptionSide *string `json:"optionSide,omitempty"`
	PositionSide *string `json:"positionSide,omitempty"`
	PriceScale *int32 `json:"priceScale,omitempty"`
	Quantity *string `json:"quantity,omitempty"`
	QuantityScale *int32 `json:"quantityScale,omitempty"`
	QuoteAsset *string `json:"quoteAsset,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
}

// NewOptionsGetExerciseRecordV1RespItem instantiates a new OptionsGetExerciseRecordV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOptionsGetExerciseRecordV1RespItem() *OptionsGetExerciseRecordV1RespItem {
	this := OptionsGetExerciseRecordV1RespItem{}
	return &this
}

// NewOptionsGetExerciseRecordV1RespItemWithDefaults instantiates a new OptionsGetExerciseRecordV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOptionsGetExerciseRecordV1RespItemWithDefaults() *OptionsGetExerciseRecordV1RespItem {
	this := OptionsGetExerciseRecordV1RespItem{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetAmount() string {
	if o == nil || IsNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetAmountOk() (*string, bool) {
	if o == nil || IsNil(o.Amount) {
		return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasAmount() bool {
	if o != nil && !IsNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *OptionsGetExerciseRecordV1RespItem) SetAmount(v string) {
	o.Amount = &v
}

// GetCreateDate returns the CreateDate field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetCreateDate() int32 {
	if o == nil || IsNil(o.CreateDate) {
		var ret int32
		return ret
	}
	return *o.CreateDate
}

// GetCreateDateOk returns a tuple with the CreateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetCreateDateOk() (*int32, bool) {
	if o == nil || IsNil(o.CreateDate) {
		return nil, false
	}
	return o.CreateDate, true
}

// HasCreateDate returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasCreateDate() bool {
	if o != nil && !IsNil(o.CreateDate) {
		return true
	}

	return false
}

// SetCreateDate gets a reference to the given int32 and assigns it to the CreateDate field.
func (o *OptionsGetExerciseRecordV1RespItem) SetCreateDate(v int32) {
	o.CreateDate = &v
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *OptionsGetExerciseRecordV1RespItem) SetCurrency(v string) {
	o.Currency = &v
}

// GetExercisePrice returns the ExercisePrice field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetExercisePrice() string {
	if o == nil || IsNil(o.ExercisePrice) {
		var ret string
		return ret
	}
	return *o.ExercisePrice
}

// GetExercisePriceOk returns a tuple with the ExercisePrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetExercisePriceOk() (*string, bool) {
	if o == nil || IsNil(o.ExercisePrice) {
		return nil, false
	}
	return o.ExercisePrice, true
}

// HasExercisePrice returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasExercisePrice() bool {
	if o != nil && !IsNil(o.ExercisePrice) {
		return true
	}

	return false
}

// SetExercisePrice gets a reference to the given string and assigns it to the ExercisePrice field.
func (o *OptionsGetExerciseRecordV1RespItem) SetExercisePrice(v string) {
	o.ExercisePrice = &v
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetFee() string {
	if o == nil || IsNil(o.Fee) {
		var ret string
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetFeeOk() (*string, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given string and assigns it to the Fee field.
func (o *OptionsGetExerciseRecordV1RespItem) SetFee(v string) {
	o.Fee = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OptionsGetExerciseRecordV1RespItem) SetId(v string) {
	o.Id = &v
}

// GetMarkPrice returns the MarkPrice field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetMarkPrice() string {
	if o == nil || IsNil(o.MarkPrice) {
		var ret string
		return ret
	}
	return *o.MarkPrice
}

// GetMarkPriceOk returns a tuple with the MarkPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetMarkPriceOk() (*string, bool) {
	if o == nil || IsNil(o.MarkPrice) {
		return nil, false
	}
	return o.MarkPrice, true
}

// HasMarkPrice returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasMarkPrice() bool {
	if o != nil && !IsNil(o.MarkPrice) {
		return true
	}

	return false
}

// SetMarkPrice gets a reference to the given string and assigns it to the MarkPrice field.
func (o *OptionsGetExerciseRecordV1RespItem) SetMarkPrice(v string) {
	o.MarkPrice = &v
}

// GetOptionSide returns the OptionSide field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetOptionSide() string {
	if o == nil || IsNil(o.OptionSide) {
		var ret string
		return ret
	}
	return *o.OptionSide
}

// GetOptionSideOk returns a tuple with the OptionSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetOptionSideOk() (*string, bool) {
	if o == nil || IsNil(o.OptionSide) {
		return nil, false
	}
	return o.OptionSide, true
}

// HasOptionSide returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasOptionSide() bool {
	if o != nil && !IsNil(o.OptionSide) {
		return true
	}

	return false
}

// SetOptionSide gets a reference to the given string and assigns it to the OptionSide field.
func (o *OptionsGetExerciseRecordV1RespItem) SetOptionSide(v string) {
	o.OptionSide = &v
}

// GetPositionSide returns the PositionSide field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetPositionSide() string {
	if o == nil || IsNil(o.PositionSide) {
		var ret string
		return ret
	}
	return *o.PositionSide
}

// GetPositionSideOk returns a tuple with the PositionSide field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetPositionSideOk() (*string, bool) {
	if o == nil || IsNil(o.PositionSide) {
		return nil, false
	}
	return o.PositionSide, true
}

// HasPositionSide returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasPositionSide() bool {
	if o != nil && !IsNil(o.PositionSide) {
		return true
	}

	return false
}

// SetPositionSide gets a reference to the given string and assigns it to the PositionSide field.
func (o *OptionsGetExerciseRecordV1RespItem) SetPositionSide(v string) {
	o.PositionSide = &v
}

// GetPriceScale returns the PriceScale field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetPriceScale() int32 {
	if o == nil || IsNil(o.PriceScale) {
		var ret int32
		return ret
	}
	return *o.PriceScale
}

// GetPriceScaleOk returns a tuple with the PriceScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetPriceScaleOk() (*int32, bool) {
	if o == nil || IsNil(o.PriceScale) {
		return nil, false
	}
	return o.PriceScale, true
}

// HasPriceScale returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasPriceScale() bool {
	if o != nil && !IsNil(o.PriceScale) {
		return true
	}

	return false
}

// SetPriceScale gets a reference to the given int32 and assigns it to the PriceScale field.
func (o *OptionsGetExerciseRecordV1RespItem) SetPriceScale(v int32) {
	o.PriceScale = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetQuantity() string {
	if o == nil || IsNil(o.Quantity) {
		var ret string
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetQuantityOk() (*string, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given string and assigns it to the Quantity field.
func (o *OptionsGetExerciseRecordV1RespItem) SetQuantity(v string) {
	o.Quantity = &v
}

// GetQuantityScale returns the QuantityScale field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetQuantityScale() int32 {
	if o == nil || IsNil(o.QuantityScale) {
		var ret int32
		return ret
	}
	return *o.QuantityScale
}

// GetQuantityScaleOk returns a tuple with the QuantityScale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetQuantityScaleOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityScale) {
		return nil, false
	}
	return o.QuantityScale, true
}

// HasQuantityScale returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasQuantityScale() bool {
	if o != nil && !IsNil(o.QuantityScale) {
		return true
	}

	return false
}

// SetQuantityScale gets a reference to the given int32 and assigns it to the QuantityScale field.
func (o *OptionsGetExerciseRecordV1RespItem) SetQuantityScale(v int32) {
	o.QuantityScale = &v
}

// GetQuoteAsset returns the QuoteAsset field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetQuoteAsset() string {
	if o == nil || IsNil(o.QuoteAsset) {
		var ret string
		return ret
	}
	return *o.QuoteAsset
}

// GetQuoteAssetOk returns a tuple with the QuoteAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetQuoteAssetOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteAsset) {
		return nil, false
	}
	return o.QuoteAsset, true
}

// HasQuoteAsset returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasQuoteAsset() bool {
	if o != nil && !IsNil(o.QuoteAsset) {
		return true
	}

	return false
}

// SetQuoteAsset gets a reference to the given string and assigns it to the QuoteAsset field.
func (o *OptionsGetExerciseRecordV1RespItem) SetQuoteAsset(v string) {
	o.QuoteAsset = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *OptionsGetExerciseRecordV1RespItem) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OptionsGetExerciseRecordV1RespItem) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *OptionsGetExerciseRecordV1RespItem) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *OptionsGetExerciseRecordV1RespItem) SetSymbol(v string) {
	o.Symbol = &v
}

func (o OptionsGetExerciseRecordV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OptionsGetExerciseRecordV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	if !IsNil(o.CreateDate) {
		toSerialize["createDate"] = o.CreateDate
	}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.ExercisePrice) {
		toSerialize["exercisePrice"] = o.ExercisePrice
	}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.MarkPrice) {
		toSerialize["markPrice"] = o.MarkPrice
	}
	if !IsNil(o.OptionSide) {
		toSerialize["optionSide"] = o.OptionSide
	}
	if !IsNil(o.PositionSide) {
		toSerialize["positionSide"] = o.PositionSide
	}
	if !IsNil(o.PriceScale) {
		toSerialize["priceScale"] = o.PriceScale
	}
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	if !IsNil(o.QuantityScale) {
		toSerialize["quantityScale"] = o.QuantityScale
	}
	if !IsNil(o.QuoteAsset) {
		toSerialize["quoteAsset"] = o.QuoteAsset
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	return toSerialize, nil
}

type NullableOptionsGetExerciseRecordV1RespItem struct {
	value *OptionsGetExerciseRecordV1RespItem
	isSet bool
}

func (v NullableOptionsGetExerciseRecordV1RespItem) Get() *OptionsGetExerciseRecordV1RespItem {
	return v.value
}

func (v *NullableOptionsGetExerciseRecordV1RespItem) Set(val *OptionsGetExerciseRecordV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableOptionsGetExerciseRecordV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableOptionsGetExerciseRecordV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOptionsGetExerciseRecordV1RespItem(val *OptionsGetExerciseRecordV1RespItem) *NullableOptionsGetExerciseRecordV1RespItem {
	return &NullableOptionsGetExerciseRecordV1RespItem{value: val, isSet: true}
}

func (v NullableOptionsGetExerciseRecordV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOptionsGetExerciseRecordV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


