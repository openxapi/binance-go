/*
Binance Cmfutures API

OpenAPI specification for Binance cryptocurrency exchange - Cmfutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cmfutures

import (
	"encoding/json"
)

// checks if the CmfuturesGetFuturesDataOpenInterestHistRespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CmfuturesGetFuturesDataOpenInterestHistRespItem{}

// CmfuturesGetFuturesDataOpenInterestHistRespItem struct for CmfuturesGetFuturesDataOpenInterestHistRespItem
type CmfuturesGetFuturesDataOpenInterestHistRespItem struct {
	ContractType *string `json:"contractType,omitempty"`
	Pair *string `json:"pair,omitempty"`
	SumOpenInterest *string `json:"sumOpenInterest,omitempty"`
	SumOpenInterestValue *string `json:"sumOpenInterestValue,omitempty"`
	Timestamp *int64 `json:"timestamp,omitempty"`
}

// NewCmfuturesGetFuturesDataOpenInterestHistRespItem instantiates a new CmfuturesGetFuturesDataOpenInterestHistRespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCmfuturesGetFuturesDataOpenInterestHistRespItem() *CmfuturesGetFuturesDataOpenInterestHistRespItem {
	this := CmfuturesGetFuturesDataOpenInterestHistRespItem{}
	return &this
}

// NewCmfuturesGetFuturesDataOpenInterestHistRespItemWithDefaults instantiates a new CmfuturesGetFuturesDataOpenInterestHistRespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCmfuturesGetFuturesDataOpenInterestHistRespItemWithDefaults() *CmfuturesGetFuturesDataOpenInterestHistRespItem {
	this := CmfuturesGetFuturesDataOpenInterestHistRespItem{}
	return &this
}

// GetContractType returns the ContractType field value if set, zero value otherwise.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) GetContractType() string {
	if o == nil || IsNil(o.ContractType) {
		var ret string
		return ret
	}
	return *o.ContractType
}

// GetContractTypeOk returns a tuple with the ContractType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) GetContractTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContractType) {
		return nil, false
	}
	return o.ContractType, true
}

// HasContractType returns a boolean if a field has been set.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) HasContractType() bool {
	if o != nil && !IsNil(o.ContractType) {
		return true
	}

	return false
}

// SetContractType gets a reference to the given string and assigns it to the ContractType field.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) SetContractType(v string) {
	o.ContractType = &v
}

// GetPair returns the Pair field value if set, zero value otherwise.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) GetPair() string {
	if o == nil || IsNil(o.Pair) {
		var ret string
		return ret
	}
	return *o.Pair
}

// GetPairOk returns a tuple with the Pair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) GetPairOk() (*string, bool) {
	if o == nil || IsNil(o.Pair) {
		return nil, false
	}
	return o.Pair, true
}

// HasPair returns a boolean if a field has been set.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) HasPair() bool {
	if o != nil && !IsNil(o.Pair) {
		return true
	}

	return false
}

// SetPair gets a reference to the given string and assigns it to the Pair field.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) SetPair(v string) {
	o.Pair = &v
}

// GetSumOpenInterest returns the SumOpenInterest field value if set, zero value otherwise.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) GetSumOpenInterest() string {
	if o == nil || IsNil(o.SumOpenInterest) {
		var ret string
		return ret
	}
	return *o.SumOpenInterest
}

// GetSumOpenInterestOk returns a tuple with the SumOpenInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) GetSumOpenInterestOk() (*string, bool) {
	if o == nil || IsNil(o.SumOpenInterest) {
		return nil, false
	}
	return o.SumOpenInterest, true
}

// HasSumOpenInterest returns a boolean if a field has been set.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) HasSumOpenInterest() bool {
	if o != nil && !IsNil(o.SumOpenInterest) {
		return true
	}

	return false
}

// SetSumOpenInterest gets a reference to the given string and assigns it to the SumOpenInterest field.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) SetSumOpenInterest(v string) {
	o.SumOpenInterest = &v
}

// GetSumOpenInterestValue returns the SumOpenInterestValue field value if set, zero value otherwise.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) GetSumOpenInterestValue() string {
	if o == nil || IsNil(o.SumOpenInterestValue) {
		var ret string
		return ret
	}
	return *o.SumOpenInterestValue
}

// GetSumOpenInterestValueOk returns a tuple with the SumOpenInterestValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) GetSumOpenInterestValueOk() (*string, bool) {
	if o == nil || IsNil(o.SumOpenInterestValue) {
		return nil, false
	}
	return o.SumOpenInterestValue, true
}

// HasSumOpenInterestValue returns a boolean if a field has been set.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) HasSumOpenInterestValue() bool {
	if o != nil && !IsNil(o.SumOpenInterestValue) {
		return true
	}

	return false
}

// SetSumOpenInterestValue gets a reference to the given string and assigns it to the SumOpenInterestValue field.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) SetSumOpenInterestValue(v string) {
	o.SumOpenInterestValue = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) GetTimestamp() int64 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int64
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) GetTimestampOk() (*int64, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int64 and assigns it to the Timestamp field.
func (o *CmfuturesGetFuturesDataOpenInterestHistRespItem) SetTimestamp(v int64) {
	o.Timestamp = &v
}

func (o CmfuturesGetFuturesDataOpenInterestHistRespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CmfuturesGetFuturesDataOpenInterestHistRespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContractType) {
		toSerialize["contractType"] = o.ContractType
	}
	if !IsNil(o.Pair) {
		toSerialize["pair"] = o.Pair
	}
	if !IsNil(o.SumOpenInterest) {
		toSerialize["sumOpenInterest"] = o.SumOpenInterest
	}
	if !IsNil(o.SumOpenInterestValue) {
		toSerialize["sumOpenInterestValue"] = o.SumOpenInterestValue
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableCmfuturesGetFuturesDataOpenInterestHistRespItem struct {
	value *CmfuturesGetFuturesDataOpenInterestHistRespItem
	isSet bool
}

func (v NullableCmfuturesGetFuturesDataOpenInterestHistRespItem) Get() *CmfuturesGetFuturesDataOpenInterestHistRespItem {
	return v.value
}

func (v *NullableCmfuturesGetFuturesDataOpenInterestHistRespItem) Set(val *CmfuturesGetFuturesDataOpenInterestHistRespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCmfuturesGetFuturesDataOpenInterestHistRespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCmfuturesGetFuturesDataOpenInterestHistRespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCmfuturesGetFuturesDataOpenInterestHistRespItem(val *CmfuturesGetFuturesDataOpenInterestHistRespItem) *NullableCmfuturesGetFuturesDataOpenInterestHistRespItem {
	return &NullableCmfuturesGetFuturesDataOpenInterestHistRespItem{value: val, isSet: true}
}

func (v NullableCmfuturesGetFuturesDataOpenInterestHistRespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCmfuturesGetFuturesDataOpenInterestHistRespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


