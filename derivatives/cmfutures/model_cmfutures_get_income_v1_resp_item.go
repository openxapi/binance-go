/*
Binance Cmfutures API

OpenAPI specification for Binance cryptocurrency exchange - Cmfutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cmfutures

import (
	"encoding/json"
)

// checks if the CmfuturesGetIncomeV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CmfuturesGetIncomeV1RespItem{}

// CmfuturesGetIncomeV1RespItem struct for CmfuturesGetIncomeV1RespItem
type CmfuturesGetIncomeV1RespItem struct {
	Asset *string `json:"asset,omitempty"`
	Income *string `json:"income,omitempty"`
	IncomeType *string `json:"incomeType,omitempty"`
	Info *string `json:"info,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	Time *int64 `json:"time,omitempty"`
	TradeId *string `json:"tradeId,omitempty"`
	TranId *string `json:"tranId,omitempty"`
}

// NewCmfuturesGetIncomeV1RespItem instantiates a new CmfuturesGetIncomeV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCmfuturesGetIncomeV1RespItem() *CmfuturesGetIncomeV1RespItem {
	this := CmfuturesGetIncomeV1RespItem{}
	return &this
}

// NewCmfuturesGetIncomeV1RespItemWithDefaults instantiates a new CmfuturesGetIncomeV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCmfuturesGetIncomeV1RespItemWithDefaults() *CmfuturesGetIncomeV1RespItem {
	this := CmfuturesGetIncomeV1RespItem{}
	return &this
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *CmfuturesGetIncomeV1RespItem) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetIncomeV1RespItem) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *CmfuturesGetIncomeV1RespItem) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *CmfuturesGetIncomeV1RespItem) SetAsset(v string) {
	o.Asset = &v
}

// GetIncome returns the Income field value if set, zero value otherwise.
func (o *CmfuturesGetIncomeV1RespItem) GetIncome() string {
	if o == nil || IsNil(o.Income) {
		var ret string
		return ret
	}
	return *o.Income
}

// GetIncomeOk returns a tuple with the Income field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetIncomeV1RespItem) GetIncomeOk() (*string, bool) {
	if o == nil || IsNil(o.Income) {
		return nil, false
	}
	return o.Income, true
}

// HasIncome returns a boolean if a field has been set.
func (o *CmfuturesGetIncomeV1RespItem) HasIncome() bool {
	if o != nil && !IsNil(o.Income) {
		return true
	}

	return false
}

// SetIncome gets a reference to the given string and assigns it to the Income field.
func (o *CmfuturesGetIncomeV1RespItem) SetIncome(v string) {
	o.Income = &v
}

// GetIncomeType returns the IncomeType field value if set, zero value otherwise.
func (o *CmfuturesGetIncomeV1RespItem) GetIncomeType() string {
	if o == nil || IsNil(o.IncomeType) {
		var ret string
		return ret
	}
	return *o.IncomeType
}

// GetIncomeTypeOk returns a tuple with the IncomeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetIncomeV1RespItem) GetIncomeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.IncomeType) {
		return nil, false
	}
	return o.IncomeType, true
}

// HasIncomeType returns a boolean if a field has been set.
func (o *CmfuturesGetIncomeV1RespItem) HasIncomeType() bool {
	if o != nil && !IsNil(o.IncomeType) {
		return true
	}

	return false
}

// SetIncomeType gets a reference to the given string and assigns it to the IncomeType field.
func (o *CmfuturesGetIncomeV1RespItem) SetIncomeType(v string) {
	o.IncomeType = &v
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *CmfuturesGetIncomeV1RespItem) GetInfo() string {
	if o == nil || IsNil(o.Info) {
		var ret string
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetIncomeV1RespItem) GetInfoOk() (*string, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *CmfuturesGetIncomeV1RespItem) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given string and assigns it to the Info field.
func (o *CmfuturesGetIncomeV1RespItem) SetInfo(v string) {
	o.Info = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *CmfuturesGetIncomeV1RespItem) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetIncomeV1RespItem) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *CmfuturesGetIncomeV1RespItem) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *CmfuturesGetIncomeV1RespItem) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *CmfuturesGetIncomeV1RespItem) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetIncomeV1RespItem) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *CmfuturesGetIncomeV1RespItem) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *CmfuturesGetIncomeV1RespItem) SetTime(v int64) {
	o.Time = &v
}

// GetTradeId returns the TradeId field value if set, zero value otherwise.
func (o *CmfuturesGetIncomeV1RespItem) GetTradeId() string {
	if o == nil || IsNil(o.TradeId) {
		var ret string
		return ret
	}
	return *o.TradeId
}

// GetTradeIdOk returns a tuple with the TradeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetIncomeV1RespItem) GetTradeIdOk() (*string, bool) {
	if o == nil || IsNil(o.TradeId) {
		return nil, false
	}
	return o.TradeId, true
}

// HasTradeId returns a boolean if a field has been set.
func (o *CmfuturesGetIncomeV1RespItem) HasTradeId() bool {
	if o != nil && !IsNil(o.TradeId) {
		return true
	}

	return false
}

// SetTradeId gets a reference to the given string and assigns it to the TradeId field.
func (o *CmfuturesGetIncomeV1RespItem) SetTradeId(v string) {
	o.TradeId = &v
}

// GetTranId returns the TranId field value if set, zero value otherwise.
func (o *CmfuturesGetIncomeV1RespItem) GetTranId() string {
	if o == nil || IsNil(o.TranId) {
		var ret string
		return ret
	}
	return *o.TranId
}

// GetTranIdOk returns a tuple with the TranId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetIncomeV1RespItem) GetTranIdOk() (*string, bool) {
	if o == nil || IsNil(o.TranId) {
		return nil, false
	}
	return o.TranId, true
}

// HasTranId returns a boolean if a field has been set.
func (o *CmfuturesGetIncomeV1RespItem) HasTranId() bool {
	if o != nil && !IsNil(o.TranId) {
		return true
	}

	return false
}

// SetTranId gets a reference to the given string and assigns it to the TranId field.
func (o *CmfuturesGetIncomeV1RespItem) SetTranId(v string) {
	o.TranId = &v
}

func (o CmfuturesGetIncomeV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CmfuturesGetIncomeV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.Income) {
		toSerialize["income"] = o.Income
	}
	if !IsNil(o.IncomeType) {
		toSerialize["incomeType"] = o.IncomeType
	}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.TradeId) {
		toSerialize["tradeId"] = o.TradeId
	}
	if !IsNil(o.TranId) {
		toSerialize["tranId"] = o.TranId
	}
	return toSerialize, nil
}

type NullableCmfuturesGetIncomeV1RespItem struct {
	value *CmfuturesGetIncomeV1RespItem
	isSet bool
}

func (v NullableCmfuturesGetIncomeV1RespItem) Get() *CmfuturesGetIncomeV1RespItem {
	return v.value
}

func (v *NullableCmfuturesGetIncomeV1RespItem) Set(val *CmfuturesGetIncomeV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCmfuturesGetIncomeV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCmfuturesGetIncomeV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCmfuturesGetIncomeV1RespItem(val *CmfuturesGetIncomeV1RespItem) *NullableCmfuturesGetIncomeV1RespItem {
	return &NullableCmfuturesGetIncomeV1RespItem{value: val, isSet: true}
}

func (v NullableCmfuturesGetIncomeV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCmfuturesGetIncomeV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


