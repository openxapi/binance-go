/*
Binance Cfutures API

OpenAPI specification for Binance cryptocurrency exchange - Cfutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cmfutures

import (
	"encoding/json"
)

// checks if the CfuturesGetConstituentsV1RespConstituentsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CfuturesGetConstituentsV1RespConstituentsInner{}

// CfuturesGetConstituentsV1RespConstituentsInner struct for CfuturesGetConstituentsV1RespConstituentsInner
type CfuturesGetConstituentsV1RespConstituentsInner struct {
	Exchange *string `json:"exchange,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
}

// NewCfuturesGetConstituentsV1RespConstituentsInner instantiates a new CfuturesGetConstituentsV1RespConstituentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCfuturesGetConstituentsV1RespConstituentsInner() *CfuturesGetConstituentsV1RespConstituentsInner {
	this := CfuturesGetConstituentsV1RespConstituentsInner{}
	return &this
}

// NewCfuturesGetConstituentsV1RespConstituentsInnerWithDefaults instantiates a new CfuturesGetConstituentsV1RespConstituentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCfuturesGetConstituentsV1RespConstituentsInnerWithDefaults() *CfuturesGetConstituentsV1RespConstituentsInner {
	this := CfuturesGetConstituentsV1RespConstituentsInner{}
	return &this
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *CfuturesGetConstituentsV1RespConstituentsInner) GetExchange() string {
	if o == nil || IsNil(o.Exchange) {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfuturesGetConstituentsV1RespConstituentsInner) GetExchangeOk() (*string, bool) {
	if o == nil || IsNil(o.Exchange) {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *CfuturesGetConstituentsV1RespConstituentsInner) HasExchange() bool {
	if o != nil && !IsNil(o.Exchange) {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *CfuturesGetConstituentsV1RespConstituentsInner) SetExchange(v string) {
	o.Exchange = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *CfuturesGetConstituentsV1RespConstituentsInner) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfuturesGetConstituentsV1RespConstituentsInner) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *CfuturesGetConstituentsV1RespConstituentsInner) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *CfuturesGetConstituentsV1RespConstituentsInner) SetSymbol(v string) {
	o.Symbol = &v
}

func (o CfuturesGetConstituentsV1RespConstituentsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CfuturesGetConstituentsV1RespConstituentsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Exchange) {
		toSerialize["exchange"] = o.Exchange
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	return toSerialize, nil
}

type NullableCfuturesGetConstituentsV1RespConstituentsInner struct {
	value *CfuturesGetConstituentsV1RespConstituentsInner
	isSet bool
}

func (v NullableCfuturesGetConstituentsV1RespConstituentsInner) Get() *CfuturesGetConstituentsV1RespConstituentsInner {
	return v.value
}

func (v *NullableCfuturesGetConstituentsV1RespConstituentsInner) Set(val *CfuturesGetConstituentsV1RespConstituentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCfuturesGetConstituentsV1RespConstituentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCfuturesGetConstituentsV1RespConstituentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCfuturesGetConstituentsV1RespConstituentsInner(val *CfuturesGetConstituentsV1RespConstituentsInner) *NullableCfuturesGetConstituentsV1RespConstituentsInner {
	return &NullableCfuturesGetConstituentsV1RespConstituentsInner{value: val, isSet: true}
}

func (v NullableCfuturesGetConstituentsV1RespConstituentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCfuturesGetConstituentsV1RespConstituentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


