/*
Binance Cfutures API

OpenAPI specification for Binance cryptocurrency exchange - Cfutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cmfutures

import (
	"encoding/json"
)

// checks if the CfuturesGetDepthV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CfuturesGetDepthV1Resp{}

// CfuturesGetDepthV1Resp struct for CfuturesGetDepthV1Resp
type CfuturesGetDepthV1Resp struct {
	E *int32 `json:"E,omitempty"`
	T *int32 `json:"T,omitempty"`
	Asks [][]string `json:"asks,omitempty"`
	Bids [][]string `json:"bids,omitempty"`
	LastUpdateId *int64 `json:"lastUpdateId,omitempty"`
	Pair *string `json:"pair,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
}

// NewCfuturesGetDepthV1Resp instantiates a new CfuturesGetDepthV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCfuturesGetDepthV1Resp() *CfuturesGetDepthV1Resp {
	this := CfuturesGetDepthV1Resp{}
	return &this
}

// NewCfuturesGetDepthV1RespWithDefaults instantiates a new CfuturesGetDepthV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCfuturesGetDepthV1RespWithDefaults() *CfuturesGetDepthV1Resp {
	this := CfuturesGetDepthV1Resp{}
	return &this
}

// GetE returns the E field value if set, zero value otherwise.
func (o *CfuturesGetDepthV1Resp) GetE() int32 {
	if o == nil || IsNil(o.E) {
		var ret int32
		return ret
	}
	return *o.E
}

// GetEOk returns a tuple with the E field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfuturesGetDepthV1Resp) GetEOk() (*int32, bool) {
	if o == nil || IsNil(o.E) {
		return nil, false
	}
	return o.E, true
}

// HasE returns a boolean if a field has been set.
func (o *CfuturesGetDepthV1Resp) HasE() bool {
	if o != nil && !IsNil(o.E) {
		return true
	}

	return false
}

// SetE gets a reference to the given int32 and assigns it to the E field.
func (o *CfuturesGetDepthV1Resp) SetE(v int32) {
	o.E = &v
}

// GetT returns the T field value if set, zero value otherwise.
func (o *CfuturesGetDepthV1Resp) GetT() int32 {
	if o == nil || IsNil(o.T) {
		var ret int32
		return ret
	}
	return *o.T
}

// GetTOk returns a tuple with the T field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfuturesGetDepthV1Resp) GetTOk() (*int32, bool) {
	if o == nil || IsNil(o.T) {
		return nil, false
	}
	return o.T, true
}

// HasT returns a boolean if a field has been set.
func (o *CfuturesGetDepthV1Resp) HasT() bool {
	if o != nil && !IsNil(o.T) {
		return true
	}

	return false
}

// SetT gets a reference to the given int32 and assigns it to the T field.
func (o *CfuturesGetDepthV1Resp) SetT(v int32) {
	o.T = &v
}

// GetAsks returns the Asks field value if set, zero value otherwise.
func (o *CfuturesGetDepthV1Resp) GetAsks() [][]string {
	if o == nil || IsNil(o.Asks) {
		var ret [][]string
		return ret
	}
	return o.Asks
}

// GetAsksOk returns a tuple with the Asks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfuturesGetDepthV1Resp) GetAsksOk() ([][]string, bool) {
	if o == nil || IsNil(o.Asks) {
		return nil, false
	}
	return o.Asks, true
}

// HasAsks returns a boolean if a field has been set.
func (o *CfuturesGetDepthV1Resp) HasAsks() bool {
	if o != nil && !IsNil(o.Asks) {
		return true
	}

	return false
}

// SetAsks gets a reference to the given [][]string and assigns it to the Asks field.
func (o *CfuturesGetDepthV1Resp) SetAsks(v [][]string) {
	o.Asks = v
}

// GetBids returns the Bids field value if set, zero value otherwise.
func (o *CfuturesGetDepthV1Resp) GetBids() [][]string {
	if o == nil || IsNil(o.Bids) {
		var ret [][]string
		return ret
	}
	return o.Bids
}

// GetBidsOk returns a tuple with the Bids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfuturesGetDepthV1Resp) GetBidsOk() ([][]string, bool) {
	if o == nil || IsNil(o.Bids) {
		return nil, false
	}
	return o.Bids, true
}

// HasBids returns a boolean if a field has been set.
func (o *CfuturesGetDepthV1Resp) HasBids() bool {
	if o != nil && !IsNil(o.Bids) {
		return true
	}

	return false
}

// SetBids gets a reference to the given [][]string and assigns it to the Bids field.
func (o *CfuturesGetDepthV1Resp) SetBids(v [][]string) {
	o.Bids = v
}

// GetLastUpdateId returns the LastUpdateId field value if set, zero value otherwise.
func (o *CfuturesGetDepthV1Resp) GetLastUpdateId() int64 {
	if o == nil || IsNil(o.LastUpdateId) {
		var ret int64
		return ret
	}
	return *o.LastUpdateId
}

// GetLastUpdateIdOk returns a tuple with the LastUpdateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfuturesGetDepthV1Resp) GetLastUpdateIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LastUpdateId) {
		return nil, false
	}
	return o.LastUpdateId, true
}

// HasLastUpdateId returns a boolean if a field has been set.
func (o *CfuturesGetDepthV1Resp) HasLastUpdateId() bool {
	if o != nil && !IsNil(o.LastUpdateId) {
		return true
	}

	return false
}

// SetLastUpdateId gets a reference to the given int64 and assigns it to the LastUpdateId field.
func (o *CfuturesGetDepthV1Resp) SetLastUpdateId(v int64) {
	o.LastUpdateId = &v
}

// GetPair returns the Pair field value if set, zero value otherwise.
func (o *CfuturesGetDepthV1Resp) GetPair() string {
	if o == nil || IsNil(o.Pair) {
		var ret string
		return ret
	}
	return *o.Pair
}

// GetPairOk returns a tuple with the Pair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfuturesGetDepthV1Resp) GetPairOk() (*string, bool) {
	if o == nil || IsNil(o.Pair) {
		return nil, false
	}
	return o.Pair, true
}

// HasPair returns a boolean if a field has been set.
func (o *CfuturesGetDepthV1Resp) HasPair() bool {
	if o != nil && !IsNil(o.Pair) {
		return true
	}

	return false
}

// SetPair gets a reference to the given string and assigns it to the Pair field.
func (o *CfuturesGetDepthV1Resp) SetPair(v string) {
	o.Pair = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *CfuturesGetDepthV1Resp) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CfuturesGetDepthV1Resp) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *CfuturesGetDepthV1Resp) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *CfuturesGetDepthV1Resp) SetSymbol(v string) {
	o.Symbol = &v
}

func (o CfuturesGetDepthV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CfuturesGetDepthV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.E) {
		toSerialize["E"] = o.E
	}
	if !IsNil(o.T) {
		toSerialize["T"] = o.T
	}
	if !IsNil(o.Asks) {
		toSerialize["asks"] = o.Asks
	}
	if !IsNil(o.Bids) {
		toSerialize["bids"] = o.Bids
	}
	if !IsNil(o.LastUpdateId) {
		toSerialize["lastUpdateId"] = o.LastUpdateId
	}
	if !IsNil(o.Pair) {
		toSerialize["pair"] = o.Pair
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	return toSerialize, nil
}

type NullableCfuturesGetDepthV1Resp struct {
	value *CfuturesGetDepthV1Resp
	isSet bool
}

func (v NullableCfuturesGetDepthV1Resp) Get() *CfuturesGetDepthV1Resp {
	return v.value
}

func (v *NullableCfuturesGetDepthV1Resp) Set(val *CfuturesGetDepthV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableCfuturesGetDepthV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableCfuturesGetDepthV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCfuturesGetDepthV1Resp(val *CfuturesGetDepthV1Resp) *NullableCfuturesGetDepthV1Resp {
	return &NullableCfuturesGetDepthV1Resp{value: val, isSet: true}
}

func (v NullableCfuturesGetDepthV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCfuturesGetDepthV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


