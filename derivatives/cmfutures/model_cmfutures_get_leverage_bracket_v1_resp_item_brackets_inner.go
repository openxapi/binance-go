/*
Binance COIN-M Futures API

OpenAPI specification for Binance exchange - Cmfutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cmfutures

import (
	"encoding/json"
)

// checks if the CmfuturesGetLeverageBracketV1RespItemBracketsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CmfuturesGetLeverageBracketV1RespItemBracketsInner{}

// CmfuturesGetLeverageBracketV1RespItemBracketsInner struct for CmfuturesGetLeverageBracketV1RespItemBracketsInner
type CmfuturesGetLeverageBracketV1RespItemBracketsInner struct {
	Bracket *int32 `json:"bracket,omitempty"`
	Cum *int32 `json:"cum,omitempty"`
	InitialLeverage *int32 `json:"initialLeverage,omitempty"`
	MaintMarginRatio *float32 `json:"maintMarginRatio,omitempty"`
	QtyCap *int32 `json:"qtyCap,omitempty"`
	QtylFloor *int32 `json:"qtylFloor,omitempty"`
}

// NewCmfuturesGetLeverageBracketV1RespItemBracketsInner instantiates a new CmfuturesGetLeverageBracketV1RespItemBracketsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCmfuturesGetLeverageBracketV1RespItemBracketsInner() *CmfuturesGetLeverageBracketV1RespItemBracketsInner {
	this := CmfuturesGetLeverageBracketV1RespItemBracketsInner{}
	return &this
}

// NewCmfuturesGetLeverageBracketV1RespItemBracketsInnerWithDefaults instantiates a new CmfuturesGetLeverageBracketV1RespItemBracketsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCmfuturesGetLeverageBracketV1RespItemBracketsInnerWithDefaults() *CmfuturesGetLeverageBracketV1RespItemBracketsInner {
	this := CmfuturesGetLeverageBracketV1RespItemBracketsInner{}
	return &this
}

// GetBracket returns the Bracket field value if set, zero value otherwise.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) GetBracket() int32 {
	if o == nil || IsNil(o.Bracket) {
		var ret int32
		return ret
	}
	return *o.Bracket
}

// GetBracketOk returns a tuple with the Bracket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) GetBracketOk() (*int32, bool) {
	if o == nil || IsNil(o.Bracket) {
		return nil, false
	}
	return o.Bracket, true
}

// HasBracket returns a boolean if a field has been set.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) HasBracket() bool {
	if o != nil && !IsNil(o.Bracket) {
		return true
	}

	return false
}

// SetBracket gets a reference to the given int32 and assigns it to the Bracket field.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) SetBracket(v int32) {
	o.Bracket = &v
}

// GetCum returns the Cum field value if set, zero value otherwise.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) GetCum() int32 {
	if o == nil || IsNil(o.Cum) {
		var ret int32
		return ret
	}
	return *o.Cum
}

// GetCumOk returns a tuple with the Cum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) GetCumOk() (*int32, bool) {
	if o == nil || IsNil(o.Cum) {
		return nil, false
	}
	return o.Cum, true
}

// HasCum returns a boolean if a field has been set.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) HasCum() bool {
	if o != nil && !IsNil(o.Cum) {
		return true
	}

	return false
}

// SetCum gets a reference to the given int32 and assigns it to the Cum field.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) SetCum(v int32) {
	o.Cum = &v
}

// GetInitialLeverage returns the InitialLeverage field value if set, zero value otherwise.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) GetInitialLeverage() int32 {
	if o == nil || IsNil(o.InitialLeverage) {
		var ret int32
		return ret
	}
	return *o.InitialLeverage
}

// GetInitialLeverageOk returns a tuple with the InitialLeverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) GetInitialLeverageOk() (*int32, bool) {
	if o == nil || IsNil(o.InitialLeverage) {
		return nil, false
	}
	return o.InitialLeverage, true
}

// HasInitialLeverage returns a boolean if a field has been set.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) HasInitialLeverage() bool {
	if o != nil && !IsNil(o.InitialLeverage) {
		return true
	}

	return false
}

// SetInitialLeverage gets a reference to the given int32 and assigns it to the InitialLeverage field.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) SetInitialLeverage(v int32) {
	o.InitialLeverage = &v
}

// GetMaintMarginRatio returns the MaintMarginRatio field value if set, zero value otherwise.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) GetMaintMarginRatio() float32 {
	if o == nil || IsNil(o.MaintMarginRatio) {
		var ret float32
		return ret
	}
	return *o.MaintMarginRatio
}

// GetMaintMarginRatioOk returns a tuple with the MaintMarginRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) GetMaintMarginRatioOk() (*float32, bool) {
	if o == nil || IsNil(o.MaintMarginRatio) {
		return nil, false
	}
	return o.MaintMarginRatio, true
}

// HasMaintMarginRatio returns a boolean if a field has been set.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) HasMaintMarginRatio() bool {
	if o != nil && !IsNil(o.MaintMarginRatio) {
		return true
	}

	return false
}

// SetMaintMarginRatio gets a reference to the given float32 and assigns it to the MaintMarginRatio field.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) SetMaintMarginRatio(v float32) {
	o.MaintMarginRatio = &v
}

// GetQtyCap returns the QtyCap field value if set, zero value otherwise.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) GetQtyCap() int32 {
	if o == nil || IsNil(o.QtyCap) {
		var ret int32
		return ret
	}
	return *o.QtyCap
}

// GetQtyCapOk returns a tuple with the QtyCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) GetQtyCapOk() (*int32, bool) {
	if o == nil || IsNil(o.QtyCap) {
		return nil, false
	}
	return o.QtyCap, true
}

// HasQtyCap returns a boolean if a field has been set.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) HasQtyCap() bool {
	if o != nil && !IsNil(o.QtyCap) {
		return true
	}

	return false
}

// SetQtyCap gets a reference to the given int32 and assigns it to the QtyCap field.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) SetQtyCap(v int32) {
	o.QtyCap = &v
}

// GetQtylFloor returns the QtylFloor field value if set, zero value otherwise.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) GetQtylFloor() int32 {
	if o == nil || IsNil(o.QtylFloor) {
		var ret int32
		return ret
	}
	return *o.QtylFloor
}

// GetQtylFloorOk returns a tuple with the QtylFloor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) GetQtylFloorOk() (*int32, bool) {
	if o == nil || IsNil(o.QtylFloor) {
		return nil, false
	}
	return o.QtylFloor, true
}

// HasQtylFloor returns a boolean if a field has been set.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) HasQtylFloor() bool {
	if o != nil && !IsNil(o.QtylFloor) {
		return true
	}

	return false
}

// SetQtylFloor gets a reference to the given int32 and assigns it to the QtylFloor field.
func (o *CmfuturesGetLeverageBracketV1RespItemBracketsInner) SetQtylFloor(v int32) {
	o.QtylFloor = &v
}

func (o CmfuturesGetLeverageBracketV1RespItemBracketsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CmfuturesGetLeverageBracketV1RespItemBracketsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bracket) {
		toSerialize["bracket"] = o.Bracket
	}
	if !IsNil(o.Cum) {
		toSerialize["cum"] = o.Cum
	}
	if !IsNil(o.InitialLeverage) {
		toSerialize["initialLeverage"] = o.InitialLeverage
	}
	if !IsNil(o.MaintMarginRatio) {
		toSerialize["maintMarginRatio"] = o.MaintMarginRatio
	}
	if !IsNil(o.QtyCap) {
		toSerialize["qtyCap"] = o.QtyCap
	}
	if !IsNil(o.QtylFloor) {
		toSerialize["qtylFloor"] = o.QtylFloor
	}
	return toSerialize, nil
}

type NullableCmfuturesGetLeverageBracketV1RespItemBracketsInner struct {
	value *CmfuturesGetLeverageBracketV1RespItemBracketsInner
	isSet bool
}

func (v NullableCmfuturesGetLeverageBracketV1RespItemBracketsInner) Get() *CmfuturesGetLeverageBracketV1RespItemBracketsInner {
	return v.value
}

func (v *NullableCmfuturesGetLeverageBracketV1RespItemBracketsInner) Set(val *CmfuturesGetLeverageBracketV1RespItemBracketsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCmfuturesGetLeverageBracketV1RespItemBracketsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCmfuturesGetLeverageBracketV1RespItemBracketsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCmfuturesGetLeverageBracketV1RespItemBracketsInner(val *CmfuturesGetLeverageBracketV1RespItemBracketsInner) *NullableCmfuturesGetLeverageBracketV1RespItemBracketsInner {
	return &NullableCmfuturesGetLeverageBracketV1RespItemBracketsInner{value: val, isSet: true}
}

func (v NullableCmfuturesGetLeverageBracketV1RespItemBracketsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCmfuturesGetLeverageBracketV1RespItemBracketsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


