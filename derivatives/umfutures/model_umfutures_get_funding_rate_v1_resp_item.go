/*
Binance USD-M Futures API

OpenAPI specification for Binance exchange - Umfutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package umfutures

import (
	"encoding/json"
)

// checks if the UmfuturesGetFundingRateV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UmfuturesGetFundingRateV1RespItem{}

// UmfuturesGetFundingRateV1RespItem struct for UmfuturesGetFundingRateV1RespItem
type UmfuturesGetFundingRateV1RespItem struct {
	FundingRate *string `json:"fundingRate,omitempty"`
	FundingTime *int64 `json:"fundingTime,omitempty"`
	MarkPrice *string `json:"markPrice,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
}

// NewUmfuturesGetFundingRateV1RespItem instantiates a new UmfuturesGetFundingRateV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUmfuturesGetFundingRateV1RespItem() *UmfuturesGetFundingRateV1RespItem {
	this := UmfuturesGetFundingRateV1RespItem{}
	return &this
}

// NewUmfuturesGetFundingRateV1RespItemWithDefaults instantiates a new UmfuturesGetFundingRateV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUmfuturesGetFundingRateV1RespItemWithDefaults() *UmfuturesGetFundingRateV1RespItem {
	this := UmfuturesGetFundingRateV1RespItem{}
	return &this
}

// GetFundingRate returns the FundingRate field value if set, zero value otherwise.
func (o *UmfuturesGetFundingRateV1RespItem) GetFundingRate() string {
	if o == nil || IsNil(o.FundingRate) {
		var ret string
		return ret
	}
	return *o.FundingRate
}

// GetFundingRateOk returns a tuple with the FundingRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetFundingRateV1RespItem) GetFundingRateOk() (*string, bool) {
	if o == nil || IsNil(o.FundingRate) {
		return nil, false
	}
	return o.FundingRate, true
}

// HasFundingRate returns a boolean if a field has been set.
func (o *UmfuturesGetFundingRateV1RespItem) HasFundingRate() bool {
	if o != nil && !IsNil(o.FundingRate) {
		return true
	}

	return false
}

// SetFundingRate gets a reference to the given string and assigns it to the FundingRate field.
func (o *UmfuturesGetFundingRateV1RespItem) SetFundingRate(v string) {
	o.FundingRate = &v
}

// GetFundingTime returns the FundingTime field value if set, zero value otherwise.
func (o *UmfuturesGetFundingRateV1RespItem) GetFundingTime() int64 {
	if o == nil || IsNil(o.FundingTime) {
		var ret int64
		return ret
	}
	return *o.FundingTime
}

// GetFundingTimeOk returns a tuple with the FundingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetFundingRateV1RespItem) GetFundingTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.FundingTime) {
		return nil, false
	}
	return o.FundingTime, true
}

// HasFundingTime returns a boolean if a field has been set.
func (o *UmfuturesGetFundingRateV1RespItem) HasFundingTime() bool {
	if o != nil && !IsNil(o.FundingTime) {
		return true
	}

	return false
}

// SetFundingTime gets a reference to the given int64 and assigns it to the FundingTime field.
func (o *UmfuturesGetFundingRateV1RespItem) SetFundingTime(v int64) {
	o.FundingTime = &v
}

// GetMarkPrice returns the MarkPrice field value if set, zero value otherwise.
func (o *UmfuturesGetFundingRateV1RespItem) GetMarkPrice() string {
	if o == nil || IsNil(o.MarkPrice) {
		var ret string
		return ret
	}
	return *o.MarkPrice
}

// GetMarkPriceOk returns a tuple with the MarkPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetFundingRateV1RespItem) GetMarkPriceOk() (*string, bool) {
	if o == nil || IsNil(o.MarkPrice) {
		return nil, false
	}
	return o.MarkPrice, true
}

// HasMarkPrice returns a boolean if a field has been set.
func (o *UmfuturesGetFundingRateV1RespItem) HasMarkPrice() bool {
	if o != nil && !IsNil(o.MarkPrice) {
		return true
	}

	return false
}

// SetMarkPrice gets a reference to the given string and assigns it to the MarkPrice field.
func (o *UmfuturesGetFundingRateV1RespItem) SetMarkPrice(v string) {
	o.MarkPrice = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *UmfuturesGetFundingRateV1RespItem) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetFundingRateV1RespItem) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *UmfuturesGetFundingRateV1RespItem) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *UmfuturesGetFundingRateV1RespItem) SetSymbol(v string) {
	o.Symbol = &v
}

func (o UmfuturesGetFundingRateV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UmfuturesGetFundingRateV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FundingRate) {
		toSerialize["fundingRate"] = o.FundingRate
	}
	if !IsNil(o.FundingTime) {
		toSerialize["fundingTime"] = o.FundingTime
	}
	if !IsNil(o.MarkPrice) {
		toSerialize["markPrice"] = o.MarkPrice
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	return toSerialize, nil
}

type NullableUmfuturesGetFundingRateV1RespItem struct {
	value *UmfuturesGetFundingRateV1RespItem
	isSet bool
}

func (v NullableUmfuturesGetFundingRateV1RespItem) Get() *UmfuturesGetFundingRateV1RespItem {
	return v.value
}

func (v *NullableUmfuturesGetFundingRateV1RespItem) Set(val *UmfuturesGetFundingRateV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableUmfuturesGetFundingRateV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableUmfuturesGetFundingRateV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUmfuturesGetFundingRateV1RespItem(val *UmfuturesGetFundingRateV1RespItem) *NullableUmfuturesGetFundingRateV1RespItem {
	return &NullableUmfuturesGetFundingRateV1RespItem{value: val, isSet: true}
}

func (v NullableUmfuturesGetFundingRateV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUmfuturesGetFundingRateV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


