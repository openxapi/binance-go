/*
Binance Umfutures API

OpenAPI specification for Binance cryptocurrency exchange - Umfutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package umfutures

import (
	"encoding/json"
)

// checks if the UmfuturesGetConvertExchangeInfoV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UmfuturesGetConvertExchangeInfoV1RespItem{}

// UmfuturesGetConvertExchangeInfoV1RespItem struct for UmfuturesGetConvertExchangeInfoV1RespItem
type UmfuturesGetConvertExchangeInfoV1RespItem struct {
	FromAsset *string `json:"fromAsset,omitempty"`
	FromAssetMaxAmount *string `json:"fromAssetMaxAmount,omitempty"`
	FromAssetMinAmount *string `json:"fromAssetMinAmount,omitempty"`
	ToAsset *string `json:"toAsset,omitempty"`
	ToAssetMaxAmount *string `json:"toAssetMaxAmount,omitempty"`
	ToAssetMinAmount *string `json:"toAssetMinAmount,omitempty"`
}

// NewUmfuturesGetConvertExchangeInfoV1RespItem instantiates a new UmfuturesGetConvertExchangeInfoV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUmfuturesGetConvertExchangeInfoV1RespItem() *UmfuturesGetConvertExchangeInfoV1RespItem {
	this := UmfuturesGetConvertExchangeInfoV1RespItem{}
	return &this
}

// NewUmfuturesGetConvertExchangeInfoV1RespItemWithDefaults instantiates a new UmfuturesGetConvertExchangeInfoV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUmfuturesGetConvertExchangeInfoV1RespItemWithDefaults() *UmfuturesGetConvertExchangeInfoV1RespItem {
	this := UmfuturesGetConvertExchangeInfoV1RespItem{}
	return &this
}

// GetFromAsset returns the FromAsset field value if set, zero value otherwise.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) GetFromAsset() string {
	if o == nil || IsNil(o.FromAsset) {
		var ret string
		return ret
	}
	return *o.FromAsset
}

// GetFromAssetOk returns a tuple with the FromAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) GetFromAssetOk() (*string, bool) {
	if o == nil || IsNil(o.FromAsset) {
		return nil, false
	}
	return o.FromAsset, true
}

// HasFromAsset returns a boolean if a field has been set.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) HasFromAsset() bool {
	if o != nil && !IsNil(o.FromAsset) {
		return true
	}

	return false
}

// SetFromAsset gets a reference to the given string and assigns it to the FromAsset field.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) SetFromAsset(v string) {
	o.FromAsset = &v
}

// GetFromAssetMaxAmount returns the FromAssetMaxAmount field value if set, zero value otherwise.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) GetFromAssetMaxAmount() string {
	if o == nil || IsNil(o.FromAssetMaxAmount) {
		var ret string
		return ret
	}
	return *o.FromAssetMaxAmount
}

// GetFromAssetMaxAmountOk returns a tuple with the FromAssetMaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) GetFromAssetMaxAmountOk() (*string, bool) {
	if o == nil || IsNil(o.FromAssetMaxAmount) {
		return nil, false
	}
	return o.FromAssetMaxAmount, true
}

// HasFromAssetMaxAmount returns a boolean if a field has been set.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) HasFromAssetMaxAmount() bool {
	if o != nil && !IsNil(o.FromAssetMaxAmount) {
		return true
	}

	return false
}

// SetFromAssetMaxAmount gets a reference to the given string and assigns it to the FromAssetMaxAmount field.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) SetFromAssetMaxAmount(v string) {
	o.FromAssetMaxAmount = &v
}

// GetFromAssetMinAmount returns the FromAssetMinAmount field value if set, zero value otherwise.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) GetFromAssetMinAmount() string {
	if o == nil || IsNil(o.FromAssetMinAmount) {
		var ret string
		return ret
	}
	return *o.FromAssetMinAmount
}

// GetFromAssetMinAmountOk returns a tuple with the FromAssetMinAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) GetFromAssetMinAmountOk() (*string, bool) {
	if o == nil || IsNil(o.FromAssetMinAmount) {
		return nil, false
	}
	return o.FromAssetMinAmount, true
}

// HasFromAssetMinAmount returns a boolean if a field has been set.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) HasFromAssetMinAmount() bool {
	if o != nil && !IsNil(o.FromAssetMinAmount) {
		return true
	}

	return false
}

// SetFromAssetMinAmount gets a reference to the given string and assigns it to the FromAssetMinAmount field.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) SetFromAssetMinAmount(v string) {
	o.FromAssetMinAmount = &v
}

// GetToAsset returns the ToAsset field value if set, zero value otherwise.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) GetToAsset() string {
	if o == nil || IsNil(o.ToAsset) {
		var ret string
		return ret
	}
	return *o.ToAsset
}

// GetToAssetOk returns a tuple with the ToAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) GetToAssetOk() (*string, bool) {
	if o == nil || IsNil(o.ToAsset) {
		return nil, false
	}
	return o.ToAsset, true
}

// HasToAsset returns a boolean if a field has been set.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) HasToAsset() bool {
	if o != nil && !IsNil(o.ToAsset) {
		return true
	}

	return false
}

// SetToAsset gets a reference to the given string and assigns it to the ToAsset field.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) SetToAsset(v string) {
	o.ToAsset = &v
}

// GetToAssetMaxAmount returns the ToAssetMaxAmount field value if set, zero value otherwise.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) GetToAssetMaxAmount() string {
	if o == nil || IsNil(o.ToAssetMaxAmount) {
		var ret string
		return ret
	}
	return *o.ToAssetMaxAmount
}

// GetToAssetMaxAmountOk returns a tuple with the ToAssetMaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) GetToAssetMaxAmountOk() (*string, bool) {
	if o == nil || IsNil(o.ToAssetMaxAmount) {
		return nil, false
	}
	return o.ToAssetMaxAmount, true
}

// HasToAssetMaxAmount returns a boolean if a field has been set.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) HasToAssetMaxAmount() bool {
	if o != nil && !IsNil(o.ToAssetMaxAmount) {
		return true
	}

	return false
}

// SetToAssetMaxAmount gets a reference to the given string and assigns it to the ToAssetMaxAmount field.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) SetToAssetMaxAmount(v string) {
	o.ToAssetMaxAmount = &v
}

// GetToAssetMinAmount returns the ToAssetMinAmount field value if set, zero value otherwise.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) GetToAssetMinAmount() string {
	if o == nil || IsNil(o.ToAssetMinAmount) {
		var ret string
		return ret
	}
	return *o.ToAssetMinAmount
}

// GetToAssetMinAmountOk returns a tuple with the ToAssetMinAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) GetToAssetMinAmountOk() (*string, bool) {
	if o == nil || IsNil(o.ToAssetMinAmount) {
		return nil, false
	}
	return o.ToAssetMinAmount, true
}

// HasToAssetMinAmount returns a boolean if a field has been set.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) HasToAssetMinAmount() bool {
	if o != nil && !IsNil(o.ToAssetMinAmount) {
		return true
	}

	return false
}

// SetToAssetMinAmount gets a reference to the given string and assigns it to the ToAssetMinAmount field.
func (o *UmfuturesGetConvertExchangeInfoV1RespItem) SetToAssetMinAmount(v string) {
	o.ToAssetMinAmount = &v
}

func (o UmfuturesGetConvertExchangeInfoV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UmfuturesGetConvertExchangeInfoV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromAsset) {
		toSerialize["fromAsset"] = o.FromAsset
	}
	if !IsNil(o.FromAssetMaxAmount) {
		toSerialize["fromAssetMaxAmount"] = o.FromAssetMaxAmount
	}
	if !IsNil(o.FromAssetMinAmount) {
		toSerialize["fromAssetMinAmount"] = o.FromAssetMinAmount
	}
	if !IsNil(o.ToAsset) {
		toSerialize["toAsset"] = o.ToAsset
	}
	if !IsNil(o.ToAssetMaxAmount) {
		toSerialize["toAssetMaxAmount"] = o.ToAssetMaxAmount
	}
	if !IsNil(o.ToAssetMinAmount) {
		toSerialize["toAssetMinAmount"] = o.ToAssetMinAmount
	}
	return toSerialize, nil
}

type NullableUmfuturesGetConvertExchangeInfoV1RespItem struct {
	value *UmfuturesGetConvertExchangeInfoV1RespItem
	isSet bool
}

func (v NullableUmfuturesGetConvertExchangeInfoV1RespItem) Get() *UmfuturesGetConvertExchangeInfoV1RespItem {
	return v.value
}

func (v *NullableUmfuturesGetConvertExchangeInfoV1RespItem) Set(val *UmfuturesGetConvertExchangeInfoV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableUmfuturesGetConvertExchangeInfoV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableUmfuturesGetConvertExchangeInfoV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUmfuturesGetConvertExchangeInfoV1RespItem(val *UmfuturesGetConvertExchangeInfoV1RespItem) *NullableUmfuturesGetConvertExchangeInfoV1RespItem {
	return &NullableUmfuturesGetConvertExchangeInfoV1RespItem{value: val, isSet: true}
}

func (v NullableUmfuturesGetConvertExchangeInfoV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUmfuturesGetConvertExchangeInfoV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


