/*
Binance Umfutures API

OpenAPI specification for Binance cryptocurrency exchange - Umfutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package umfutures

import (
	"encoding/json"
)

// checks if the UmfuturesGetPmAccountInfoV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UmfuturesGetPmAccountInfoV1Resp{}

// UmfuturesGetPmAccountInfoV1Resp struct for UmfuturesGetPmAccountInfoV1Resp
type UmfuturesGetPmAccountInfoV1Resp struct {
	Asset *string `json:"asset,omitempty"`
	MaxWithdrawAmount *string `json:"maxWithdrawAmount,omitempty"`
	MaxWithdrawAmountUSD *string `json:"maxWithdrawAmountUSD,omitempty"`
}

// NewUmfuturesGetPmAccountInfoV1Resp instantiates a new UmfuturesGetPmAccountInfoV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUmfuturesGetPmAccountInfoV1Resp() *UmfuturesGetPmAccountInfoV1Resp {
	this := UmfuturesGetPmAccountInfoV1Resp{}
	return &this
}

// NewUmfuturesGetPmAccountInfoV1RespWithDefaults instantiates a new UmfuturesGetPmAccountInfoV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUmfuturesGetPmAccountInfoV1RespWithDefaults() *UmfuturesGetPmAccountInfoV1Resp {
	this := UmfuturesGetPmAccountInfoV1Resp{}
	return &this
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *UmfuturesGetPmAccountInfoV1Resp) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetPmAccountInfoV1Resp) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *UmfuturesGetPmAccountInfoV1Resp) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *UmfuturesGetPmAccountInfoV1Resp) SetAsset(v string) {
	o.Asset = &v
}

// GetMaxWithdrawAmount returns the MaxWithdrawAmount field value if set, zero value otherwise.
func (o *UmfuturesGetPmAccountInfoV1Resp) GetMaxWithdrawAmount() string {
	if o == nil || IsNil(o.MaxWithdrawAmount) {
		var ret string
		return ret
	}
	return *o.MaxWithdrawAmount
}

// GetMaxWithdrawAmountOk returns a tuple with the MaxWithdrawAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetPmAccountInfoV1Resp) GetMaxWithdrawAmountOk() (*string, bool) {
	if o == nil || IsNil(o.MaxWithdrawAmount) {
		return nil, false
	}
	return o.MaxWithdrawAmount, true
}

// HasMaxWithdrawAmount returns a boolean if a field has been set.
func (o *UmfuturesGetPmAccountInfoV1Resp) HasMaxWithdrawAmount() bool {
	if o != nil && !IsNil(o.MaxWithdrawAmount) {
		return true
	}

	return false
}

// SetMaxWithdrawAmount gets a reference to the given string and assigns it to the MaxWithdrawAmount field.
func (o *UmfuturesGetPmAccountInfoV1Resp) SetMaxWithdrawAmount(v string) {
	o.MaxWithdrawAmount = &v
}

// GetMaxWithdrawAmountUSD returns the MaxWithdrawAmountUSD field value if set, zero value otherwise.
func (o *UmfuturesGetPmAccountInfoV1Resp) GetMaxWithdrawAmountUSD() string {
	if o == nil || IsNil(o.MaxWithdrawAmountUSD) {
		var ret string
		return ret
	}
	return *o.MaxWithdrawAmountUSD
}

// GetMaxWithdrawAmountUSDOk returns a tuple with the MaxWithdrawAmountUSD field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UmfuturesGetPmAccountInfoV1Resp) GetMaxWithdrawAmountUSDOk() (*string, bool) {
	if o == nil || IsNil(o.MaxWithdrawAmountUSD) {
		return nil, false
	}
	return o.MaxWithdrawAmountUSD, true
}

// HasMaxWithdrawAmountUSD returns a boolean if a field has been set.
func (o *UmfuturesGetPmAccountInfoV1Resp) HasMaxWithdrawAmountUSD() bool {
	if o != nil && !IsNil(o.MaxWithdrawAmountUSD) {
		return true
	}

	return false
}

// SetMaxWithdrawAmountUSD gets a reference to the given string and assigns it to the MaxWithdrawAmountUSD field.
func (o *UmfuturesGetPmAccountInfoV1Resp) SetMaxWithdrawAmountUSD(v string) {
	o.MaxWithdrawAmountUSD = &v
}

func (o UmfuturesGetPmAccountInfoV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UmfuturesGetPmAccountInfoV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.MaxWithdrawAmount) {
		toSerialize["maxWithdrawAmount"] = o.MaxWithdrawAmount
	}
	if !IsNil(o.MaxWithdrawAmountUSD) {
		toSerialize["maxWithdrawAmountUSD"] = o.MaxWithdrawAmountUSD
	}
	return toSerialize, nil
}

type NullableUmfuturesGetPmAccountInfoV1Resp struct {
	value *UmfuturesGetPmAccountInfoV1Resp
	isSet bool
}

func (v NullableUmfuturesGetPmAccountInfoV1Resp) Get() *UmfuturesGetPmAccountInfoV1Resp {
	return v.value
}

func (v *NullableUmfuturesGetPmAccountInfoV1Resp) Set(val *UmfuturesGetPmAccountInfoV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableUmfuturesGetPmAccountInfoV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableUmfuturesGetPmAccountInfoV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUmfuturesGetPmAccountInfoV1Resp(val *UmfuturesGetPmAccountInfoV1Resp) *NullableUmfuturesGetPmAccountInfoV1Resp {
	return &NullableUmfuturesGetPmAccountInfoV1Resp{value: val, isSet: true}
}

func (v NullableUmfuturesGetPmAccountInfoV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUmfuturesGetPmAccountInfoV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


