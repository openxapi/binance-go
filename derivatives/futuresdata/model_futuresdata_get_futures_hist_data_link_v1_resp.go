/*
Binance Futures Data API

OpenAPI specification for Binance exchange - Futuresdata API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package futuresdata

import (
	"encoding/json"
)

// checks if the FuturesdataGetFuturesHistDataLinkV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FuturesdataGetFuturesHistDataLinkV1Resp{}

// FuturesdataGetFuturesHistDataLinkV1Resp struct for FuturesdataGetFuturesHistDataLinkV1Resp
type FuturesdataGetFuturesHistDataLinkV1Resp struct {
	Data []FuturesdataGetFuturesHistDataLinkV1RespDataInner `json:"data,omitempty"`
}

// NewFuturesdataGetFuturesHistDataLinkV1Resp instantiates a new FuturesdataGetFuturesHistDataLinkV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFuturesdataGetFuturesHistDataLinkV1Resp() *FuturesdataGetFuturesHistDataLinkV1Resp {
	this := FuturesdataGetFuturesHistDataLinkV1Resp{}
	return &this
}

// NewFuturesdataGetFuturesHistDataLinkV1RespWithDefaults instantiates a new FuturesdataGetFuturesHistDataLinkV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFuturesdataGetFuturesHistDataLinkV1RespWithDefaults() *FuturesdataGetFuturesHistDataLinkV1Resp {
	this := FuturesdataGetFuturesHistDataLinkV1Resp{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *FuturesdataGetFuturesHistDataLinkV1Resp) GetData() []FuturesdataGetFuturesHistDataLinkV1RespDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []FuturesdataGetFuturesHistDataLinkV1RespDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FuturesdataGetFuturesHistDataLinkV1Resp) GetDataOk() ([]FuturesdataGetFuturesHistDataLinkV1RespDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *FuturesdataGetFuturesHistDataLinkV1Resp) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []FuturesdataGetFuturesHistDataLinkV1RespDataInner and assigns it to the Data field.
func (o *FuturesdataGetFuturesHistDataLinkV1Resp) SetData(v []FuturesdataGetFuturesHistDataLinkV1RespDataInner) {
	o.Data = v
}

func (o FuturesdataGetFuturesHistDataLinkV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FuturesdataGetFuturesHistDataLinkV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableFuturesdataGetFuturesHistDataLinkV1Resp struct {
	value *FuturesdataGetFuturesHistDataLinkV1Resp
	isSet bool
}

func (v NullableFuturesdataGetFuturesHistDataLinkV1Resp) Get() *FuturesdataGetFuturesHistDataLinkV1Resp {
	return v.value
}

func (v *NullableFuturesdataGetFuturesHistDataLinkV1Resp) Set(val *FuturesdataGetFuturesHistDataLinkV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableFuturesdataGetFuturesHistDataLinkV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableFuturesdataGetFuturesHistDataLinkV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFuturesdataGetFuturesHistDataLinkV1Resp(val *FuturesdataGetFuturesHistDataLinkV1Resp) *NullableFuturesdataGetFuturesHistDataLinkV1Resp {
	return &NullableFuturesdataGetFuturesHistDataLinkV1Resp{value: val, isSet: true}
}

func (v NullableFuturesdataGetFuturesHistDataLinkV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFuturesdataGetFuturesHistDataLinkV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


