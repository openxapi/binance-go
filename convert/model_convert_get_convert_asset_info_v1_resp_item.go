/*
Binance Convert API

OpenAPI specification for Binance exchange - Convert API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package convert

import (
	"encoding/json"
)

// checks if the ConvertGetConvertAssetInfoV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConvertGetConvertAssetInfoV1RespItem{}

// ConvertGetConvertAssetInfoV1RespItem struct for ConvertGetConvertAssetInfoV1RespItem
type ConvertGetConvertAssetInfoV1RespItem struct {
	Asset *string `json:"asset,omitempty"`
	Fraction *int32 `json:"fraction,omitempty"`
}

// NewConvertGetConvertAssetInfoV1RespItem instantiates a new ConvertGetConvertAssetInfoV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConvertGetConvertAssetInfoV1RespItem() *ConvertGetConvertAssetInfoV1RespItem {
	this := ConvertGetConvertAssetInfoV1RespItem{}
	return &this
}

// NewConvertGetConvertAssetInfoV1RespItemWithDefaults instantiates a new ConvertGetConvertAssetInfoV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConvertGetConvertAssetInfoV1RespItemWithDefaults() *ConvertGetConvertAssetInfoV1RespItem {
	this := ConvertGetConvertAssetInfoV1RespItem{}
	return &this
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *ConvertGetConvertAssetInfoV1RespItem) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConvertGetConvertAssetInfoV1RespItem) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *ConvertGetConvertAssetInfoV1RespItem) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *ConvertGetConvertAssetInfoV1RespItem) SetAsset(v string) {
	o.Asset = &v
}

// GetFraction returns the Fraction field value if set, zero value otherwise.
func (o *ConvertGetConvertAssetInfoV1RespItem) GetFraction() int32 {
	if o == nil || IsNil(o.Fraction) {
		var ret int32
		return ret
	}
	return *o.Fraction
}

// GetFractionOk returns a tuple with the Fraction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConvertGetConvertAssetInfoV1RespItem) GetFractionOk() (*int32, bool) {
	if o == nil || IsNil(o.Fraction) {
		return nil, false
	}
	return o.Fraction, true
}

// HasFraction returns a boolean if a field has been set.
func (o *ConvertGetConvertAssetInfoV1RespItem) HasFraction() bool {
	if o != nil && !IsNil(o.Fraction) {
		return true
	}

	return false
}

// SetFraction gets a reference to the given int32 and assigns it to the Fraction field.
func (o *ConvertGetConvertAssetInfoV1RespItem) SetFraction(v int32) {
	o.Fraction = &v
}

func (o ConvertGetConvertAssetInfoV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConvertGetConvertAssetInfoV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.Fraction) {
		toSerialize["fraction"] = o.Fraction
	}
	return toSerialize, nil
}

type NullableConvertGetConvertAssetInfoV1RespItem struct {
	value *ConvertGetConvertAssetInfoV1RespItem
	isSet bool
}

func (v NullableConvertGetConvertAssetInfoV1RespItem) Get() *ConvertGetConvertAssetInfoV1RespItem {
	return v.value
}

func (v *NullableConvertGetConvertAssetInfoV1RespItem) Set(val *ConvertGetConvertAssetInfoV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableConvertGetConvertAssetInfoV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableConvertGetConvertAssetInfoV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConvertGetConvertAssetInfoV1RespItem(val *ConvertGetConvertAssetInfoV1RespItem) *NullableConvertGetConvertAssetInfoV1RespItem {
	return &NullableConvertGetConvertAssetInfoV1RespItem{value: val, isSet: true}
}

func (v NullableConvertGetConvertAssetInfoV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConvertGetConvertAssetInfoV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


