/*
Binance Convert API

OpenAPI specification for Binance exchange - Convert API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package convert

import (
	"encoding/json"
)

// checks if the ConvertCreateConvertLimitQueryOpenOrdersV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConvertCreateConvertLimitQueryOpenOrdersV1Resp{}

// ConvertCreateConvertLimitQueryOpenOrdersV1Resp struct for ConvertCreateConvertLimitQueryOpenOrdersV1Resp
type ConvertCreateConvertLimitQueryOpenOrdersV1Resp struct {
	List []ConvertCreateConvertLimitQueryOpenOrdersV1RespListInner `json:"list,omitempty"`
}

// NewConvertCreateConvertLimitQueryOpenOrdersV1Resp instantiates a new ConvertCreateConvertLimitQueryOpenOrdersV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConvertCreateConvertLimitQueryOpenOrdersV1Resp() *ConvertCreateConvertLimitQueryOpenOrdersV1Resp {
	this := ConvertCreateConvertLimitQueryOpenOrdersV1Resp{}
	return &this
}

// NewConvertCreateConvertLimitQueryOpenOrdersV1RespWithDefaults instantiates a new ConvertCreateConvertLimitQueryOpenOrdersV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConvertCreateConvertLimitQueryOpenOrdersV1RespWithDefaults() *ConvertCreateConvertLimitQueryOpenOrdersV1Resp {
	this := ConvertCreateConvertLimitQueryOpenOrdersV1Resp{}
	return &this
}

// GetList returns the List field value if set, zero value otherwise.
func (o *ConvertCreateConvertLimitQueryOpenOrdersV1Resp) GetList() []ConvertCreateConvertLimitQueryOpenOrdersV1RespListInner {
	if o == nil || IsNil(o.List) {
		var ret []ConvertCreateConvertLimitQueryOpenOrdersV1RespListInner
		return ret
	}
	return o.List
}

// GetListOk returns a tuple with the List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConvertCreateConvertLimitQueryOpenOrdersV1Resp) GetListOk() ([]ConvertCreateConvertLimitQueryOpenOrdersV1RespListInner, bool) {
	if o == nil || IsNil(o.List) {
		return nil, false
	}
	return o.List, true
}

// HasList returns a boolean if a field has been set.
func (o *ConvertCreateConvertLimitQueryOpenOrdersV1Resp) HasList() bool {
	if o != nil && !IsNil(o.List) {
		return true
	}

	return false
}

// SetList gets a reference to the given []ConvertCreateConvertLimitQueryOpenOrdersV1RespListInner and assigns it to the List field.
func (o *ConvertCreateConvertLimitQueryOpenOrdersV1Resp) SetList(v []ConvertCreateConvertLimitQueryOpenOrdersV1RespListInner) {
	o.List = v
}

func (o ConvertCreateConvertLimitQueryOpenOrdersV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConvertCreateConvertLimitQueryOpenOrdersV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.List) {
		toSerialize["list"] = o.List
	}
	return toSerialize, nil
}

type NullableConvertCreateConvertLimitQueryOpenOrdersV1Resp struct {
	value *ConvertCreateConvertLimitQueryOpenOrdersV1Resp
	isSet bool
}

func (v NullableConvertCreateConvertLimitQueryOpenOrdersV1Resp) Get() *ConvertCreateConvertLimitQueryOpenOrdersV1Resp {
	return v.value
}

func (v *NullableConvertCreateConvertLimitQueryOpenOrdersV1Resp) Set(val *ConvertCreateConvertLimitQueryOpenOrdersV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableConvertCreateConvertLimitQueryOpenOrdersV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableConvertCreateConvertLimitQueryOpenOrdersV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConvertCreateConvertLimitQueryOpenOrdersV1Resp(val *ConvertCreateConvertLimitQueryOpenOrdersV1Resp) *NullableConvertCreateConvertLimitQueryOpenOrdersV1Resp {
	return &NullableConvertCreateConvertLimitQueryOpenOrdersV1Resp{value: val, isSet: true}
}

func (v NullableConvertCreateConvertLimitQueryOpenOrdersV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConvertCreateConvertLimitQueryOpenOrdersV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


