/*
Binance Convert API

OpenAPI specification for Binance exchange - Convert API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package convert

import (
	"encoding/json"
)

// checks if the ConvertCreateConvertLimitCancelOrderV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConvertCreateConvertLimitCancelOrderV1Resp{}

// ConvertCreateConvertLimitCancelOrderV1Resp struct for ConvertCreateConvertLimitCancelOrderV1Resp
type ConvertCreateConvertLimitCancelOrderV1Resp struct {
	OrderId *int64 `json:"orderId,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewConvertCreateConvertLimitCancelOrderV1Resp instantiates a new ConvertCreateConvertLimitCancelOrderV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConvertCreateConvertLimitCancelOrderV1Resp() *ConvertCreateConvertLimitCancelOrderV1Resp {
	this := ConvertCreateConvertLimitCancelOrderV1Resp{}
	return &this
}

// NewConvertCreateConvertLimitCancelOrderV1RespWithDefaults instantiates a new ConvertCreateConvertLimitCancelOrderV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConvertCreateConvertLimitCancelOrderV1RespWithDefaults() *ConvertCreateConvertLimitCancelOrderV1Resp {
	this := ConvertCreateConvertLimitCancelOrderV1Resp{}
	return &this
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *ConvertCreateConvertLimitCancelOrderV1Resp) GetOrderId() int64 {
	if o == nil || IsNil(o.OrderId) {
		var ret int64
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConvertCreateConvertLimitCancelOrderV1Resp) GetOrderIdOk() (*int64, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *ConvertCreateConvertLimitCancelOrderV1Resp) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given int64 and assigns it to the OrderId field.
func (o *ConvertCreateConvertLimitCancelOrderV1Resp) SetOrderId(v int64) {
	o.OrderId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ConvertCreateConvertLimitCancelOrderV1Resp) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConvertCreateConvertLimitCancelOrderV1Resp) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ConvertCreateConvertLimitCancelOrderV1Resp) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ConvertCreateConvertLimitCancelOrderV1Resp) SetStatus(v string) {
	o.Status = &v
}

func (o ConvertCreateConvertLimitCancelOrderV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConvertCreateConvertLimitCancelOrderV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableConvertCreateConvertLimitCancelOrderV1Resp struct {
	value *ConvertCreateConvertLimitCancelOrderV1Resp
	isSet bool
}

func (v NullableConvertCreateConvertLimitCancelOrderV1Resp) Get() *ConvertCreateConvertLimitCancelOrderV1Resp {
	return v.value
}

func (v *NullableConvertCreateConvertLimitCancelOrderV1Resp) Set(val *ConvertCreateConvertLimitCancelOrderV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableConvertCreateConvertLimitCancelOrderV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableConvertCreateConvertLimitCancelOrderV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConvertCreateConvertLimitCancelOrderV1Resp(val *ConvertCreateConvertLimitCancelOrderV1Resp) *NullableConvertCreateConvertLimitCancelOrderV1Resp {
	return &NullableConvertCreateConvertLimitCancelOrderV1Resp{value: val, isSet: true}
}

func (v NullableConvertCreateConvertLimitCancelOrderV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConvertCreateConvertLimitCancelOrderV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


