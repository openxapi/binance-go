/*
Binance COIN-M Futures API

OpenAPI specification for Binance exchange - Cmfutures API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cmfutures

import (
	"encoding/json"
)

// checks if the GetTradeAsynV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetTradeAsynV1Resp{}

// GetTradeAsynV1Resp struct for GetTradeAsynV1Resp
type GetTradeAsynV1Resp struct {
	AvgCostTimestampOfLast30d *int32 `json:"avgCostTimestampOfLast30d,omitempty"`
	DownloadId *string `json:"downloadId,omitempty"`
}

// NewGetTradeAsynV1Resp instantiates a new GetTradeAsynV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetTradeAsynV1Resp() *GetTradeAsynV1Resp {
	this := GetTradeAsynV1Resp{}
	return &this
}

// NewGetTradeAsynV1RespWithDefaults instantiates a new GetTradeAsynV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetTradeAsynV1RespWithDefaults() *GetTradeAsynV1Resp {
	this := GetTradeAsynV1Resp{}
	return &this
}

// GetAvgCostTimestampOfLast30d returns the AvgCostTimestampOfLast30d field value if set, zero value otherwise.
func (o *GetTradeAsynV1Resp) GetAvgCostTimestampOfLast30d() int32 {
	if o == nil || IsNil(o.AvgCostTimestampOfLast30d) {
		var ret int32
		return ret
	}
	return *o.AvgCostTimestampOfLast30d
}

// GetAvgCostTimestampOfLast30dOk returns a tuple with the AvgCostTimestampOfLast30d field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeAsynV1Resp) GetAvgCostTimestampOfLast30dOk() (*int32, bool) {
	if o == nil || IsNil(o.AvgCostTimestampOfLast30d) {
		return nil, false
	}
	return o.AvgCostTimestampOfLast30d, true
}

// HasAvgCostTimestampOfLast30d returns a boolean if a field has been set.
func (o *GetTradeAsynV1Resp) HasAvgCostTimestampOfLast30d() bool {
	if o != nil && !IsNil(o.AvgCostTimestampOfLast30d) {
		return true
	}

	return false
}

// SetAvgCostTimestampOfLast30d gets a reference to the given int32 and assigns it to the AvgCostTimestampOfLast30d field.
func (o *GetTradeAsynV1Resp) SetAvgCostTimestampOfLast30d(v int32) {
	o.AvgCostTimestampOfLast30d = &v
}

// GetDownloadId returns the DownloadId field value if set, zero value otherwise.
func (o *GetTradeAsynV1Resp) GetDownloadId() string {
	if o == nil || IsNil(o.DownloadId) {
		var ret string
		return ret
	}
	return *o.DownloadId
}

// GetDownloadIdOk returns a tuple with the DownloadId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetTradeAsynV1Resp) GetDownloadIdOk() (*string, bool) {
	if o == nil || IsNil(o.DownloadId) {
		return nil, false
	}
	return o.DownloadId, true
}

// HasDownloadId returns a boolean if a field has been set.
func (o *GetTradeAsynV1Resp) HasDownloadId() bool {
	if o != nil && !IsNil(o.DownloadId) {
		return true
	}

	return false
}

// SetDownloadId gets a reference to the given string and assigns it to the DownloadId field.
func (o *GetTradeAsynV1Resp) SetDownloadId(v string) {
	o.DownloadId = &v
}

func (o GetTradeAsynV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetTradeAsynV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvgCostTimestampOfLast30d) {
		toSerialize["avgCostTimestampOfLast30d"] = o.AvgCostTimestampOfLast30d
	}
	if !IsNil(o.DownloadId) {
		toSerialize["downloadId"] = o.DownloadId
	}
	return toSerialize, nil
}

type NullableGetTradeAsynV1Resp struct {
	value *GetTradeAsynV1Resp
	isSet bool
}

func (v NullableGetTradeAsynV1Resp) Get() *GetTradeAsynV1Resp {
	return v.value
}

func (v *NullableGetTradeAsynV1Resp) Set(val *GetTradeAsynV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableGetTradeAsynV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableGetTradeAsynV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetTradeAsynV1Resp(val *GetTradeAsynV1Resp) *NullableGetTradeAsynV1Resp {
	return &NullableGetTradeAsynV1Resp{value: val, isSet: true}
}

func (v NullableGetTradeAsynV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetTradeAsynV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


