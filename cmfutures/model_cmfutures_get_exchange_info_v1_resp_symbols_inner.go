/*
Binance COIN-M Futures API

OpenAPI specification for Binance exchange - Cmfutures API

API version: 0.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cmfutures

import (
	"encoding/json"
)

// checks if the CmfuturesGetExchangeInfoV1RespSymbolsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CmfuturesGetExchangeInfoV1RespSymbolsInner{}

// CmfuturesGetExchangeInfoV1RespSymbolsInner struct for CmfuturesGetExchangeInfoV1RespSymbolsInner
type CmfuturesGetExchangeInfoV1RespSymbolsInner struct {
	OrderType []string `json:"OrderType,omitempty"`
	BaseAsset *string `json:"baseAsset,omitempty"`
	BaseAssetPrecision *int32 `json:"baseAssetPrecision,omitempty"`
	ContractSize *int32 `json:"contractSize,omitempty"`
	ContractStatus *string `json:"contractStatus,omitempty"`
	ContractType *string `json:"contractType,omitempty"`
	DeliveryDate *int32 `json:"deliveryDate,omitempty"`
	EqualQtyPrecision *int32 `json:"equalQtyPrecision,omitempty"`
	Filters []CmfuturesSymbolFilter `json:"filters,omitempty"`
	LiquidationFee *string `json:"liquidationFee,omitempty"`
	MaintMarginPercent *string `json:"maintMarginPercent,omitempty"`
	MarginAsset *string `json:"marginAsset,omitempty"`
	MarketTakeBound *string `json:"marketTakeBound,omitempty"`
	OnboardDate *int32 `json:"onboardDate,omitempty"`
	Pair *string `json:"pair,omitempty"`
	PricePrecision *int32 `json:"pricePrecision,omitempty"`
	QuantityPrecision *int32 `json:"quantityPrecision,omitempty"`
	QuoteAsset *string `json:"quoteAsset,omitempty"`
	QuotePrecision *int32 `json:"quotePrecision,omitempty"`
	RequiredMarginPercent *string `json:"requiredMarginPercent,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	TimeInForce []string `json:"timeInForce,omitempty"`
	TriggerProtect *string `json:"triggerProtect,omitempty"`
	UnderlyingSubType []string `json:"underlyingSubType,omitempty"`
	UnderlyingType *string `json:"underlyingType,omitempty"`
}

// NewCmfuturesGetExchangeInfoV1RespSymbolsInner instantiates a new CmfuturesGetExchangeInfoV1RespSymbolsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCmfuturesGetExchangeInfoV1RespSymbolsInner() *CmfuturesGetExchangeInfoV1RespSymbolsInner {
	this := CmfuturesGetExchangeInfoV1RespSymbolsInner{}
	return &this
}

// NewCmfuturesGetExchangeInfoV1RespSymbolsInnerWithDefaults instantiates a new CmfuturesGetExchangeInfoV1RespSymbolsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCmfuturesGetExchangeInfoV1RespSymbolsInnerWithDefaults() *CmfuturesGetExchangeInfoV1RespSymbolsInner {
	this := CmfuturesGetExchangeInfoV1RespSymbolsInner{}
	return &this
}

// GetOrderType returns the OrderType field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetOrderType() []string {
	if o == nil || IsNil(o.OrderType) {
		var ret []string
		return ret
	}
	return o.OrderType
}

// GetOrderTypeOk returns a tuple with the OrderType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetOrderTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.OrderType) {
		return nil, false
	}
	return o.OrderType, true
}

// HasOrderType returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasOrderType() bool {
	if o != nil && !IsNil(o.OrderType) {
		return true
	}

	return false
}

// SetOrderType gets a reference to the given []string and assigns it to the OrderType field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetOrderType(v []string) {
	o.OrderType = v
}

// GetBaseAsset returns the BaseAsset field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetBaseAsset() string {
	if o == nil || IsNil(o.BaseAsset) {
		var ret string
		return ret
	}
	return *o.BaseAsset
}

// GetBaseAssetOk returns a tuple with the BaseAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetBaseAssetOk() (*string, bool) {
	if o == nil || IsNil(o.BaseAsset) {
		return nil, false
	}
	return o.BaseAsset, true
}

// HasBaseAsset returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasBaseAsset() bool {
	if o != nil && !IsNil(o.BaseAsset) {
		return true
	}

	return false
}

// SetBaseAsset gets a reference to the given string and assigns it to the BaseAsset field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetBaseAsset(v string) {
	o.BaseAsset = &v
}

// GetBaseAssetPrecision returns the BaseAssetPrecision field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetBaseAssetPrecision() int32 {
	if o == nil || IsNil(o.BaseAssetPrecision) {
		var ret int32
		return ret
	}
	return *o.BaseAssetPrecision
}

// GetBaseAssetPrecisionOk returns a tuple with the BaseAssetPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetBaseAssetPrecisionOk() (*int32, bool) {
	if o == nil || IsNil(o.BaseAssetPrecision) {
		return nil, false
	}
	return o.BaseAssetPrecision, true
}

// HasBaseAssetPrecision returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasBaseAssetPrecision() bool {
	if o != nil && !IsNil(o.BaseAssetPrecision) {
		return true
	}

	return false
}

// SetBaseAssetPrecision gets a reference to the given int32 and assigns it to the BaseAssetPrecision field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetBaseAssetPrecision(v int32) {
	o.BaseAssetPrecision = &v
}

// GetContractSize returns the ContractSize field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetContractSize() int32 {
	if o == nil || IsNil(o.ContractSize) {
		var ret int32
		return ret
	}
	return *o.ContractSize
}

// GetContractSizeOk returns a tuple with the ContractSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetContractSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.ContractSize) {
		return nil, false
	}
	return o.ContractSize, true
}

// HasContractSize returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasContractSize() bool {
	if o != nil && !IsNil(o.ContractSize) {
		return true
	}

	return false
}

// SetContractSize gets a reference to the given int32 and assigns it to the ContractSize field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetContractSize(v int32) {
	o.ContractSize = &v
}

// GetContractStatus returns the ContractStatus field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetContractStatus() string {
	if o == nil || IsNil(o.ContractStatus) {
		var ret string
		return ret
	}
	return *o.ContractStatus
}

// GetContractStatusOk returns a tuple with the ContractStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetContractStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ContractStatus) {
		return nil, false
	}
	return o.ContractStatus, true
}

// HasContractStatus returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasContractStatus() bool {
	if o != nil && !IsNil(o.ContractStatus) {
		return true
	}

	return false
}

// SetContractStatus gets a reference to the given string and assigns it to the ContractStatus field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetContractStatus(v string) {
	o.ContractStatus = &v
}

// GetContractType returns the ContractType field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetContractType() string {
	if o == nil || IsNil(o.ContractType) {
		var ret string
		return ret
	}
	return *o.ContractType
}

// GetContractTypeOk returns a tuple with the ContractType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetContractTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContractType) {
		return nil, false
	}
	return o.ContractType, true
}

// HasContractType returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasContractType() bool {
	if o != nil && !IsNil(o.ContractType) {
		return true
	}

	return false
}

// SetContractType gets a reference to the given string and assigns it to the ContractType field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetContractType(v string) {
	o.ContractType = &v
}

// GetDeliveryDate returns the DeliveryDate field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetDeliveryDate() int32 {
	if o == nil || IsNil(o.DeliveryDate) {
		var ret int32
		return ret
	}
	return *o.DeliveryDate
}

// GetDeliveryDateOk returns a tuple with the DeliveryDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetDeliveryDateOk() (*int32, bool) {
	if o == nil || IsNil(o.DeliveryDate) {
		return nil, false
	}
	return o.DeliveryDate, true
}

// HasDeliveryDate returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasDeliveryDate() bool {
	if o != nil && !IsNil(o.DeliveryDate) {
		return true
	}

	return false
}

// SetDeliveryDate gets a reference to the given int32 and assigns it to the DeliveryDate field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetDeliveryDate(v int32) {
	o.DeliveryDate = &v
}

// GetEqualQtyPrecision returns the EqualQtyPrecision field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetEqualQtyPrecision() int32 {
	if o == nil || IsNil(o.EqualQtyPrecision) {
		var ret int32
		return ret
	}
	return *o.EqualQtyPrecision
}

// GetEqualQtyPrecisionOk returns a tuple with the EqualQtyPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetEqualQtyPrecisionOk() (*int32, bool) {
	if o == nil || IsNil(o.EqualQtyPrecision) {
		return nil, false
	}
	return o.EqualQtyPrecision, true
}

// HasEqualQtyPrecision returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasEqualQtyPrecision() bool {
	if o != nil && !IsNil(o.EqualQtyPrecision) {
		return true
	}

	return false
}

// SetEqualQtyPrecision gets a reference to the given int32 and assigns it to the EqualQtyPrecision field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetEqualQtyPrecision(v int32) {
	o.EqualQtyPrecision = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetFilters() []CmfuturesSymbolFilter {
	if o == nil || IsNil(o.Filters) {
		var ret []CmfuturesSymbolFilter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetFiltersOk() ([]CmfuturesSymbolFilter, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []CmfuturesSymbolFilter and assigns it to the Filters field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetFilters(v []CmfuturesSymbolFilter) {
	o.Filters = v
}

// GetLiquidationFee returns the LiquidationFee field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetLiquidationFee() string {
	if o == nil || IsNil(o.LiquidationFee) {
		var ret string
		return ret
	}
	return *o.LiquidationFee
}

// GetLiquidationFeeOk returns a tuple with the LiquidationFee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetLiquidationFeeOk() (*string, bool) {
	if o == nil || IsNil(o.LiquidationFee) {
		return nil, false
	}
	return o.LiquidationFee, true
}

// HasLiquidationFee returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasLiquidationFee() bool {
	if o != nil && !IsNil(o.LiquidationFee) {
		return true
	}

	return false
}

// SetLiquidationFee gets a reference to the given string and assigns it to the LiquidationFee field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetLiquidationFee(v string) {
	o.LiquidationFee = &v
}

// GetMaintMarginPercent returns the MaintMarginPercent field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetMaintMarginPercent() string {
	if o == nil || IsNil(o.MaintMarginPercent) {
		var ret string
		return ret
	}
	return *o.MaintMarginPercent
}

// GetMaintMarginPercentOk returns a tuple with the MaintMarginPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetMaintMarginPercentOk() (*string, bool) {
	if o == nil || IsNil(o.MaintMarginPercent) {
		return nil, false
	}
	return o.MaintMarginPercent, true
}

// HasMaintMarginPercent returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasMaintMarginPercent() bool {
	if o != nil && !IsNil(o.MaintMarginPercent) {
		return true
	}

	return false
}

// SetMaintMarginPercent gets a reference to the given string and assigns it to the MaintMarginPercent field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetMaintMarginPercent(v string) {
	o.MaintMarginPercent = &v
}

// GetMarginAsset returns the MarginAsset field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetMarginAsset() string {
	if o == nil || IsNil(o.MarginAsset) {
		var ret string
		return ret
	}
	return *o.MarginAsset
}

// GetMarginAssetOk returns a tuple with the MarginAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetMarginAssetOk() (*string, bool) {
	if o == nil || IsNil(o.MarginAsset) {
		return nil, false
	}
	return o.MarginAsset, true
}

// HasMarginAsset returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasMarginAsset() bool {
	if o != nil && !IsNil(o.MarginAsset) {
		return true
	}

	return false
}

// SetMarginAsset gets a reference to the given string and assigns it to the MarginAsset field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetMarginAsset(v string) {
	o.MarginAsset = &v
}

// GetMarketTakeBound returns the MarketTakeBound field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetMarketTakeBound() string {
	if o == nil || IsNil(o.MarketTakeBound) {
		var ret string
		return ret
	}
	return *o.MarketTakeBound
}

// GetMarketTakeBoundOk returns a tuple with the MarketTakeBound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetMarketTakeBoundOk() (*string, bool) {
	if o == nil || IsNil(o.MarketTakeBound) {
		return nil, false
	}
	return o.MarketTakeBound, true
}

// HasMarketTakeBound returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasMarketTakeBound() bool {
	if o != nil && !IsNil(o.MarketTakeBound) {
		return true
	}

	return false
}

// SetMarketTakeBound gets a reference to the given string and assigns it to the MarketTakeBound field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetMarketTakeBound(v string) {
	o.MarketTakeBound = &v
}

// GetOnboardDate returns the OnboardDate field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetOnboardDate() int32 {
	if o == nil || IsNil(o.OnboardDate) {
		var ret int32
		return ret
	}
	return *o.OnboardDate
}

// GetOnboardDateOk returns a tuple with the OnboardDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetOnboardDateOk() (*int32, bool) {
	if o == nil || IsNil(o.OnboardDate) {
		return nil, false
	}
	return o.OnboardDate, true
}

// HasOnboardDate returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasOnboardDate() bool {
	if o != nil && !IsNil(o.OnboardDate) {
		return true
	}

	return false
}

// SetOnboardDate gets a reference to the given int32 and assigns it to the OnboardDate field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetOnboardDate(v int32) {
	o.OnboardDate = &v
}

// GetPair returns the Pair field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetPair() string {
	if o == nil || IsNil(o.Pair) {
		var ret string
		return ret
	}
	return *o.Pair
}

// GetPairOk returns a tuple with the Pair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetPairOk() (*string, bool) {
	if o == nil || IsNil(o.Pair) {
		return nil, false
	}
	return o.Pair, true
}

// HasPair returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasPair() bool {
	if o != nil && !IsNil(o.Pair) {
		return true
	}

	return false
}

// SetPair gets a reference to the given string and assigns it to the Pair field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetPair(v string) {
	o.Pair = &v
}

// GetPricePrecision returns the PricePrecision field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetPricePrecision() int32 {
	if o == nil || IsNil(o.PricePrecision) {
		var ret int32
		return ret
	}
	return *o.PricePrecision
}

// GetPricePrecisionOk returns a tuple with the PricePrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetPricePrecisionOk() (*int32, bool) {
	if o == nil || IsNil(o.PricePrecision) {
		return nil, false
	}
	return o.PricePrecision, true
}

// HasPricePrecision returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasPricePrecision() bool {
	if o != nil && !IsNil(o.PricePrecision) {
		return true
	}

	return false
}

// SetPricePrecision gets a reference to the given int32 and assigns it to the PricePrecision field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetPricePrecision(v int32) {
	o.PricePrecision = &v
}

// GetQuantityPrecision returns the QuantityPrecision field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetQuantityPrecision() int32 {
	if o == nil || IsNil(o.QuantityPrecision) {
		var ret int32
		return ret
	}
	return *o.QuantityPrecision
}

// GetQuantityPrecisionOk returns a tuple with the QuantityPrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetQuantityPrecisionOk() (*int32, bool) {
	if o == nil || IsNil(o.QuantityPrecision) {
		return nil, false
	}
	return o.QuantityPrecision, true
}

// HasQuantityPrecision returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasQuantityPrecision() bool {
	if o != nil && !IsNil(o.QuantityPrecision) {
		return true
	}

	return false
}

// SetQuantityPrecision gets a reference to the given int32 and assigns it to the QuantityPrecision field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetQuantityPrecision(v int32) {
	o.QuantityPrecision = &v
}

// GetQuoteAsset returns the QuoteAsset field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetQuoteAsset() string {
	if o == nil || IsNil(o.QuoteAsset) {
		var ret string
		return ret
	}
	return *o.QuoteAsset
}

// GetQuoteAssetOk returns a tuple with the QuoteAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetQuoteAssetOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteAsset) {
		return nil, false
	}
	return o.QuoteAsset, true
}

// HasQuoteAsset returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasQuoteAsset() bool {
	if o != nil && !IsNil(o.QuoteAsset) {
		return true
	}

	return false
}

// SetQuoteAsset gets a reference to the given string and assigns it to the QuoteAsset field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetQuoteAsset(v string) {
	o.QuoteAsset = &v
}

// GetQuotePrecision returns the QuotePrecision field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetQuotePrecision() int32 {
	if o == nil || IsNil(o.QuotePrecision) {
		var ret int32
		return ret
	}
	return *o.QuotePrecision
}

// GetQuotePrecisionOk returns a tuple with the QuotePrecision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetQuotePrecisionOk() (*int32, bool) {
	if o == nil || IsNil(o.QuotePrecision) {
		return nil, false
	}
	return o.QuotePrecision, true
}

// HasQuotePrecision returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasQuotePrecision() bool {
	if o != nil && !IsNil(o.QuotePrecision) {
		return true
	}

	return false
}

// SetQuotePrecision gets a reference to the given int32 and assigns it to the QuotePrecision field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetQuotePrecision(v int32) {
	o.QuotePrecision = &v
}

// GetRequiredMarginPercent returns the RequiredMarginPercent field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetRequiredMarginPercent() string {
	if o == nil || IsNil(o.RequiredMarginPercent) {
		var ret string
		return ret
	}
	return *o.RequiredMarginPercent
}

// GetRequiredMarginPercentOk returns a tuple with the RequiredMarginPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetRequiredMarginPercentOk() (*string, bool) {
	if o == nil || IsNil(o.RequiredMarginPercent) {
		return nil, false
	}
	return o.RequiredMarginPercent, true
}

// HasRequiredMarginPercent returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasRequiredMarginPercent() bool {
	if o != nil && !IsNil(o.RequiredMarginPercent) {
		return true
	}

	return false
}

// SetRequiredMarginPercent gets a reference to the given string and assigns it to the RequiredMarginPercent field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetRequiredMarginPercent(v string) {
	o.RequiredMarginPercent = &v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTimeInForce returns the TimeInForce field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetTimeInForce() []string {
	if o == nil || IsNil(o.TimeInForce) {
		var ret []string
		return ret
	}
	return o.TimeInForce
}

// GetTimeInForceOk returns a tuple with the TimeInForce field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetTimeInForceOk() ([]string, bool) {
	if o == nil || IsNil(o.TimeInForce) {
		return nil, false
	}
	return o.TimeInForce, true
}

// HasTimeInForce returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasTimeInForce() bool {
	if o != nil && !IsNil(o.TimeInForce) {
		return true
	}

	return false
}

// SetTimeInForce gets a reference to the given []string and assigns it to the TimeInForce field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetTimeInForce(v []string) {
	o.TimeInForce = v
}

// GetTriggerProtect returns the TriggerProtect field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetTriggerProtect() string {
	if o == nil || IsNil(o.TriggerProtect) {
		var ret string
		return ret
	}
	return *o.TriggerProtect
}

// GetTriggerProtectOk returns a tuple with the TriggerProtect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetTriggerProtectOk() (*string, bool) {
	if o == nil || IsNil(o.TriggerProtect) {
		return nil, false
	}
	return o.TriggerProtect, true
}

// HasTriggerProtect returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasTriggerProtect() bool {
	if o != nil && !IsNil(o.TriggerProtect) {
		return true
	}

	return false
}

// SetTriggerProtect gets a reference to the given string and assigns it to the TriggerProtect field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetTriggerProtect(v string) {
	o.TriggerProtect = &v
}

// GetUnderlyingSubType returns the UnderlyingSubType field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetUnderlyingSubType() []string {
	if o == nil || IsNil(o.UnderlyingSubType) {
		var ret []string
		return ret
	}
	return o.UnderlyingSubType
}

// GetUnderlyingSubTypeOk returns a tuple with the UnderlyingSubType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetUnderlyingSubTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.UnderlyingSubType) {
		return nil, false
	}
	return o.UnderlyingSubType, true
}

// HasUnderlyingSubType returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasUnderlyingSubType() bool {
	if o != nil && !IsNil(o.UnderlyingSubType) {
		return true
	}

	return false
}

// SetUnderlyingSubType gets a reference to the given []string and assigns it to the UnderlyingSubType field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetUnderlyingSubType(v []string) {
	o.UnderlyingSubType = v
}

// GetUnderlyingType returns the UnderlyingType field value if set, zero value otherwise.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetUnderlyingType() string {
	if o == nil || IsNil(o.UnderlyingType) {
		var ret string
		return ret
	}
	return *o.UnderlyingType
}

// GetUnderlyingTypeOk returns a tuple with the UnderlyingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) GetUnderlyingTypeOk() (*string, bool) {
	if o == nil || IsNil(o.UnderlyingType) {
		return nil, false
	}
	return o.UnderlyingType, true
}

// HasUnderlyingType returns a boolean if a field has been set.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) HasUnderlyingType() bool {
	if o != nil && !IsNil(o.UnderlyingType) {
		return true
	}

	return false
}

// SetUnderlyingType gets a reference to the given string and assigns it to the UnderlyingType field.
func (o *CmfuturesGetExchangeInfoV1RespSymbolsInner) SetUnderlyingType(v string) {
	o.UnderlyingType = &v
}

func (o CmfuturesGetExchangeInfoV1RespSymbolsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CmfuturesGetExchangeInfoV1RespSymbolsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrderType) {
		toSerialize["OrderType"] = o.OrderType
	}
	if !IsNil(o.BaseAsset) {
		toSerialize["baseAsset"] = o.BaseAsset
	}
	if !IsNil(o.BaseAssetPrecision) {
		toSerialize["baseAssetPrecision"] = o.BaseAssetPrecision
	}
	if !IsNil(o.ContractSize) {
		toSerialize["contractSize"] = o.ContractSize
	}
	if !IsNil(o.ContractStatus) {
		toSerialize["contractStatus"] = o.ContractStatus
	}
	if !IsNil(o.ContractType) {
		toSerialize["contractType"] = o.ContractType
	}
	if !IsNil(o.DeliveryDate) {
		toSerialize["deliveryDate"] = o.DeliveryDate
	}
	if !IsNil(o.EqualQtyPrecision) {
		toSerialize["equalQtyPrecision"] = o.EqualQtyPrecision
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.LiquidationFee) {
		toSerialize["liquidationFee"] = o.LiquidationFee
	}
	if !IsNil(o.MaintMarginPercent) {
		toSerialize["maintMarginPercent"] = o.MaintMarginPercent
	}
	if !IsNil(o.MarginAsset) {
		toSerialize["marginAsset"] = o.MarginAsset
	}
	if !IsNil(o.MarketTakeBound) {
		toSerialize["marketTakeBound"] = o.MarketTakeBound
	}
	if !IsNil(o.OnboardDate) {
		toSerialize["onboardDate"] = o.OnboardDate
	}
	if !IsNil(o.Pair) {
		toSerialize["pair"] = o.Pair
	}
	if !IsNil(o.PricePrecision) {
		toSerialize["pricePrecision"] = o.PricePrecision
	}
	if !IsNil(o.QuantityPrecision) {
		toSerialize["quantityPrecision"] = o.QuantityPrecision
	}
	if !IsNil(o.QuoteAsset) {
		toSerialize["quoteAsset"] = o.QuoteAsset
	}
	if !IsNil(o.QuotePrecision) {
		toSerialize["quotePrecision"] = o.QuotePrecision
	}
	if !IsNil(o.RequiredMarginPercent) {
		toSerialize["requiredMarginPercent"] = o.RequiredMarginPercent
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.TimeInForce) {
		toSerialize["timeInForce"] = o.TimeInForce
	}
	if !IsNil(o.TriggerProtect) {
		toSerialize["triggerProtect"] = o.TriggerProtect
	}
	if !IsNil(o.UnderlyingSubType) {
		toSerialize["underlyingSubType"] = o.UnderlyingSubType
	}
	if !IsNil(o.UnderlyingType) {
		toSerialize["underlyingType"] = o.UnderlyingType
	}
	return toSerialize, nil
}

type NullableCmfuturesGetExchangeInfoV1RespSymbolsInner struct {
	value *CmfuturesGetExchangeInfoV1RespSymbolsInner
	isSet bool
}

func (v NullableCmfuturesGetExchangeInfoV1RespSymbolsInner) Get() *CmfuturesGetExchangeInfoV1RespSymbolsInner {
	return v.value
}

func (v *NullableCmfuturesGetExchangeInfoV1RespSymbolsInner) Set(val *CmfuturesGetExchangeInfoV1RespSymbolsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCmfuturesGetExchangeInfoV1RespSymbolsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCmfuturesGetExchangeInfoV1RespSymbolsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCmfuturesGetExchangeInfoV1RespSymbolsInner(val *CmfuturesGetExchangeInfoV1RespSymbolsInner) *NullableCmfuturesGetExchangeInfoV1RespSymbolsInner {
	return &NullableCmfuturesGetExchangeInfoV1RespSymbolsInner{value: val, isSet: true}
}

func (v NullableCmfuturesGetExchangeInfoV1RespSymbolsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCmfuturesGetExchangeInfoV1RespSymbolsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


