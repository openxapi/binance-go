/*
Binance Ufutures API

OpenAPI specification for Binance cryptocurrency exchange - Ufutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ufutures

import (
	"encoding/json"
)

// checks if the UfuturesGetFuturesDataTakerlongshortRatioRespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UfuturesGetFuturesDataTakerlongshortRatioRespItem{}

// UfuturesGetFuturesDataTakerlongshortRatioRespItem struct for UfuturesGetFuturesDataTakerlongshortRatioRespItem
type UfuturesGetFuturesDataTakerlongshortRatioRespItem struct {
	BuySellRatio *string `json:"buySellRatio,omitempty"`
	BuyVol *string `json:"buyVol,omitempty"`
	SellVol *string `json:"sellVol,omitempty"`
	Timestamp *string `json:"timestamp,omitempty"`
}

// NewUfuturesGetFuturesDataTakerlongshortRatioRespItem instantiates a new UfuturesGetFuturesDataTakerlongshortRatioRespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUfuturesGetFuturesDataTakerlongshortRatioRespItem() *UfuturesGetFuturesDataTakerlongshortRatioRespItem {
	this := UfuturesGetFuturesDataTakerlongshortRatioRespItem{}
	return &this
}

// NewUfuturesGetFuturesDataTakerlongshortRatioRespItemWithDefaults instantiates a new UfuturesGetFuturesDataTakerlongshortRatioRespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUfuturesGetFuturesDataTakerlongshortRatioRespItemWithDefaults() *UfuturesGetFuturesDataTakerlongshortRatioRespItem {
	this := UfuturesGetFuturesDataTakerlongshortRatioRespItem{}
	return &this
}

// GetBuySellRatio returns the BuySellRatio field value if set, zero value otherwise.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) GetBuySellRatio() string {
	if o == nil || IsNil(o.BuySellRatio) {
		var ret string
		return ret
	}
	return *o.BuySellRatio
}

// GetBuySellRatioOk returns a tuple with the BuySellRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) GetBuySellRatioOk() (*string, bool) {
	if o == nil || IsNil(o.BuySellRatio) {
		return nil, false
	}
	return o.BuySellRatio, true
}

// HasBuySellRatio returns a boolean if a field has been set.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) HasBuySellRatio() bool {
	if o != nil && !IsNil(o.BuySellRatio) {
		return true
	}

	return false
}

// SetBuySellRatio gets a reference to the given string and assigns it to the BuySellRatio field.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) SetBuySellRatio(v string) {
	o.BuySellRatio = &v
}

// GetBuyVol returns the BuyVol field value if set, zero value otherwise.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) GetBuyVol() string {
	if o == nil || IsNil(o.BuyVol) {
		var ret string
		return ret
	}
	return *o.BuyVol
}

// GetBuyVolOk returns a tuple with the BuyVol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) GetBuyVolOk() (*string, bool) {
	if o == nil || IsNil(o.BuyVol) {
		return nil, false
	}
	return o.BuyVol, true
}

// HasBuyVol returns a boolean if a field has been set.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) HasBuyVol() bool {
	if o != nil && !IsNil(o.BuyVol) {
		return true
	}

	return false
}

// SetBuyVol gets a reference to the given string and assigns it to the BuyVol field.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) SetBuyVol(v string) {
	o.BuyVol = &v
}

// GetSellVol returns the SellVol field value if set, zero value otherwise.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) GetSellVol() string {
	if o == nil || IsNil(o.SellVol) {
		var ret string
		return ret
	}
	return *o.SellVol
}

// GetSellVolOk returns a tuple with the SellVol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) GetSellVolOk() (*string, bool) {
	if o == nil || IsNil(o.SellVol) {
		return nil, false
	}
	return o.SellVol, true
}

// HasSellVol returns a boolean if a field has been set.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) HasSellVol() bool {
	if o != nil && !IsNil(o.SellVol) {
		return true
	}

	return false
}

// SetSellVol gets a reference to the given string and assigns it to the SellVol field.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) SetSellVol(v string) {
	o.SellVol = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) GetTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *UfuturesGetFuturesDataTakerlongshortRatioRespItem) SetTimestamp(v string) {
	o.Timestamp = &v
}

func (o UfuturesGetFuturesDataTakerlongshortRatioRespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UfuturesGetFuturesDataTakerlongshortRatioRespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuySellRatio) {
		toSerialize["buySellRatio"] = o.BuySellRatio
	}
	if !IsNil(o.BuyVol) {
		toSerialize["buyVol"] = o.BuyVol
	}
	if !IsNil(o.SellVol) {
		toSerialize["sellVol"] = o.SellVol
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableUfuturesGetFuturesDataTakerlongshortRatioRespItem struct {
	value *UfuturesGetFuturesDataTakerlongshortRatioRespItem
	isSet bool
}

func (v NullableUfuturesGetFuturesDataTakerlongshortRatioRespItem) Get() *UfuturesGetFuturesDataTakerlongshortRatioRespItem {
	return v.value
}

func (v *NullableUfuturesGetFuturesDataTakerlongshortRatioRespItem) Set(val *UfuturesGetFuturesDataTakerlongshortRatioRespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableUfuturesGetFuturesDataTakerlongshortRatioRespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableUfuturesGetFuturesDataTakerlongshortRatioRespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUfuturesGetFuturesDataTakerlongshortRatioRespItem(val *UfuturesGetFuturesDataTakerlongshortRatioRespItem) *NullableUfuturesGetFuturesDataTakerlongshortRatioRespItem {
	return &NullableUfuturesGetFuturesDataTakerlongshortRatioRespItem{value: val, isSet: true}
}

func (v NullableUfuturesGetFuturesDataTakerlongshortRatioRespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUfuturesGetFuturesDataTakerlongshortRatioRespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


