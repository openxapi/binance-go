/*
Binance Ufutures API

OpenAPI specification for Binance cryptocurrency exchange - Ufutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ufutures

import (
	"encoding/json"
)

// checks if the UfuturesGetConstituentsV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UfuturesGetConstituentsV1Resp{}

// UfuturesGetConstituentsV1Resp struct for UfuturesGetConstituentsV1Resp
type UfuturesGetConstituentsV1Resp struct {
	Constituents []UfuturesGetConstituentsV1RespConstituentsInner `json:"constituents,omitempty"`
	Symbol *string `json:"symbol,omitempty"`
	Time *int64 `json:"time,omitempty"`
}

// NewUfuturesGetConstituentsV1Resp instantiates a new UfuturesGetConstituentsV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUfuturesGetConstituentsV1Resp() *UfuturesGetConstituentsV1Resp {
	this := UfuturesGetConstituentsV1Resp{}
	return &this
}

// NewUfuturesGetConstituentsV1RespWithDefaults instantiates a new UfuturesGetConstituentsV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUfuturesGetConstituentsV1RespWithDefaults() *UfuturesGetConstituentsV1Resp {
	this := UfuturesGetConstituentsV1Resp{}
	return &this
}

// GetConstituents returns the Constituents field value if set, zero value otherwise.
func (o *UfuturesGetConstituentsV1Resp) GetConstituents() []UfuturesGetConstituentsV1RespConstituentsInner {
	if o == nil || IsNil(o.Constituents) {
		var ret []UfuturesGetConstituentsV1RespConstituentsInner
		return ret
	}
	return o.Constituents
}

// GetConstituentsOk returns a tuple with the Constituents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UfuturesGetConstituentsV1Resp) GetConstituentsOk() ([]UfuturesGetConstituentsV1RespConstituentsInner, bool) {
	if o == nil || IsNil(o.Constituents) {
		return nil, false
	}
	return o.Constituents, true
}

// HasConstituents returns a boolean if a field has been set.
func (o *UfuturesGetConstituentsV1Resp) HasConstituents() bool {
	if o != nil && !IsNil(o.Constituents) {
		return true
	}

	return false
}

// SetConstituents gets a reference to the given []UfuturesGetConstituentsV1RespConstituentsInner and assigns it to the Constituents field.
func (o *UfuturesGetConstituentsV1Resp) SetConstituents(v []UfuturesGetConstituentsV1RespConstituentsInner) {
	o.Constituents = v
}

// GetSymbol returns the Symbol field value if set, zero value otherwise.
func (o *UfuturesGetConstituentsV1Resp) GetSymbol() string {
	if o == nil || IsNil(o.Symbol) {
		var ret string
		return ret
	}
	return *o.Symbol
}

// GetSymbolOk returns a tuple with the Symbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UfuturesGetConstituentsV1Resp) GetSymbolOk() (*string, bool) {
	if o == nil || IsNil(o.Symbol) {
		return nil, false
	}
	return o.Symbol, true
}

// HasSymbol returns a boolean if a field has been set.
func (o *UfuturesGetConstituentsV1Resp) HasSymbol() bool {
	if o != nil && !IsNil(o.Symbol) {
		return true
	}

	return false
}

// SetSymbol gets a reference to the given string and assigns it to the Symbol field.
func (o *UfuturesGetConstituentsV1Resp) SetSymbol(v string) {
	o.Symbol = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *UfuturesGetConstituentsV1Resp) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UfuturesGetConstituentsV1Resp) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *UfuturesGetConstituentsV1Resp) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *UfuturesGetConstituentsV1Resp) SetTime(v int64) {
	o.Time = &v
}

func (o UfuturesGetConstituentsV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UfuturesGetConstituentsV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Constituents) {
		toSerialize["constituents"] = o.Constituents
	}
	if !IsNil(o.Symbol) {
		toSerialize["symbol"] = o.Symbol
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	return toSerialize, nil
}

type NullableUfuturesGetConstituentsV1Resp struct {
	value *UfuturesGetConstituentsV1Resp
	isSet bool
}

func (v NullableUfuturesGetConstituentsV1Resp) Get() *UfuturesGetConstituentsV1Resp {
	return v.value
}

func (v *NullableUfuturesGetConstituentsV1Resp) Set(val *UfuturesGetConstituentsV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableUfuturesGetConstituentsV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableUfuturesGetConstituentsV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUfuturesGetConstituentsV1Resp(val *UfuturesGetConstituentsV1Resp) *NullableUfuturesGetConstituentsV1Resp {
	return &NullableUfuturesGetConstituentsV1Resp{value: val, isSet: true}
}

func (v NullableUfuturesGetConstituentsV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUfuturesGetConstituentsV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


