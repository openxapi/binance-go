/*
Binance Ufutures API

OpenAPI specification for Binance cryptocurrency exchange - Ufutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ufutures

import (
	"encoding/json"
)

// checks if the UfuturesCreateConvertAcceptQuoteV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UfuturesCreateConvertAcceptQuoteV1Resp{}

// UfuturesCreateConvertAcceptQuoteV1Resp struct for UfuturesCreateConvertAcceptQuoteV1Resp
type UfuturesCreateConvertAcceptQuoteV1Resp struct {
	CreateTime *int64 `json:"createTime,omitempty"`
	OrderId *string `json:"orderId,omitempty"`
	OrderStatus *string `json:"orderStatus,omitempty"`
}

// NewUfuturesCreateConvertAcceptQuoteV1Resp instantiates a new UfuturesCreateConvertAcceptQuoteV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUfuturesCreateConvertAcceptQuoteV1Resp() *UfuturesCreateConvertAcceptQuoteV1Resp {
	this := UfuturesCreateConvertAcceptQuoteV1Resp{}
	return &this
}

// NewUfuturesCreateConvertAcceptQuoteV1RespWithDefaults instantiates a new UfuturesCreateConvertAcceptQuoteV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUfuturesCreateConvertAcceptQuoteV1RespWithDefaults() *UfuturesCreateConvertAcceptQuoteV1Resp {
	this := UfuturesCreateConvertAcceptQuoteV1Resp{}
	return &this
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *UfuturesCreateConvertAcceptQuoteV1Resp) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime) {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UfuturesCreateConvertAcceptQuoteV1Resp) GetCreateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *UfuturesCreateConvertAcceptQuoteV1Resp) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *UfuturesCreateConvertAcceptQuoteV1Resp) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetOrderId returns the OrderId field value if set, zero value otherwise.
func (o *UfuturesCreateConvertAcceptQuoteV1Resp) GetOrderId() string {
	if o == nil || IsNil(o.OrderId) {
		var ret string
		return ret
	}
	return *o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UfuturesCreateConvertAcceptQuoteV1Resp) GetOrderIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrderId) {
		return nil, false
	}
	return o.OrderId, true
}

// HasOrderId returns a boolean if a field has been set.
func (o *UfuturesCreateConvertAcceptQuoteV1Resp) HasOrderId() bool {
	if o != nil && !IsNil(o.OrderId) {
		return true
	}

	return false
}

// SetOrderId gets a reference to the given string and assigns it to the OrderId field.
func (o *UfuturesCreateConvertAcceptQuoteV1Resp) SetOrderId(v string) {
	o.OrderId = &v
}

// GetOrderStatus returns the OrderStatus field value if set, zero value otherwise.
func (o *UfuturesCreateConvertAcceptQuoteV1Resp) GetOrderStatus() string {
	if o == nil || IsNil(o.OrderStatus) {
		var ret string
		return ret
	}
	return *o.OrderStatus
}

// GetOrderStatusOk returns a tuple with the OrderStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UfuturesCreateConvertAcceptQuoteV1Resp) GetOrderStatusOk() (*string, bool) {
	if o == nil || IsNil(o.OrderStatus) {
		return nil, false
	}
	return o.OrderStatus, true
}

// HasOrderStatus returns a boolean if a field has been set.
func (o *UfuturesCreateConvertAcceptQuoteV1Resp) HasOrderStatus() bool {
	if o != nil && !IsNil(o.OrderStatus) {
		return true
	}

	return false
}

// SetOrderStatus gets a reference to the given string and assigns it to the OrderStatus field.
func (o *UfuturesCreateConvertAcceptQuoteV1Resp) SetOrderStatus(v string) {
	o.OrderStatus = &v
}

func (o UfuturesCreateConvertAcceptQuoteV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UfuturesCreateConvertAcceptQuoteV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.OrderId) {
		toSerialize["orderId"] = o.OrderId
	}
	if !IsNil(o.OrderStatus) {
		toSerialize["orderStatus"] = o.OrderStatus
	}
	return toSerialize, nil
}

type NullableUfuturesCreateConvertAcceptQuoteV1Resp struct {
	value *UfuturesCreateConvertAcceptQuoteV1Resp
	isSet bool
}

func (v NullableUfuturesCreateConvertAcceptQuoteV1Resp) Get() *UfuturesCreateConvertAcceptQuoteV1Resp {
	return v.value
}

func (v *NullableUfuturesCreateConvertAcceptQuoteV1Resp) Set(val *UfuturesCreateConvertAcceptQuoteV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableUfuturesCreateConvertAcceptQuoteV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableUfuturesCreateConvertAcceptQuoteV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUfuturesCreateConvertAcceptQuoteV1Resp(val *UfuturesCreateConvertAcceptQuoteV1Resp) *NullableUfuturesCreateConvertAcceptQuoteV1Resp {
	return &NullableUfuturesCreateConvertAcceptQuoteV1Resp{value: val, isSet: true}
}

func (v NullableUfuturesCreateConvertAcceptQuoteV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUfuturesCreateConvertAcceptQuoteV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


