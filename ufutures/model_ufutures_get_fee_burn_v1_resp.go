/*
Binance Ufutures API

OpenAPI specification for Binance cryptocurrency exchange - Ufutures API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ufutures

import (
	"encoding/json"
)

// checks if the UfuturesGetFeeBurnV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UfuturesGetFeeBurnV1Resp{}

// UfuturesGetFeeBurnV1Resp struct for UfuturesGetFeeBurnV1Resp
type UfuturesGetFeeBurnV1Resp struct {
	FeeBurn *bool `json:"feeBurn,omitempty"`
}

// NewUfuturesGetFeeBurnV1Resp instantiates a new UfuturesGetFeeBurnV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUfuturesGetFeeBurnV1Resp() *UfuturesGetFeeBurnV1Resp {
	this := UfuturesGetFeeBurnV1Resp{}
	return &this
}

// NewUfuturesGetFeeBurnV1RespWithDefaults instantiates a new UfuturesGetFeeBurnV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUfuturesGetFeeBurnV1RespWithDefaults() *UfuturesGetFeeBurnV1Resp {
	this := UfuturesGetFeeBurnV1Resp{}
	return &this
}

// GetFeeBurn returns the FeeBurn field value if set, zero value otherwise.
func (o *UfuturesGetFeeBurnV1Resp) GetFeeBurn() bool {
	if o == nil || IsNil(o.FeeBurn) {
		var ret bool
		return ret
	}
	return *o.FeeBurn
}

// GetFeeBurnOk returns a tuple with the FeeBurn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UfuturesGetFeeBurnV1Resp) GetFeeBurnOk() (*bool, bool) {
	if o == nil || IsNil(o.FeeBurn) {
		return nil, false
	}
	return o.FeeBurn, true
}

// HasFeeBurn returns a boolean if a field has been set.
func (o *UfuturesGetFeeBurnV1Resp) HasFeeBurn() bool {
	if o != nil && !IsNil(o.FeeBurn) {
		return true
	}

	return false
}

// SetFeeBurn gets a reference to the given bool and assigns it to the FeeBurn field.
func (o *UfuturesGetFeeBurnV1Resp) SetFeeBurn(v bool) {
	o.FeeBurn = &v
}

func (o UfuturesGetFeeBurnV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UfuturesGetFeeBurnV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FeeBurn) {
		toSerialize["feeBurn"] = o.FeeBurn
	}
	return toSerialize, nil
}

type NullableUfuturesGetFeeBurnV1Resp struct {
	value *UfuturesGetFeeBurnV1Resp
	isSet bool
}

func (v NullableUfuturesGetFeeBurnV1Resp) Get() *UfuturesGetFeeBurnV1Resp {
	return v.value
}

func (v *NullableUfuturesGetFeeBurnV1Resp) Set(val *UfuturesGetFeeBurnV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableUfuturesGetFeeBurnV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableUfuturesGetFeeBurnV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUfuturesGetFeeBurnV1Resp(val *UfuturesGetFeeBurnV1Resp) *NullableUfuturesGetFeeBurnV1Resp {
	return &NullableUfuturesGetFeeBurnV1Resp{value: val, isSet: true}
}

func (v NullableUfuturesGetFeeBurnV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUfuturesGetFeeBurnV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


