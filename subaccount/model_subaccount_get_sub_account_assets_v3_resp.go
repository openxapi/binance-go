/*
Binance Sub Account API

OpenAPI specification for Binance exchange - Subaccount API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package subaccount

import (
	"encoding/json"
)

// checks if the SubaccountGetSubAccountAssetsV3Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubaccountGetSubAccountAssetsV3Resp{}

// SubaccountGetSubAccountAssetsV3Resp struct for SubaccountGetSubAccountAssetsV3Resp
type SubaccountGetSubAccountAssetsV3Resp struct {
	Balances []SubaccountGetSubAccountAssetsV3RespBalancesInner `json:"balances,omitempty"`
}

// NewSubaccountGetSubAccountAssetsV3Resp instantiates a new SubaccountGetSubAccountAssetsV3Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubaccountGetSubAccountAssetsV3Resp() *SubaccountGetSubAccountAssetsV3Resp {
	this := SubaccountGetSubAccountAssetsV3Resp{}
	return &this
}

// NewSubaccountGetSubAccountAssetsV3RespWithDefaults instantiates a new SubaccountGetSubAccountAssetsV3Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubaccountGetSubAccountAssetsV3RespWithDefaults() *SubaccountGetSubAccountAssetsV3Resp {
	this := SubaccountGetSubAccountAssetsV3Resp{}
	return &this
}

// GetBalances returns the Balances field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountAssetsV3Resp) GetBalances() []SubaccountGetSubAccountAssetsV3RespBalancesInner {
	if o == nil || IsNil(o.Balances) {
		var ret []SubaccountGetSubAccountAssetsV3RespBalancesInner
		return ret
	}
	return o.Balances
}

// GetBalancesOk returns a tuple with the Balances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountAssetsV3Resp) GetBalancesOk() ([]SubaccountGetSubAccountAssetsV3RespBalancesInner, bool) {
	if o == nil || IsNil(o.Balances) {
		return nil, false
	}
	return o.Balances, true
}

// HasBalances returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountAssetsV3Resp) HasBalances() bool {
	if o != nil && !IsNil(o.Balances) {
		return true
	}

	return false
}

// SetBalances gets a reference to the given []SubaccountGetSubAccountAssetsV3RespBalancesInner and assigns it to the Balances field.
func (o *SubaccountGetSubAccountAssetsV3Resp) SetBalances(v []SubaccountGetSubAccountAssetsV3RespBalancesInner) {
	o.Balances = v
}

func (o SubaccountGetSubAccountAssetsV3Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubaccountGetSubAccountAssetsV3Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Balances) {
		toSerialize["balances"] = o.Balances
	}
	return toSerialize, nil
}

type NullableSubaccountGetSubAccountAssetsV3Resp struct {
	value *SubaccountGetSubAccountAssetsV3Resp
	isSet bool
}

func (v NullableSubaccountGetSubAccountAssetsV3Resp) Get() *SubaccountGetSubAccountAssetsV3Resp {
	return v.value
}

func (v *NullableSubaccountGetSubAccountAssetsV3Resp) Set(val *SubaccountGetSubAccountAssetsV3Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableSubaccountGetSubAccountAssetsV3Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableSubaccountGetSubAccountAssetsV3Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubaccountGetSubAccountAssetsV3Resp(val *SubaccountGetSubAccountAssetsV3Resp) *NullableSubaccountGetSubAccountAssetsV3Resp {
	return &NullableSubaccountGetSubAccountAssetsV3Resp{value: val, isSet: true}
}

func (v NullableSubaccountGetSubAccountAssetsV3Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubaccountGetSubAccountAssetsV3Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


