/*
Binance Sub Account API

OpenAPI specification for Binance exchange - Subaccount API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package subaccount

import (
	"encoding/json"
)

// checks if the SubaccountGetSubAccountUniversalTransferV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubaccountGetSubAccountUniversalTransferV1Resp{}

// SubaccountGetSubAccountUniversalTransferV1Resp struct for SubaccountGetSubAccountUniversalTransferV1Resp
type SubaccountGetSubAccountUniversalTransferV1Resp struct {
	Result []SubaccountGetSubAccountUniversalTransferV1RespResultInner `json:"result,omitempty"`
	TotalCount *int32 `json:"totalCount,omitempty"`
}

// NewSubaccountGetSubAccountUniversalTransferV1Resp instantiates a new SubaccountGetSubAccountUniversalTransferV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubaccountGetSubAccountUniversalTransferV1Resp() *SubaccountGetSubAccountUniversalTransferV1Resp {
	this := SubaccountGetSubAccountUniversalTransferV1Resp{}
	return &this
}

// NewSubaccountGetSubAccountUniversalTransferV1RespWithDefaults instantiates a new SubaccountGetSubAccountUniversalTransferV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubaccountGetSubAccountUniversalTransferV1RespWithDefaults() *SubaccountGetSubAccountUniversalTransferV1Resp {
	this := SubaccountGetSubAccountUniversalTransferV1Resp{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountUniversalTransferV1Resp) GetResult() []SubaccountGetSubAccountUniversalTransferV1RespResultInner {
	if o == nil || IsNil(o.Result) {
		var ret []SubaccountGetSubAccountUniversalTransferV1RespResultInner
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountUniversalTransferV1Resp) GetResultOk() ([]SubaccountGetSubAccountUniversalTransferV1RespResultInner, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountUniversalTransferV1Resp) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []SubaccountGetSubAccountUniversalTransferV1RespResultInner and assigns it to the Result field.
func (o *SubaccountGetSubAccountUniversalTransferV1Resp) SetResult(v []SubaccountGetSubAccountUniversalTransferV1RespResultInner) {
	o.Result = v
}

// GetTotalCount returns the TotalCount field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountUniversalTransferV1Resp) GetTotalCount() int32 {
	if o == nil || IsNil(o.TotalCount) {
		var ret int32
		return ret
	}
	return *o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountUniversalTransferV1Resp) GetTotalCountOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalCount) {
		return nil, false
	}
	return o.TotalCount, true
}

// HasTotalCount returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountUniversalTransferV1Resp) HasTotalCount() bool {
	if o != nil && !IsNil(o.TotalCount) {
		return true
	}

	return false
}

// SetTotalCount gets a reference to the given int32 and assigns it to the TotalCount field.
func (o *SubaccountGetSubAccountUniversalTransferV1Resp) SetTotalCount(v int32) {
	o.TotalCount = &v
}

func (o SubaccountGetSubAccountUniversalTransferV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubaccountGetSubAccountUniversalTransferV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.TotalCount) {
		toSerialize["totalCount"] = o.TotalCount
	}
	return toSerialize, nil
}

type NullableSubaccountGetSubAccountUniversalTransferV1Resp struct {
	value *SubaccountGetSubAccountUniversalTransferV1Resp
	isSet bool
}

func (v NullableSubaccountGetSubAccountUniversalTransferV1Resp) Get() *SubaccountGetSubAccountUniversalTransferV1Resp {
	return v.value
}

func (v *NullableSubaccountGetSubAccountUniversalTransferV1Resp) Set(val *SubaccountGetSubAccountUniversalTransferV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableSubaccountGetSubAccountUniversalTransferV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableSubaccountGetSubAccountUniversalTransferV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubaccountGetSubAccountUniversalTransferV1Resp(val *SubaccountGetSubAccountUniversalTransferV1Resp) *NullableSubaccountGetSubAccountUniversalTransferV1Resp {
	return &NullableSubaccountGetSubAccountUniversalTransferV1Resp{value: val, isSet: true}
}

func (v NullableSubaccountGetSubAccountUniversalTransferV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubaccountGetSubAccountUniversalTransferV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


