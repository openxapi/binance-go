/*
Binance Sub Account API

OpenAPI specification for Binance exchange - Subaccount API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package subaccount

import (
	"encoding/json"
)

// checks if the SubaccountGetSubAccountFuturesInternalTransferV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubaccountGetSubAccountFuturesInternalTransferV1Resp{}

// SubaccountGetSubAccountFuturesInternalTransferV1Resp struct for SubaccountGetSubAccountFuturesInternalTransferV1Resp
type SubaccountGetSubAccountFuturesInternalTransferV1Resp struct {
	FuturesType *int32 `json:"futuresType,omitempty"`
	Success *bool `json:"success,omitempty"`
	Transfers []SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner `json:"transfers,omitempty"`
}

// NewSubaccountGetSubAccountFuturesInternalTransferV1Resp instantiates a new SubaccountGetSubAccountFuturesInternalTransferV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubaccountGetSubAccountFuturesInternalTransferV1Resp() *SubaccountGetSubAccountFuturesInternalTransferV1Resp {
	this := SubaccountGetSubAccountFuturesInternalTransferV1Resp{}
	return &this
}

// NewSubaccountGetSubAccountFuturesInternalTransferV1RespWithDefaults instantiates a new SubaccountGetSubAccountFuturesInternalTransferV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubaccountGetSubAccountFuturesInternalTransferV1RespWithDefaults() *SubaccountGetSubAccountFuturesInternalTransferV1Resp {
	this := SubaccountGetSubAccountFuturesInternalTransferV1Resp{}
	return &this
}

// GetFuturesType returns the FuturesType field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1Resp) GetFuturesType() int32 {
	if o == nil || IsNil(o.FuturesType) {
		var ret int32
		return ret
	}
	return *o.FuturesType
}

// GetFuturesTypeOk returns a tuple with the FuturesType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1Resp) GetFuturesTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.FuturesType) {
		return nil, false
	}
	return o.FuturesType, true
}

// HasFuturesType returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1Resp) HasFuturesType() bool {
	if o != nil && !IsNil(o.FuturesType) {
		return true
	}

	return false
}

// SetFuturesType gets a reference to the given int32 and assigns it to the FuturesType field.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1Resp) SetFuturesType(v int32) {
	o.FuturesType = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1Resp) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1Resp) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1Resp) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1Resp) SetSuccess(v bool) {
	o.Success = &v
}

// GetTransfers returns the Transfers field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1Resp) GetTransfers() []SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner {
	if o == nil || IsNil(o.Transfers) {
		var ret []SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner
		return ret
	}
	return o.Transfers
}

// GetTransfersOk returns a tuple with the Transfers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1Resp) GetTransfersOk() ([]SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner, bool) {
	if o == nil || IsNil(o.Transfers) {
		return nil, false
	}
	return o.Transfers, true
}

// HasTransfers returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1Resp) HasTransfers() bool {
	if o != nil && !IsNil(o.Transfers) {
		return true
	}

	return false
}

// SetTransfers gets a reference to the given []SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner and assigns it to the Transfers field.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1Resp) SetTransfers(v []SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) {
	o.Transfers = v
}

func (o SubaccountGetSubAccountFuturesInternalTransferV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubaccountGetSubAccountFuturesInternalTransferV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FuturesType) {
		toSerialize["futuresType"] = o.FuturesType
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	if !IsNil(o.Transfers) {
		toSerialize["transfers"] = o.Transfers
	}
	return toSerialize, nil
}

type NullableSubaccountGetSubAccountFuturesInternalTransferV1Resp struct {
	value *SubaccountGetSubAccountFuturesInternalTransferV1Resp
	isSet bool
}

func (v NullableSubaccountGetSubAccountFuturesInternalTransferV1Resp) Get() *SubaccountGetSubAccountFuturesInternalTransferV1Resp {
	return v.value
}

func (v *NullableSubaccountGetSubAccountFuturesInternalTransferV1Resp) Set(val *SubaccountGetSubAccountFuturesInternalTransferV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableSubaccountGetSubAccountFuturesInternalTransferV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableSubaccountGetSubAccountFuturesInternalTransferV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubaccountGetSubAccountFuturesInternalTransferV1Resp(val *SubaccountGetSubAccountFuturesInternalTransferV1Resp) *NullableSubaccountGetSubAccountFuturesInternalTransferV1Resp {
	return &NullableSubaccountGetSubAccountFuturesInternalTransferV1Resp{value: val, isSet: true}
}

func (v NullableSubaccountGetSubAccountFuturesInternalTransferV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubaccountGetSubAccountFuturesInternalTransferV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


