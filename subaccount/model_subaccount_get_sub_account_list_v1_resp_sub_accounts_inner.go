/*
Binance Sub Account API

OpenAPI specification for Binance exchange - Subaccount API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package subaccount

import (
	"encoding/json"
)

// checks if the SubaccountGetSubAccountListV1RespSubAccountsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubaccountGetSubAccountListV1RespSubAccountsInner{}

// SubaccountGetSubAccountListV1RespSubAccountsInner struct for SubaccountGetSubAccountListV1RespSubAccountsInner
type SubaccountGetSubAccountListV1RespSubAccountsInner struct {
	CreateTime *int64 `json:"createTime,omitempty"`
	Email *string `json:"email,omitempty"`
	IsAssetManagementSubAccount *bool `json:"isAssetManagementSubAccount,omitempty"`
	IsFreeze *bool `json:"isFreeze,omitempty"`
	IsManagedSubAccount *bool `json:"isManagedSubAccount,omitempty"`
}

// NewSubaccountGetSubAccountListV1RespSubAccountsInner instantiates a new SubaccountGetSubAccountListV1RespSubAccountsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubaccountGetSubAccountListV1RespSubAccountsInner() *SubaccountGetSubAccountListV1RespSubAccountsInner {
	this := SubaccountGetSubAccountListV1RespSubAccountsInner{}
	return &this
}

// NewSubaccountGetSubAccountListV1RespSubAccountsInnerWithDefaults instantiates a new SubaccountGetSubAccountListV1RespSubAccountsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubaccountGetSubAccountListV1RespSubAccountsInnerWithDefaults() *SubaccountGetSubAccountListV1RespSubAccountsInner {
	this := SubaccountGetSubAccountListV1RespSubAccountsInner{}
	return &this
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) GetCreateTime() int64 {
	if o == nil || IsNil(o.CreateTime) {
		var ret int64
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) GetCreateTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.CreateTime) {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) HasCreateTime() bool {
	if o != nil && !IsNil(o.CreateTime) {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given int64 and assigns it to the CreateTime field.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) SetCreateTime(v int64) {
	o.CreateTime = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) SetEmail(v string) {
	o.Email = &v
}

// GetIsAssetManagementSubAccount returns the IsAssetManagementSubAccount field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) GetIsAssetManagementSubAccount() bool {
	if o == nil || IsNil(o.IsAssetManagementSubAccount) {
		var ret bool
		return ret
	}
	return *o.IsAssetManagementSubAccount
}

// GetIsAssetManagementSubAccountOk returns a tuple with the IsAssetManagementSubAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) GetIsAssetManagementSubAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.IsAssetManagementSubAccount) {
		return nil, false
	}
	return o.IsAssetManagementSubAccount, true
}

// HasIsAssetManagementSubAccount returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) HasIsAssetManagementSubAccount() bool {
	if o != nil && !IsNil(o.IsAssetManagementSubAccount) {
		return true
	}

	return false
}

// SetIsAssetManagementSubAccount gets a reference to the given bool and assigns it to the IsAssetManagementSubAccount field.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) SetIsAssetManagementSubAccount(v bool) {
	o.IsAssetManagementSubAccount = &v
}

// GetIsFreeze returns the IsFreeze field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) GetIsFreeze() bool {
	if o == nil || IsNil(o.IsFreeze) {
		var ret bool
		return ret
	}
	return *o.IsFreeze
}

// GetIsFreezeOk returns a tuple with the IsFreeze field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) GetIsFreezeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsFreeze) {
		return nil, false
	}
	return o.IsFreeze, true
}

// HasIsFreeze returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) HasIsFreeze() bool {
	if o != nil && !IsNil(o.IsFreeze) {
		return true
	}

	return false
}

// SetIsFreeze gets a reference to the given bool and assigns it to the IsFreeze field.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) SetIsFreeze(v bool) {
	o.IsFreeze = &v
}

// GetIsManagedSubAccount returns the IsManagedSubAccount field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) GetIsManagedSubAccount() bool {
	if o == nil || IsNil(o.IsManagedSubAccount) {
		var ret bool
		return ret
	}
	return *o.IsManagedSubAccount
}

// GetIsManagedSubAccountOk returns a tuple with the IsManagedSubAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) GetIsManagedSubAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.IsManagedSubAccount) {
		return nil, false
	}
	return o.IsManagedSubAccount, true
}

// HasIsManagedSubAccount returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) HasIsManagedSubAccount() bool {
	if o != nil && !IsNil(o.IsManagedSubAccount) {
		return true
	}

	return false
}

// SetIsManagedSubAccount gets a reference to the given bool and assigns it to the IsManagedSubAccount field.
func (o *SubaccountGetSubAccountListV1RespSubAccountsInner) SetIsManagedSubAccount(v bool) {
	o.IsManagedSubAccount = &v
}

func (o SubaccountGetSubAccountListV1RespSubAccountsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubaccountGetSubAccountListV1RespSubAccountsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreateTime) {
		toSerialize["createTime"] = o.CreateTime
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.IsAssetManagementSubAccount) {
		toSerialize["isAssetManagementSubAccount"] = o.IsAssetManagementSubAccount
	}
	if !IsNil(o.IsFreeze) {
		toSerialize["isFreeze"] = o.IsFreeze
	}
	if !IsNil(o.IsManagedSubAccount) {
		toSerialize["isManagedSubAccount"] = o.IsManagedSubAccount
	}
	return toSerialize, nil
}

type NullableSubaccountGetSubAccountListV1RespSubAccountsInner struct {
	value *SubaccountGetSubAccountListV1RespSubAccountsInner
	isSet bool
}

func (v NullableSubaccountGetSubAccountListV1RespSubAccountsInner) Get() *SubaccountGetSubAccountListV1RespSubAccountsInner {
	return v.value
}

func (v *NullableSubaccountGetSubAccountListV1RespSubAccountsInner) Set(val *SubaccountGetSubAccountListV1RespSubAccountsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSubaccountGetSubAccountListV1RespSubAccountsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSubaccountGetSubAccountListV1RespSubAccountsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubaccountGetSubAccountListV1RespSubAccountsInner(val *SubaccountGetSubAccountListV1RespSubAccountsInner) *NullableSubaccountGetSubAccountListV1RespSubAccountsInner {
	return &NullableSubaccountGetSubAccountListV1RespSubAccountsInner{value: val, isSet: true}
}

func (v NullableSubaccountGetSubAccountListV1RespSubAccountsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubaccountGetSubAccountListV1RespSubAccountsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


