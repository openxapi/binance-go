/*
Binance Sub Account API

OpenAPI specification for Binance exchange - Subaccount API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package subaccount

import (
	"encoding/json"
)

// checks if the SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp{}

// SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp struct for SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp
type SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp struct {
	Count *int32 `json:"count,omitempty"`
	ManagerSubTransferHistoryVos []SubaccountGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner `json:"managerSubTransferHistoryVos,omitempty"`
}

// NewSubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp instantiates a new SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp() *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp {
	this := SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp{}
	return &this
}

// NewSubaccountGetManagedSubaccountQueryTransLogForInvestorV1RespWithDefaults instantiates a new SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubaccountGetManagedSubaccountQueryTransLogForInvestorV1RespWithDefaults() *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp {
	this := SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp{}
	return &this
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) GetCount() int32 {
	if o == nil || IsNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) GetCountOk() (*int32, bool) {
	if o == nil || IsNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) HasCount() bool {
	if o != nil && !IsNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) SetCount(v int32) {
	o.Count = &v
}

// GetManagerSubTransferHistoryVos returns the ManagerSubTransferHistoryVos field value if set, zero value otherwise.
func (o *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) GetManagerSubTransferHistoryVos() []SubaccountGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner {
	if o == nil || IsNil(o.ManagerSubTransferHistoryVos) {
		var ret []SubaccountGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner
		return ret
	}
	return o.ManagerSubTransferHistoryVos
}

// GetManagerSubTransferHistoryVosOk returns a tuple with the ManagerSubTransferHistoryVos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) GetManagerSubTransferHistoryVosOk() ([]SubaccountGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner, bool) {
	if o == nil || IsNil(o.ManagerSubTransferHistoryVos) {
		return nil, false
	}
	return o.ManagerSubTransferHistoryVos, true
}

// HasManagerSubTransferHistoryVos returns a boolean if a field has been set.
func (o *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) HasManagerSubTransferHistoryVos() bool {
	if o != nil && !IsNil(o.ManagerSubTransferHistoryVos) {
		return true
	}

	return false
}

// SetManagerSubTransferHistoryVos gets a reference to the given []SubaccountGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner and assigns it to the ManagerSubTransferHistoryVos field.
func (o *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) SetManagerSubTransferHistoryVos(v []SubaccountGetManagedSubaccountQueryTransLogForInvestorV1RespManagerSubTransferHistoryVosInner) {
	o.ManagerSubTransferHistoryVos = v
}

func (o SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !IsNil(o.ManagerSubTransferHistoryVos) {
		toSerialize["managerSubTransferHistoryVos"] = o.ManagerSubTransferHistoryVos
	}
	return toSerialize, nil
}

type NullableSubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp struct {
	value *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp
	isSet bool
}

func (v NullableSubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) Get() *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp {
	return v.value
}

func (v *NullableSubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) Set(val *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableSubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableSubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp(val *SubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) *NullableSubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp {
	return &NullableSubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp{value: val, isSet: true}
}

func (v NullableSubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubaccountGetManagedSubaccountQueryTransLogForInvestorV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


