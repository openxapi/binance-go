/*
Binance Sub Account API

OpenAPI specification for Binance exchange - Subaccount API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package subaccount

import (
	"encoding/json"
)

// checks if the SubaccountCreateSubAccountFuturesMovePositionV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubaccountCreateSubAccountFuturesMovePositionV1Resp{}

// SubaccountCreateSubAccountFuturesMovePositionV1Resp struct for SubaccountCreateSubAccountFuturesMovePositionV1Resp
type SubaccountCreateSubAccountFuturesMovePositionV1Resp struct {
	MovePositionOrders []SubaccountCreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner `json:"movePositionOrders,omitempty"`
}

// NewSubaccountCreateSubAccountFuturesMovePositionV1Resp instantiates a new SubaccountCreateSubAccountFuturesMovePositionV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubaccountCreateSubAccountFuturesMovePositionV1Resp() *SubaccountCreateSubAccountFuturesMovePositionV1Resp {
	this := SubaccountCreateSubAccountFuturesMovePositionV1Resp{}
	return &this
}

// NewSubaccountCreateSubAccountFuturesMovePositionV1RespWithDefaults instantiates a new SubaccountCreateSubAccountFuturesMovePositionV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubaccountCreateSubAccountFuturesMovePositionV1RespWithDefaults() *SubaccountCreateSubAccountFuturesMovePositionV1Resp {
	this := SubaccountCreateSubAccountFuturesMovePositionV1Resp{}
	return &this
}

// GetMovePositionOrders returns the MovePositionOrders field value if set, zero value otherwise.
func (o *SubaccountCreateSubAccountFuturesMovePositionV1Resp) GetMovePositionOrders() []SubaccountCreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner {
	if o == nil || IsNil(o.MovePositionOrders) {
		var ret []SubaccountCreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner
		return ret
	}
	return o.MovePositionOrders
}

// GetMovePositionOrdersOk returns a tuple with the MovePositionOrders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountCreateSubAccountFuturesMovePositionV1Resp) GetMovePositionOrdersOk() ([]SubaccountCreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner, bool) {
	if o == nil || IsNil(o.MovePositionOrders) {
		return nil, false
	}
	return o.MovePositionOrders, true
}

// HasMovePositionOrders returns a boolean if a field has been set.
func (o *SubaccountCreateSubAccountFuturesMovePositionV1Resp) HasMovePositionOrders() bool {
	if o != nil && !IsNil(o.MovePositionOrders) {
		return true
	}

	return false
}

// SetMovePositionOrders gets a reference to the given []SubaccountCreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner and assigns it to the MovePositionOrders field.
func (o *SubaccountCreateSubAccountFuturesMovePositionV1Resp) SetMovePositionOrders(v []SubaccountCreateSubAccountFuturesMovePositionV1RespMovePositionOrdersInner) {
	o.MovePositionOrders = v
}

func (o SubaccountCreateSubAccountFuturesMovePositionV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubaccountCreateSubAccountFuturesMovePositionV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MovePositionOrders) {
		toSerialize["movePositionOrders"] = o.MovePositionOrders
	}
	return toSerialize, nil
}

type NullableSubaccountCreateSubAccountFuturesMovePositionV1Resp struct {
	value *SubaccountCreateSubAccountFuturesMovePositionV1Resp
	isSet bool
}

func (v NullableSubaccountCreateSubAccountFuturesMovePositionV1Resp) Get() *SubaccountCreateSubAccountFuturesMovePositionV1Resp {
	return v.value
}

func (v *NullableSubaccountCreateSubAccountFuturesMovePositionV1Resp) Set(val *SubaccountCreateSubAccountFuturesMovePositionV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableSubaccountCreateSubAccountFuturesMovePositionV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableSubaccountCreateSubAccountFuturesMovePositionV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubaccountCreateSubAccountFuturesMovePositionV1Resp(val *SubaccountCreateSubAccountFuturesMovePositionV1Resp) *NullableSubaccountCreateSubAccountFuturesMovePositionV1Resp {
	return &NullableSubaccountCreateSubAccountFuturesMovePositionV1Resp{value: val, isSet: true}
}

func (v NullableSubaccountCreateSubAccountFuturesMovePositionV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubaccountCreateSubAccountFuturesMovePositionV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


