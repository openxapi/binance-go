/*
Binance Sub Account API

OpenAPI specification for Binance exchange - Subaccount API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package subaccount

import (
	"encoding/json"
)

// checks if the SubaccountGetManagedSubaccountAssetV1RespItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubaccountGetManagedSubaccountAssetV1RespItem{}

// SubaccountGetManagedSubaccountAssetV1RespItem struct for SubaccountGetManagedSubaccountAssetV1RespItem
type SubaccountGetManagedSubaccountAssetV1RespItem struct {
	AvailableBalance *string `json:"availableBalance,omitempty"`
	BtcValue *string `json:"btcValue,omitempty"`
	Coin *string `json:"coin,omitempty"`
	InOrder *string `json:"inOrder,omitempty"`
	Name *string `json:"name,omitempty"`
	TotalBalance *string `json:"totalBalance,omitempty"`
}

// NewSubaccountGetManagedSubaccountAssetV1RespItem instantiates a new SubaccountGetManagedSubaccountAssetV1RespItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubaccountGetManagedSubaccountAssetV1RespItem() *SubaccountGetManagedSubaccountAssetV1RespItem {
	this := SubaccountGetManagedSubaccountAssetV1RespItem{}
	return &this
}

// NewSubaccountGetManagedSubaccountAssetV1RespItemWithDefaults instantiates a new SubaccountGetManagedSubaccountAssetV1RespItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubaccountGetManagedSubaccountAssetV1RespItemWithDefaults() *SubaccountGetManagedSubaccountAssetV1RespItem {
	this := SubaccountGetManagedSubaccountAssetV1RespItem{}
	return &this
}

// GetAvailableBalance returns the AvailableBalance field value if set, zero value otherwise.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) GetAvailableBalance() string {
	if o == nil || IsNil(o.AvailableBalance) {
		var ret string
		return ret
	}
	return *o.AvailableBalance
}

// GetAvailableBalanceOk returns a tuple with the AvailableBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) GetAvailableBalanceOk() (*string, bool) {
	if o == nil || IsNil(o.AvailableBalance) {
		return nil, false
	}
	return o.AvailableBalance, true
}

// HasAvailableBalance returns a boolean if a field has been set.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) HasAvailableBalance() bool {
	if o != nil && !IsNil(o.AvailableBalance) {
		return true
	}

	return false
}

// SetAvailableBalance gets a reference to the given string and assigns it to the AvailableBalance field.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) SetAvailableBalance(v string) {
	o.AvailableBalance = &v
}

// GetBtcValue returns the BtcValue field value if set, zero value otherwise.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) GetBtcValue() string {
	if o == nil || IsNil(o.BtcValue) {
		var ret string
		return ret
	}
	return *o.BtcValue
}

// GetBtcValueOk returns a tuple with the BtcValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) GetBtcValueOk() (*string, bool) {
	if o == nil || IsNil(o.BtcValue) {
		return nil, false
	}
	return o.BtcValue, true
}

// HasBtcValue returns a boolean if a field has been set.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) HasBtcValue() bool {
	if o != nil && !IsNil(o.BtcValue) {
		return true
	}

	return false
}

// SetBtcValue gets a reference to the given string and assigns it to the BtcValue field.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) SetBtcValue(v string) {
	o.BtcValue = &v
}

// GetCoin returns the Coin field value if set, zero value otherwise.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) GetCoin() string {
	if o == nil || IsNil(o.Coin) {
		var ret string
		return ret
	}
	return *o.Coin
}

// GetCoinOk returns a tuple with the Coin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) GetCoinOk() (*string, bool) {
	if o == nil || IsNil(o.Coin) {
		return nil, false
	}
	return o.Coin, true
}

// HasCoin returns a boolean if a field has been set.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) HasCoin() bool {
	if o != nil && !IsNil(o.Coin) {
		return true
	}

	return false
}

// SetCoin gets a reference to the given string and assigns it to the Coin field.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) SetCoin(v string) {
	o.Coin = &v
}

// GetInOrder returns the InOrder field value if set, zero value otherwise.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) GetInOrder() string {
	if o == nil || IsNil(o.InOrder) {
		var ret string
		return ret
	}
	return *o.InOrder
}

// GetInOrderOk returns a tuple with the InOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) GetInOrderOk() (*string, bool) {
	if o == nil || IsNil(o.InOrder) {
		return nil, false
	}
	return o.InOrder, true
}

// HasInOrder returns a boolean if a field has been set.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) HasInOrder() bool {
	if o != nil && !IsNil(o.InOrder) {
		return true
	}

	return false
}

// SetInOrder gets a reference to the given string and assigns it to the InOrder field.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) SetInOrder(v string) {
	o.InOrder = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) SetName(v string) {
	o.Name = &v
}

// GetTotalBalance returns the TotalBalance field value if set, zero value otherwise.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) GetTotalBalance() string {
	if o == nil || IsNil(o.TotalBalance) {
		var ret string
		return ret
	}
	return *o.TotalBalance
}

// GetTotalBalanceOk returns a tuple with the TotalBalance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) GetTotalBalanceOk() (*string, bool) {
	if o == nil || IsNil(o.TotalBalance) {
		return nil, false
	}
	return o.TotalBalance, true
}

// HasTotalBalance returns a boolean if a field has been set.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) HasTotalBalance() bool {
	if o != nil && !IsNil(o.TotalBalance) {
		return true
	}

	return false
}

// SetTotalBalance gets a reference to the given string and assigns it to the TotalBalance field.
func (o *SubaccountGetManagedSubaccountAssetV1RespItem) SetTotalBalance(v string) {
	o.TotalBalance = &v
}

func (o SubaccountGetManagedSubaccountAssetV1RespItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubaccountGetManagedSubaccountAssetV1RespItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableBalance) {
		toSerialize["availableBalance"] = o.AvailableBalance
	}
	if !IsNil(o.BtcValue) {
		toSerialize["btcValue"] = o.BtcValue
	}
	if !IsNil(o.Coin) {
		toSerialize["coin"] = o.Coin
	}
	if !IsNil(o.InOrder) {
		toSerialize["inOrder"] = o.InOrder
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.TotalBalance) {
		toSerialize["totalBalance"] = o.TotalBalance
	}
	return toSerialize, nil
}

type NullableSubaccountGetManagedSubaccountAssetV1RespItem struct {
	value *SubaccountGetManagedSubaccountAssetV1RespItem
	isSet bool
}

func (v NullableSubaccountGetManagedSubaccountAssetV1RespItem) Get() *SubaccountGetManagedSubaccountAssetV1RespItem {
	return v.value
}

func (v *NullableSubaccountGetManagedSubaccountAssetV1RespItem) Set(val *SubaccountGetManagedSubaccountAssetV1RespItem) {
	v.value = val
	v.isSet = true
}

func (v NullableSubaccountGetManagedSubaccountAssetV1RespItem) IsSet() bool {
	return v.isSet
}

func (v *NullableSubaccountGetManagedSubaccountAssetV1RespItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubaccountGetManagedSubaccountAssetV1RespItem(val *SubaccountGetManagedSubaccountAssetV1RespItem) *NullableSubaccountGetManagedSubaccountAssetV1RespItem {
	return &NullableSubaccountGetManagedSubaccountAssetV1RespItem{value: val, isSet: true}
}

func (v NullableSubaccountGetManagedSubaccountAssetV1RespItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubaccountGetManagedSubaccountAssetV1RespItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


