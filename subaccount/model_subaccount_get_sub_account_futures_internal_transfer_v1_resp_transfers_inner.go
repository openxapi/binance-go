/*
Binance Sub Account API

OpenAPI specification for Binance exchange - Subaccount API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package subaccount

import (
	"encoding/json"
)

// checks if the SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner{}

// SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner struct for SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner
type SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner struct {
	Asset *string `json:"asset,omitempty"`
	From *string `json:"from,omitempty"`
	Qty *string `json:"qty,omitempty"`
	Time *int64 `json:"time,omitempty"`
	To *string `json:"to,omitempty"`
	TranId *int64 `json:"tranId,omitempty"`
}

// NewSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner instantiates a new SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner() *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner {
	this := SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner{}
	return &this
}

// NewSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInnerWithDefaults instantiates a new SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInnerWithDefaults() *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner {
	this := SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner{}
	return &this
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) GetAsset() string {
	if o == nil || IsNil(o.Asset) {
		var ret string
		return ret
	}
	return *o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) GetAssetOk() (*string, bool) {
	if o == nil || IsNil(o.Asset) {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) HasAsset() bool {
	if o != nil && !IsNil(o.Asset) {
		return true
	}

	return false
}

// SetAsset gets a reference to the given string and assigns it to the Asset field.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) SetAsset(v string) {
	o.Asset = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) GetFrom() string {
	if o == nil || IsNil(o.From) {
		var ret string
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) GetFromOk() (*string, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given string and assigns it to the From field.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) SetFrom(v string) {
	o.From = &v
}

// GetQty returns the Qty field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) GetQty() string {
	if o == nil || IsNil(o.Qty) {
		var ret string
		return ret
	}
	return *o.Qty
}

// GetQtyOk returns a tuple with the Qty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) GetQtyOk() (*string, bool) {
	if o == nil || IsNil(o.Qty) {
		return nil, false
	}
	return o.Qty, true
}

// HasQty returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) HasQty() bool {
	if o != nil && !IsNil(o.Qty) {
		return true
	}

	return false
}

// SetQty gets a reference to the given string and assigns it to the Qty field.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) SetQty(v string) {
	o.Qty = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) GetTime() int64 {
	if o == nil || IsNil(o.Time) {
		var ret int64
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) GetTimeOk() (*int64, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int64 and assigns it to the Time field.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) SetTime(v int64) {
	o.Time = &v
}

// GetTo returns the To field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) GetTo() string {
	if o == nil || IsNil(o.To) {
		var ret string
		return ret
	}
	return *o.To
}

// GetToOk returns a tuple with the To field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) GetToOk() (*string, bool) {
	if o == nil || IsNil(o.To) {
		return nil, false
	}
	return o.To, true
}

// HasTo returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) HasTo() bool {
	if o != nil && !IsNil(o.To) {
		return true
	}

	return false
}

// SetTo gets a reference to the given string and assigns it to the To field.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) SetTo(v string) {
	o.To = &v
}

// GetTranId returns the TranId field value if set, zero value otherwise.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) GetTranId() int64 {
	if o == nil || IsNil(o.TranId) {
		var ret int64
		return ret
	}
	return *o.TranId
}

// GetTranIdOk returns a tuple with the TranId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) GetTranIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TranId) {
		return nil, false
	}
	return o.TranId, true
}

// HasTranId returns a boolean if a field has been set.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) HasTranId() bool {
	if o != nil && !IsNil(o.TranId) {
		return true
	}

	return false
}

// SetTranId gets a reference to the given int64 and assigns it to the TranId field.
func (o *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) SetTranId(v int64) {
	o.TranId = &v
}

func (o SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Asset) {
		toSerialize["asset"] = o.Asset
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.Qty) {
		toSerialize["qty"] = o.Qty
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.To) {
		toSerialize["to"] = o.To
	}
	if !IsNil(o.TranId) {
		toSerialize["tranId"] = o.TranId
	}
	return toSerialize, nil
}

type NullableSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner struct {
	value *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner
	isSet bool
}

func (v NullableSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) Get() *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner {
	return v.value
}

func (v *NullableSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) Set(val *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner(val *SubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) *NullableSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner {
	return &NullableSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner{value: val, isSet: true}
}

func (v NullableSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubaccountGetSubAccountFuturesInternalTransferV1RespTransfersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


