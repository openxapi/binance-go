/*
Binance Algorithmic Trading API

OpenAPI specification for Binance exchange - Algo API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package algo

import (
	"encoding/json"
)

// checks if the AlgoDeleteAlgoSpotOrderV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlgoDeleteAlgoSpotOrderV1Resp{}

// AlgoDeleteAlgoSpotOrderV1Resp struct for AlgoDeleteAlgoSpotOrderV1Resp
type AlgoDeleteAlgoSpotOrderV1Resp struct {
	AlgoId *int64 `json:"algoId,omitempty"`
	Code *int32 `json:"code,omitempty"`
	Msg *string `json:"msg,omitempty"`
	Success *bool `json:"success,omitempty"`
}

// NewAlgoDeleteAlgoSpotOrderV1Resp instantiates a new AlgoDeleteAlgoSpotOrderV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlgoDeleteAlgoSpotOrderV1Resp() *AlgoDeleteAlgoSpotOrderV1Resp {
	this := AlgoDeleteAlgoSpotOrderV1Resp{}
	return &this
}

// NewAlgoDeleteAlgoSpotOrderV1RespWithDefaults instantiates a new AlgoDeleteAlgoSpotOrderV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlgoDeleteAlgoSpotOrderV1RespWithDefaults() *AlgoDeleteAlgoSpotOrderV1Resp {
	this := AlgoDeleteAlgoSpotOrderV1Resp{}
	return &this
}

// GetAlgoId returns the AlgoId field value if set, zero value otherwise.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) GetAlgoId() int64 {
	if o == nil || IsNil(o.AlgoId) {
		var ret int64
		return ret
	}
	return *o.AlgoId
}

// GetAlgoIdOk returns a tuple with the AlgoId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) GetAlgoIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AlgoId) {
		return nil, false
	}
	return o.AlgoId, true
}

// HasAlgoId returns a boolean if a field has been set.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) HasAlgoId() bool {
	if o != nil && !IsNil(o.AlgoId) {
		return true
	}

	return false
}

// SetAlgoId gets a reference to the given int64 and assigns it to the AlgoId field.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) SetAlgoId(v int64) {
	o.AlgoId = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) SetCode(v int32) {
	o.Code = &v
}

// GetMsg returns the Msg field value if set, zero value otherwise.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) GetMsg() string {
	if o == nil || IsNil(o.Msg) {
		var ret string
		return ret
	}
	return *o.Msg
}

// GetMsgOk returns a tuple with the Msg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) GetMsgOk() (*string, bool) {
	if o == nil || IsNil(o.Msg) {
		return nil, false
	}
	return o.Msg, true
}

// HasMsg returns a boolean if a field has been set.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) HasMsg() bool {
	if o != nil && !IsNil(o.Msg) {
		return true
	}

	return false
}

// SetMsg gets a reference to the given string and assigns it to the Msg field.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) SetMsg(v string) {
	o.Msg = &v
}

// GetSuccess returns the Success field value if set, zero value otherwise.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) GetSuccess() bool {
	if o == nil || IsNil(o.Success) {
		var ret bool
		return ret
	}
	return *o.Success
}

// GetSuccessOk returns a tuple with the Success field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) GetSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.Success) {
		return nil, false
	}
	return o.Success, true
}

// HasSuccess returns a boolean if a field has been set.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) HasSuccess() bool {
	if o != nil && !IsNil(o.Success) {
		return true
	}

	return false
}

// SetSuccess gets a reference to the given bool and assigns it to the Success field.
func (o *AlgoDeleteAlgoSpotOrderV1Resp) SetSuccess(v bool) {
	o.Success = &v
}

func (o AlgoDeleteAlgoSpotOrderV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlgoDeleteAlgoSpotOrderV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlgoId) {
		toSerialize["algoId"] = o.AlgoId
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Msg) {
		toSerialize["msg"] = o.Msg
	}
	if !IsNil(o.Success) {
		toSerialize["success"] = o.Success
	}
	return toSerialize, nil
}

type NullableAlgoDeleteAlgoSpotOrderV1Resp struct {
	value *AlgoDeleteAlgoSpotOrderV1Resp
	isSet bool
}

func (v NullableAlgoDeleteAlgoSpotOrderV1Resp) Get() *AlgoDeleteAlgoSpotOrderV1Resp {
	return v.value
}

func (v *NullableAlgoDeleteAlgoSpotOrderV1Resp) Set(val *AlgoDeleteAlgoSpotOrderV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableAlgoDeleteAlgoSpotOrderV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableAlgoDeleteAlgoSpotOrderV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlgoDeleteAlgoSpotOrderV1Resp(val *AlgoDeleteAlgoSpotOrderV1Resp) *NullableAlgoDeleteAlgoSpotOrderV1Resp {
	return &NullableAlgoDeleteAlgoSpotOrderV1Resp{value: val, isSet: true}
}

func (v NullableAlgoDeleteAlgoSpotOrderV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlgoDeleteAlgoSpotOrderV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


