/*
Binance Algorithmic Trading API

OpenAPI specification for Binance exchange - Algo API

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package algo

import (
	"encoding/json"
)

// checks if the AlgoGetAlgoFuturesHistoricalOrdersV1Resp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlgoGetAlgoFuturesHistoricalOrdersV1Resp{}

// AlgoGetAlgoFuturesHistoricalOrdersV1Resp struct for AlgoGetAlgoFuturesHistoricalOrdersV1Resp
type AlgoGetAlgoFuturesHistoricalOrdersV1Resp struct {
	Orders []AlgoGetAlgoFuturesHistoricalOrdersV1RespOrdersInner `json:"orders,omitempty"`
	Total *int32 `json:"total,omitempty"`
}

// NewAlgoGetAlgoFuturesHistoricalOrdersV1Resp instantiates a new AlgoGetAlgoFuturesHistoricalOrdersV1Resp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlgoGetAlgoFuturesHistoricalOrdersV1Resp() *AlgoGetAlgoFuturesHistoricalOrdersV1Resp {
	this := AlgoGetAlgoFuturesHistoricalOrdersV1Resp{}
	return &this
}

// NewAlgoGetAlgoFuturesHistoricalOrdersV1RespWithDefaults instantiates a new AlgoGetAlgoFuturesHistoricalOrdersV1Resp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlgoGetAlgoFuturesHistoricalOrdersV1RespWithDefaults() *AlgoGetAlgoFuturesHistoricalOrdersV1Resp {
	this := AlgoGetAlgoFuturesHistoricalOrdersV1Resp{}
	return &this
}

// GetOrders returns the Orders field value if set, zero value otherwise.
func (o *AlgoGetAlgoFuturesHistoricalOrdersV1Resp) GetOrders() []AlgoGetAlgoFuturesHistoricalOrdersV1RespOrdersInner {
	if o == nil || IsNil(o.Orders) {
		var ret []AlgoGetAlgoFuturesHistoricalOrdersV1RespOrdersInner
		return ret
	}
	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlgoGetAlgoFuturesHistoricalOrdersV1Resp) GetOrdersOk() ([]AlgoGetAlgoFuturesHistoricalOrdersV1RespOrdersInner, bool) {
	if o == nil || IsNil(o.Orders) {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *AlgoGetAlgoFuturesHistoricalOrdersV1Resp) HasOrders() bool {
	if o != nil && !IsNil(o.Orders) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []AlgoGetAlgoFuturesHistoricalOrdersV1RespOrdersInner and assigns it to the Orders field.
func (o *AlgoGetAlgoFuturesHistoricalOrdersV1Resp) SetOrders(v []AlgoGetAlgoFuturesHistoricalOrdersV1RespOrdersInner) {
	o.Orders = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *AlgoGetAlgoFuturesHistoricalOrdersV1Resp) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlgoGetAlgoFuturesHistoricalOrdersV1Resp) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *AlgoGetAlgoFuturesHistoricalOrdersV1Resp) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *AlgoGetAlgoFuturesHistoricalOrdersV1Resp) SetTotal(v int32) {
	o.Total = &v
}

func (o AlgoGetAlgoFuturesHistoricalOrdersV1Resp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlgoGetAlgoFuturesHistoricalOrdersV1Resp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Orders) {
		toSerialize["orders"] = o.Orders
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableAlgoGetAlgoFuturesHistoricalOrdersV1Resp struct {
	value *AlgoGetAlgoFuturesHistoricalOrdersV1Resp
	isSet bool
}

func (v NullableAlgoGetAlgoFuturesHistoricalOrdersV1Resp) Get() *AlgoGetAlgoFuturesHistoricalOrdersV1Resp {
	return v.value
}

func (v *NullableAlgoGetAlgoFuturesHistoricalOrdersV1Resp) Set(val *AlgoGetAlgoFuturesHistoricalOrdersV1Resp) {
	v.value = val
	v.isSet = true
}

func (v NullableAlgoGetAlgoFuturesHistoricalOrdersV1Resp) IsSet() bool {
	return v.isSet
}

func (v *NullableAlgoGetAlgoFuturesHistoricalOrdersV1Resp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlgoGetAlgoFuturesHistoricalOrdersV1Resp(val *AlgoGetAlgoFuturesHistoricalOrdersV1Resp) *NullableAlgoGetAlgoFuturesHistoricalOrdersV1Resp {
	return &NullableAlgoGetAlgoFuturesHistoricalOrdersV1Resp{value: val, isSet: true}
}

func (v NullableAlgoGetAlgoFuturesHistoricalOrdersV1Resp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlgoGetAlgoFuturesHistoricalOrdersV1Resp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


